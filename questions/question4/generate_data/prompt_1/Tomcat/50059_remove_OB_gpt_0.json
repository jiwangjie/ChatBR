{"id": "chatcmpl-8GeN61UlwpCA49wgjA4Sui8h8uB7B", "object": "chat.completion", "created": 1698979128, "model": "gpt-3.5-turbo-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\"id\": \"50059\", \"title\": \"Bug 50059 - Resources not served from /WEBINF/lib/{.jar}/METAINF/resources with metadatacomplete=true\", \"description\": \"Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\\\"true\\\" is set in web.xml.\\n\\nTo reproduce the issue, follow these steps:\\n1. Create a Servlet 3.0 web application named 'foo' with the metadatacomplete=\\\"true\\\" attribute set on the webapp element in the /WEB-INF/web.xml file.\\n2. The jar file (let's call it 'bar.jar') should be placed in /WEB-INF/lib directory.\\n\\nExpected behavior:\\n- When the web application is started in Tomcat 7.0.2, accessing http://localhost:8080/foo/index.html should return a 200 response and serve the index.html file.\\n\\nActual behavior:\\n- Accessing http://localhost:8080/foo/index.html returns a 404 response error.\\n\\nFurthermore, modifying the web.xml to set metadatacomplete=\\\"false\\\" and restarting the application resolves the issue, and /foo/index.html responds as expected.\\n\\nAdditionally, it's worth noting that I tested the same web application with Glassfish v3.0.1, and it works as expected regardless of the value set in the metadatacomplete attribute.\\n\\nUpon reviewing the Servlet 3.0 specification, it seems that the metadatacomplete attribute only regulates annotation and web fragment processing.\"}"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 449, "completion_tokens": 317, "total_tokens": 766}, "origin": {"input_prompt": "Your role is a senior software engineer, you are very good at analyzing and writing bug reports.\nIt is possible that the bug report may lack sufficient details in the OB, EB, and SR sections.  In such cases, your task is to infer the appropriate details based on the context and supplement the bug report to ensure it contains clear and complete OB/EB/SR statements.  Also, improve the wording of these statements for clarity where possible.\nTo facilitate this process, please provide your responses in JSON format as follows:\n{\"id\": \"\", \"title\": \"\", \"description\": \"\", \"OB\": \"\", \"EB\": \"\", \"SR\": \"\"}", "input_content": "<BUG REPORT>\n{'id': '50059', 'title': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml', 'description': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml Make a Servlet 3.0 webapp (lets name it foo) with metadatacomplete=\"true\" attribute set on the webapp element in the /WEBIBNF/web.xml.2. ', 'OB': '', 'EB': 'The jar should be placed in /WEBINF/lib (lets name it bar.jar).3. ', 'SR': 'To reproduce:1. Make a jar holding a single /METAINF/resources/index.html file. Start the web app in Tomcat 7.0.2 and in browser go to http://localhost:8080/foo/index.html.Expected result: 200 response and index.html served.Actual result: 404If you modify the web.xml to metadatacomplete=\"false\" and restart the app now /foo/index.html will respond as expected.I tried the same webapp with Glassfish v3.0.1 and it works as expected regardless what I set in metadatacomplete attribute.I made a quick look in the servlet 3.0 spec and as far as I can see metadatacomplete only regulates annotation and web fragment processing. '}"}}