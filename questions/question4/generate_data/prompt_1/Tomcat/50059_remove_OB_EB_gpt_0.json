{"id": "chatcmpl-8Gf5A0I07Yl70UIBMgkMnf4BuofCJ", "object": "chat.completion", "created": 1698981860, "model": "gpt-3.5-turbo-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\"id\": \"50059\", \"title\": \"Bug 50059: Resources not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\\\"true\\\" is set in web.xml\", \"description\": \"Bug 50059: Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\\\"true\\\" is set in web.xml. When a Servlet 3.0 webapp with the metadatacomplete=\\\"true\\\" attribute set on the webapp element in the /WEBIBNF/web.xml, the resources located in /METAINF/resources are not served properly.\", \"OB\": \"The resources located in /METAINF/resources should be served even when the metadatacomplete=\\\"true\\\" attribute is set in the web.xml.\", \"EB\": \"The resources located in /METAINF/resources are not being served when the metadatacomplete=\\\"true\\\" attribute is set in the web.xml.\", \"SR\": \"To reproduce:\\n1. Create a jar file containing a single index.html file located at /METAINF/resources.\\n2. Start the web app in Tomcat 7.0.2.\\n3. In a browser, go to http://localhost:8080/foo/index.html.\\n\\nExpected result: The server should respond with a 200 status code and serve the index.html file.\\nActual result: The server responds with a 404 status code, indicating that the resource was not found.\\n\\nAdditional information:\\n- Modifying the web.xml to set the metadatacomplete=\\\"false\\\" attribute and restarting the app allows /foo/index.html to be served as expected.\\n- The issue was reproduced with Tomcat 7.0.2, but not with Glassfish v3.0.1.\\n- According to the Servlet 3.0 specification, the metadatacomplete attribute only regulates annotation and web fragment processing, but in this case, it seems to affect the serving of resources as well.\"}"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 429, "completion_tokens": 405, "total_tokens": 834}, "origin": {"input_prompt": "Your role is a senior software engineer, you are very good at analyzing and writing bug reports.\nIt is possible that the bug report may lack sufficient details in the OB, EB, and SR sections.  In such cases, your task is to infer the appropriate details based on the context and supplement the bug report to ensure it contains clear and complete OB/EB/SR statements.  Also, improve the wording of these statements for clarity where possible.\nTo facilitate this process, please provide your responses in JSON format as follows:\n{\"id\": \"\", \"title\": \"\", \"description\": \"\", \"OB\": \"\", \"EB\": \"\", \"SR\": \"\"}", "input_content": "<BUG REPORT>\n{'id': '50059', 'title': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml', 'description': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml Make a Servlet 3.0 webapp (lets name it foo) with metadatacomplete=\"true\" attribute set on the webapp element in the /WEBIBNF/web.xml.2. ', 'OB': '', 'EB': '', 'SR': 'To reproduce:1. Make a jar holding a single /METAINF/resources/index.html file. Start the web app in Tomcat 7.0.2 and in browser go to http://localhost:8080/foo/index.html.Expected result: 200 response and index.html served.Actual result: 404If you modify the web.xml to metadatacomplete=\"false\" and restart the app now /foo/index.html will respond as expected.I tried the same webapp with Glassfish v3.0.1 and it works as expected regardless what I set in metadatacomplete attribute.I made a quick look in the servlet 3.0 spec and as far as I can see metadatacomplete only regulates annotation and web fragment processing. '}"}}