{"id": "chatcmpl-8Ge7KcZL2MmeXiXNITYoAjlT3oIBN", "object": "chat.completion", "created": 1698978150, "model": "gpt-3.5-turbo-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\"id\": \"50059\", \n\"title\": \"Bug 50059: Resources not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\\\"true\\\" is set in web.xml\", \n\"description\": \"Bug 50059: Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\\\"true\\\" is set in web.xml. Make a Servlet 3.0 webapp (let's name it foo) with the metadatacomplete=\\\"true\\\" attribute set on the webapp element in the /WEBIBNF/web.xml.\", \n\"OB\": \"Start the foo web app in Tomcat 7.0.2 and go to http://localhost:8080/foo/index.html in a browser. The expected result is a 200 response with index.html served. However, the actual result is a 404 error. If the web.xml is modified to metadatacomplete=\\\"false\\\" and the app is restarted, accessing /foo/index.html will respond as expected. Testing the same webapp with Glassfish v3.0.1 shows that it works as expected regardless of the metadatacomplete attribute. \", \n\"EB\": \"The issue occurs when a Servlet 3.0 webapp has metadatacomplete=\\\"true\\\" set in the web.xml file. Resources located at /WEBINF/lib/{.jar}/METAINF/resources are not served properly.\", \n\"SR\": \"To reproduce the issue: \\n1. Create a jar file containing a single /METAINF/resources/index.html file. \\n2. Start the foo web app in Tomcat 7.0.2. \\n3. Access http://localhost:8080/foo/index.html in a browser. The expected result is a 200 response with index.html served, but the actual result is a 404 error. \\n4. Modify the web.xml to include metadatacomplete=\\\"false\\\" and restart the app. Accessing /foo/index.html will now respond as expected.\"}"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 589, "completion_tokens": 409, "total_tokens": 998}, "origin": {"input_prompt": "Your role is a senior software engineer, you are very good at analyzing and writing bug reports.\nIt is possible that the bug report may lack sufficient details in the OB, EB, and SR sections.  In such cases, your task is to infer the appropriate details based on the context and supplement the bug report to ensure it contains clear and complete OB/EB/SR statements.  Also, improve the wording of these statements for clarity where possible.\nTo facilitate this process, please provide your responses in JSON format as follows:\n{\"id\": \"\", \"title\": \"\", \"description\": \"\", \"OB\": \"\", \"EB\": \"\", \"SR\": \"\"}", "input_content": "<BUG REPORT>\n{'id': '50059', 'title': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml', 'description': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml Make a Servlet 3.0 webapp (lets name it foo) with metadatacomplete=\"true\" attribute set on the webapp element in the /WEBIBNF/web.xml.2. ', 'OB': 'Start the web app in Tomcat 7.0.2 and in browser go to http://localhost:8080/foo/index.html.Expected result: 200 response and index.html served.Actual result: 404If you modify the web.xml to metadatacomplete=\"false\" and restart the app now /foo/index.html will respond as expected.I tried the same webapp with Glassfish v3.0.1 and it works as expected regardless what I set in metadatacomplete attribute.I made a quick look in the servlet 3.0 spec and as far as I can see metadatacomplete only regulates annotation and web fragment processing. In the example bar.jar has nothing to do with annotations and it is not a web fragment either but it is still handled differently depending on the metadatacomplete attribute. ', 'EB': '', 'SR': 'To reproduce:1. Make a jar holding a single /METAINF/resources/index.html file. Start the web app in Tomcat 7.0.2 and in browser go to http://localhost:8080/foo/index.html.Expected result: 200 response and index.html served.Actual result: 404If you modify the web.xml to metadatacomplete=\"false\" and restart the app now /foo/index.html will respond as expected.I tried the same webapp with Glassfish v3.0.1 and it works as expected regardless what I set in metadatacomplete attribute.I made a quick look in the servlet 3.0 spec and as far as I can see metadatacomplete only regulates annotation and web fragment processing. '}"}}