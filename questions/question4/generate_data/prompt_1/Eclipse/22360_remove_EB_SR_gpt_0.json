{"id": "chatcmpl-8GN6uWlsYlZi7dYtucdVCRzkvFkwZ", "object": "chat.completion", "created": 1698912776, "model": "gpt-3.5-turbo-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\"id\": \"22360\", \n\"title\": \"Bug 22360[Fonts] FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource\", \n\"description\": \"Bug 22360[Fonts] FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource. Therefore, all the resources that are being looked up are only relative to the location of the FontRegistry class (org.eclipse.jface.resource path). It can be remedied if FontRegistry took a client class (or class loader) as an additional parameter to the constructor.\", \n\"OB\": \"I get a MissingResourceException when I try to create a FontRegistry instance for my application. Here is the code I am using:\\n\\ncom.company.product.MyClass\\npublic void createFontRegistry(){\\n    FontRegistry fonts = new FontRegistry(\\\"com.company.product.fonts\\\");\\n}\\n\\nI have a file named `fonts.properties` in the `com/company/product/` folder. However, if I try the following code instead:\\n\\ncom.company.product.MyClass\\npublic void createFontRegistry(){\\n    ResourceBundle fonts = ResourceBundle.getBundle(\\\"com.company.product.fonts\\\");\\n}\\n\\nThere is no exception. Moreover, if I create a complete copy of the FontRegistry class in my `com.company.product` package, then it works. My guess is that it is a bug in the FontRegistry. It tries to load the fonts resource bundle, but the FontRegistry's class loader is used to do that (see `readResourceBundle(String)` method in FontRegistry).\", \n\"EB\": \"The FontRegistry class does not allow the instantiation of fonts using resources located outside the `org.eclipse.jface.resource` path. This limitation causes a `MissingResourceException` when attempting to create a FontRegistry instance with resources from a different location.\", \n\"SR\": \"To fix this issue, modify the FontRegistry class to accept a client class (or class loader) as an additional parameter in the constructor. This will allow the FontRegistry to load resources from any location specified by the client, rather than being limited to the `org.eclipse.jface.resource` path.\"}"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 443, "completion_tokens": 439, "total_tokens": 882}, "origin": {"input_prompt": "Your role is a senior software engineer, you are very good at analyzing and writing bug reports.\nIt is possible that the bug report may lack sufficient details in the OB, EB, and SR sections.  In such cases, your task is to infer the appropriate details based on the context and supplement the bug report to ensure it contains clear and complete OB/EB/SR statements.  Also, improve the wording of these statements for clarity where possible.\nTo facilitate this process, please provide your responses in JSON format as follows:\n{\"id\": \"\", \"title\": \"\", \"description\": \"\", \"OB\": \"\", \"EB\": \"\", \"SR\": \"\"}", "input_content": "<BUG REPORT>\n{'id': '22360', 'title': 'Bug 22360[Fonts] FontRegistry can not instantiated using resources outside org.eclipse.jface.resource', 'description': 'Bug 22360[Fonts] FontRegistry can not instantiated using resources outside org.eclipse.jface.resource Therefore all the resourcesthat are being looked up are the only ones relative to the location of theFontRegistry classorg.eclipse.jface.resource path.It can be remedied if FontRegistry took a client class (or class loader) as anadditional parameter to the constructor. ', 'OB': 'I get MissingResourceException when I am trying to create FontRegistry instancefor my application as follows:com.company.product.MyClasspublic void createFontRegistry(){FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");}where I do have a file fonts.properties in my com/company/product/folder.However, if I try this instead:com.company.product.MyClasspublic void createFontRegistry(){ResourceBundle fonts = ResourceBundle.getBundle((\"com.company.product.fonts\");}There is no exception.Moreover, if I create a complete copy of the FontRegsitry class in mycom.company.product packagethen it works.My guess isit is a bug in the FontRegistry. It tries to load the fontsresource bundle, but the FontRegistry\\'s class loader is used to do that (seereadResourceBundle(String) FontRegistry method). ', 'EB': '', 'SR': ''}"}}