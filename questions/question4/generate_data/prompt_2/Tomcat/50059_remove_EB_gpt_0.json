{"id": "chatcmpl-8H7X5V5LjC7CG6DN9C9ZDbNDTtGRv", "object": "chat.completion", "created": 1699091223, "model": "gpt-3.5-turbo-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\"id\": \"50059\", \"title\": \"Bug 50059: Resources not served when metadatacomplete=\\\"true\\\"\", \n\"description\": \"Bug 50059: Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\\\"true\\\" is set in web.xml.\\n\\nTo reproduce the bug, follow these steps:\\n\\n1. Make a Servlet 3.0 web app (let's name it foo) with metadatacomplete=\\\"true\\\" attribute set on the webapp element in the /WEBIBNF/web.xml.\\n\\nOB: Start the web app in Tomcat 7.0.2 and in the browser go to http://localhost:8080/foo/index.html.\\nExpected result: 200 response and index.html served.\\n\\nEB: Actual result: 404 error is returned. The index.html file is not served.\\n\\nSR: Modify the web.xml to have metadatacomplete=\\\"false\\\" and restart the app. Then go to http://localhost:8080/foo/index.html. The expected result is a 200 response and index.html should be served.\\n\\nAdditional information: When the webapp's metadatacomplete attribute is set to true, the resources in the /METAINF/ directory of the .jar file located in /WEBINF/lib/ are not served. This behavior is different from Glassfish v3.0.1, where the resources are served regardless of the metadatacomplete attribute setting.\", \n\"OB\": \"Start the web app in Tomcat 7.0.2 and in the browser go to http://localhost:8080/foo/index.html. Expected result: 200 response and index.html served.\", \n\"EB\": \"Actual result: 404 error is returned. The index.html file is not served.\", \n\"SR\": \"Modify the web.xml to have metadatacomplete=\\\"false\\\" and restart the app. Then go to http://localhost:8080/foo/index.html. The expected result is a 200 response and index.html should be served.\"}"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 544, "completion_tokens": 418, "total_tokens": 962}, "origin": {"input_prompt": "Your task is to infer the appropriate details based on the context and supplement the bug report to ensure it contains clear and complete OB/EB/SR statements.  Also, improve the wording of these statements for clarity where possible.\nTo facilitate this process, please provide your responses in JSON format as follows:\n{\"id\": \"\", \"title\": \"\", \"description\": \"\", \"OB\": \"\", \"EB\": \"\", \"SR\": \"\"}", "input_content": "<BUG REPORT>\n{'id': '50059', 'title': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml', 'description': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml Make a Servlet 3.0 webapp (lets name it foo) with metadatacomplete=\"true\" attribute set on the webapp element in the /WEBIBNF/web.xml.2. ', 'OB': 'Start the web app in Tomcat 7.0.2 and in browser go to http://localhost:8080/foo/index.html.Expected result: 200 response and index.html served.Actual result: 404If you modify the web.xml to metadatacomplete=\"false\" and restart the app now /foo/index.html will respond as expected.I tried the same webapp with Glassfish v3.0.1 and it works as expected regardless what I set in metadatacomplete attribute.I made a quick look in the servlet 3.0 spec and as far as I can see metadatacomplete only regulates annotation and web fragment processing. In the example bar.jar has nothing to do with annotations and it is not a web fragment either but it is still handled differently depending on the metadatacomplete attribute. ', 'EB': '', 'SR': 'To reproduce:1. Make a jar holding a single /METAINF/resources/index.html file. Start the web app in Tomcat 7.0.2 and in browser go to http://localhost:8080/foo/index.html.Expected result: 200 response and index.html served.Actual result: 404If you modify the web.xml to metadatacomplete=\"false\" and restart the app now /foo/index.html will respond as expected.I tried the same webapp with Glassfish v3.0.1 and it works as expected regardless what I set in metadatacomplete attribute.I made a quick look in the servlet 3.0 spec and as far as I can see metadatacomplete only regulates annotation and web fragment processing. '}"}}