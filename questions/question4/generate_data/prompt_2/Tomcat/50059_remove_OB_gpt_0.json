{"id": "chatcmpl-8H7dI3KJFYbhhmCabqC9G8Rh1quUw", "object": "chat.completion", "created": 1699091608, "model": "gpt-3.5-turbo-0613", "choices": [{"index": 0, "message": {"role": "assistant", "content": "{\"id\": \"50059\", \"title\": \"Resources not served from /WEBINF/lib/{.jar}/METAINF/resources when metadatacomplete=\\\"true\\\" is set in web.xml\", \"description\": \"When metadatacomplete=\\\"true\\\" is set in the web.xml file, resources are not served from /WEBINF/lib/{.jar}/METAINF/resources. To reproduce the issue: \\n\\n1. Create a Servlet 3.0 web application (let's call it \\\"foo\\\") with the metadatacomplete=\\\"true\\\" attribute set on the webapp element in the /WEBINF/web.xml file.\\n\\n2. Place the jar file (let's call it \\\"bar.jar\\\") in the /WEBINF/lib directory.\\n\\n3. Make a jar file that contains a single /METAINF/resources/index.html file.\\n\\n4. Start the web app in Tomcat 7.0.2 and in the browser, navigate to http://localhost:8080/foo/index.html.\\n\\nExpected result: The server should respond with a 200 status code and serve the index.html file.\\n\\nActual result: The server responds with 404 status code and the index.html file is not served.\\n\\nIf you modify the web.xml file to set metadatacomplete=\\\"false\\\" and restart the app, the /foo/index.html will respond as expected. Note that when the same web app is tested with Glassfish v3.0.1, it works as expected regardless of the metadatacomplete attribute setting.\\n\\nUpon inspecting the servlet 3.0 specification, it appears that the metadatacomplete attribute only regulates annotation and web fragment processing.\", \"OB\": \"The Servlet 3.0 web app (foo) has metadatacomplete=\\\"true\\\" set in the /WEBINF/web.xml file.\", \"EB\": \"The jar file (bar.jar) needs to be placed in the /WEBINF/lib directory.\", \"SR\": \"To reproduce the issue: \\n\\n1. Create a jar file that contains a single /METAINF/resources/index.html file.\\n\\n2. Start the web app (foo) in Tomcat 7.0.2.\\n\\n3. In the browser, navigate to http://localhost:8080/foo/index.html.\\n\\nExpected result: The server should respond with a 200 status code and serve the index.html file.\\n\\nActual result: The server responds with a 404 status code and the index.html file is not served.\\n\\nIf you modify the /WEBINF/web.xml file to set metadatacomplete=\\\"false\\\" and restart the app, the /foo/index.html will respond as expected. Note that when the same web app is tested with Glassfish v3.0.1, it works as expected regardless of the metadatacomplete attribute setting.\\n\\nUpon inspecting the servlet 3.0 specification, it appears that the metadatacomplete attribute only regulates annotation and web fragment processing.\"}"}, "finish_reason": "stop"}], "usage": {"prompt_tokens": 404, "completion_tokens": 604, "total_tokens": 1008}, "origin": {"input_prompt": "Your task is to infer the appropriate details based on the context and supplement the bug report to ensure it contains clear and complete OB/EB/SR statements.  Also, improve the wording of these statements for clarity where possible.\nTo facilitate this process, please provide your responses in JSON format as follows:\n{\"id\": \"\", \"title\": \"\", \"description\": \"\", \"OB\": \"\", \"EB\": \"\", \"SR\": \"\"}", "input_content": "<BUG REPORT>\n{'id': '50059', 'title': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml', 'description': 'Bug 50059Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml Make a Servlet 3.0 webapp (lets name it foo) with metadatacomplete=\"true\" attribute set on the webapp element in the /WEBIBNF/web.xml.2. ', 'OB': '', 'EB': 'The jar should be placed in /WEBINF/lib (lets name it bar.jar).3. ', 'SR': 'To reproduce:1. Make a jar holding a single /METAINF/resources/index.html file. Start the web app in Tomcat 7.0.2 and in browser go to http://localhost:8080/foo/index.html.Expected result: 200 response and index.html served.Actual result: 404If you modify the web.xml to metadatacomplete=\"false\" and restart the app now /foo/index.html will respond as expected.I tried the same webapp with Glassfish v3.0.1 and it works as expected regardless what I set in metadatacomplete attribute.I made a quick look in the servlet 3.0 spec and as far as I can see metadatacomplete only regulates annotation and web fragment processing. '}"}}