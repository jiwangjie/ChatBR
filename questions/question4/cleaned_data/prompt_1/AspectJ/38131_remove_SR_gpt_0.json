{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with change in the underlying Eclipse compiler. \n\nTo reproduce the issue, follow these steps:\n1. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\tpublic static void main(String[] args) {\n\t\tSystem.out.println(\"Hello\");\n\t}\n}\n\n2. Then compile using the following command: ajc subpackage\\Test.java\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. subpackage\\Test.java or javac subpackage\\Test.java\n\nThis behavior is causing an issue as the test.class is being put in the subpackage\\subpackage directory. Running the java command results in:\n\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\nRunning either of the following command fixes the problem: ajc -d .", "OB": "The test.class file is then put in the subpackage\\subpackage directory.", "EB": "It will be nice to have the same behavior as javac.", "SR": "Add the -d option to the ajc command to specify the directory where the compiled class files should be placed."}