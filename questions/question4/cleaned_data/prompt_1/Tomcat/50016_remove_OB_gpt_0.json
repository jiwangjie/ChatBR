{"id": "50016", "title": "Bug 50016 - Bad division of responsibility around isUserInRole and new Request login and logout methods", "description": "Bug 50016 - Bad division of responsibility around isUserInRole and new Request login and logout methods\n\nThere are 2 similar problems that have a bad division of responsibility.\n\n1. Request.isUserInRole tries to prevent jacc implementations and is also wrong.\n\nIn the current tomcat implementation, roleref mappings are first applied to the supplied role and then the target role is tested. jacc requires that this be implemented by constructing a roleref permission with the current servlet name and the supplied (not mapped) role. ", "OB": "The division of responsibility is not clear in the implementation of Request.isUserInRole method. Currently, the method prevents jacc implementations and applies roleref mappings to the supplied role before testing the target role. However, according to jacc, this should be implemented by constructing a roleref permission with the current servlet name and the supplied (not mapped) role. ", "EB": "To have a proper division of responsibility in the implementation of Request.isUserInRole method, the method should supply the original role and, if possible, the servlet name to the wrapper. Additionally, if there is a mapping, only the mapped role should be checked. Currently, the method reports true for both the original role and the mapped role, which is incorrect.", "SR": "In addition to the spec language, it is important to consider a web app with two roles A and B, and a servlet S that maps A to B and B to A. Both problems mentioned above should be delegated directly to the Authenticator. The Authenticator should also have the ability to decide whether to cache the authentication results."}