{
  "id": "22360",
  "title": "Bug 22360[Fonts] FontRegistry instantiation issue with external resources",
  "description": "The FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource. All resources are limited to the location of the FontRegistry class in org.eclipse.jface.resource. This could be addressed by allowing FontRegistry to accept a client class or class loader as an additional parameter in its constructor.",
  "OB": "When attempting to create a FontRegistry instance for my application using the following code:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}\n```\nI encounter a MissingResourceException. I have a 'fonts.properties' file in the 'com/company/product/' folder. However, if I use the following code instead:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}\n```\nNo exception is thrown. Additionally, when I duplicate the FontRegistry class in my 'com.company.product' package, it functions without exceptions. It seems like a bug in FontRegistry. It attempts to load the 'fonts' resource bundle, but uses the FontRegistry's class loader to do so (refer to the 'readResourceBundle(String)' method in FontRegistry).",
  "EB": "An alternative solution could involve enabling clients to load their own resource bundle and pass it as a parameter to the FontRegistry constructor (in place of the bundle name).",
  "SR": "1. Attempt to create a FontRegistry instance for an application using a non-default resource bundle.\n2. Observe the occurrence of a MissingResourceException.\n3. Compare behavior when using ResourceBundle.getBundle instead of FontRegistry instantiation.\n4. Duplicate the FontRegistry class in the 'com.company.product' package and test the FontRegistry instantiation."
}
