{"id": "22360", "title": "Bug 22360[Fonts] FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource", "description": "Bug 22360[Fonts] FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource. Therefore, all the resources that are being looked up are the only ones relative to the location of the FontRegistry class 'org.eclipse.jface.resource' path. It can be remedied if FontRegistry took a client class (or class loader) as an additional parameter to the constructor.", "OB": "I get a MissingResourceException when I try to create a FontRegistry instance for my application. I am using the following code:\n\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    FontRegistry fonts = new FontRegistry('com.company.product.fonts');\n}\n\nI have a file 'fonts.properties' in the 'com/company/product' folder. However, if I use the following code instead:\n\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    ResourceBundle fonts = ResourceBundle.getBundle('com.company.product.fonts');\n}\n\nThere is no exception. Additionally, if I create a complete copy of the FontRegistry class in my 'com.company.product' package, then it works. My guess is it is a bug in the FontRegistry. It tries to load the fonts resource bundle, but the FontRegistry's class loader is used to do that (see 'readResourceBundle(String)' FontRegistry method).", "EB": "", "SR": "The FontRegistry cannot be instantiated using resources outside the 'org.eclipse.jface.resource' path. When attempting to create a FontRegistry instance using the provided code:\n\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    FontRegistry fonts = new FontRegistry('com.company.product.fonts');\n}\n\na MissingResourceException is thrown, even though the 'fonts.properties' file exists in the 'com/company/product' folder. However, using the following code instead:\n\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    ResourceBundle fonts = ResourceBundle.getBundle('com.company.product.fonts');\n}\n\nno exception is thrown. It is worth noting that creating a complete copy of the FontRegistry class in the 'com.company.product' package does allow for successful instantiation. This suggests a bug in the FontRegistry, where it attempts to load the fonts resource bundle using its own class loader (see the 'readResourceBundle(String)' method in the FontRegistry class)."}