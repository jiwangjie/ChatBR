{
  "id": "22360",
  "title": "Bug 22360[Fonts] FontRegistry instantiation issue with resources outside org.eclipse.jface.resource",
  "description": "Bug 22360[Fonts] FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource. All the resources being looked up are relative to the location of the FontRegistry class in org.eclipse.jface.resource path. It can be remedied if FontRegistry took a client class (or class loader) as an additional parameter to the constructor.",
  "OB": "When attempting to create a FontRegistry instance for my application using the following code:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry() {\n    FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}\n```\n\nI encounter a MissingResourceException. I have a file fonts.properties in my com/company/product/ folder. However, if I use the following code instead:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry() {\n    ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}\n```\n\nNo exception is thrown. Additionally, if I create a complete copy of the FontRegistry class in my com.company.product package, then it works. My suspicion is that it's a bug in the FontRegistry. It appears to attempt to load the fonts resource bundle, but the FontRegistry's class loader is used to do that (see readResourceBundle(String) FontRegistry method).",
  "EB": "The FontRegistry should be able to be instantiated using resources outside org.eclipse.jface.resource without resulting in a MissingResourceException. The class should allow the specification of a client class or class loader as an additional parameter to the constructor.",
  "SR": "To reproduce the issue:\n1. Use the code snippet below to create a FontRegistry instance:\n```java\ncom.company.product.MyClass\npublic void createFontRegistry() {\n    FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}\n```\n2. Ensure there is a file named fonts.properties in the com/company/product/ folder.\n3. Observe the MissingResourceException.\n\nTo verify the workaround:\n1. Use the code snippet below instead:\n```java\ncom.company.product.MyClass\npublic void createFontRegistry() {\n    ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}\n```\n2. Confirm that no exception is thrown.\n\nAdditionally, creating a complete copy of the FontRegistry class in the com.company.product package should result in a working solution."
}
