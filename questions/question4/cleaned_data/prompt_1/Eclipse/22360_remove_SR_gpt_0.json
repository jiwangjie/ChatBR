{"id": "22360", "title": "Bug 22360 - FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource", "description": "Bug 22360 - FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource. Therefore, all the resources being looked up are relative to the location of the FontRegistry class in the org.eclipse.jface.resource path. This issue could be resolved if FontRegistry took a client class or class loader as an additional parameter in the constructor.", "OB": "When trying to create a FontRegistry instance for my application using the code snippet below, I encounter a MissingResourceException:\n\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}\n\nI have a file `fonts.properties` in the `com/company/product` folder. However, if I modify the code as follows, no exception is thrown:\n\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}\n\nAdditionally, if I create a complete copy of the FontRegistry class in my `com.company.product` package, it works. I believe this is a bug in the FontRegistry where it attempts to load the fonts resource bundle using its own class loader.", "EB": "Alternatively, the FontRegistry could allow clients to load their own resource bundle and accept it as a parameter in the constructor, instead of just the name of the bundle.", "SR": ""}