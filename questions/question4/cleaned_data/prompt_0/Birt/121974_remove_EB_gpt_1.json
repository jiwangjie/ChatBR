{
  "id": "121974",
  "title": "Bug 121974: Can't evaluate global expressions when ResultIterator is not in the iteration loop",
  "description": "Bug 121974: Can't evaluate global expressions when ResultIterator is not in the iteration loop. For global expressions, such as {params[\"p1\"]},{new DateTime()}, it should always be available and evaluatable within the BIRT scripting environment. Currently, Dte scriptExpression has three types: BEFOREFIRSTROW, AFTERLASTROW, ONEACHROW.",
  "OB": "When attempting to evaluate global expressions, like {params[\"p1\"]},{new DateTime()}, in the BIRT scripting environment, issues arise. The BEFOREFIRSTROW type only functions when the cursor is about to enter the first row, and the AFTERLASTROW type only works when the cursor is about to leave the last row. However, once the iteration is complete, neither type functions anymore. An exception, 'QueryResults or its iterator has been closed' DataException, is thrown if you attempt to evaluate these expressions. It's worth noting that these global expressions are not inherently tied to the data row iteration.",
  "EB": "Global expressions, including {params[\"p1\"]},{new DateTime()}, should consistently and reliably be available for evaluation within the BIRT scripting environment, irrespective of the data row iteration status. The current behavior, where BEFOREFIRSTROW and AFTERLASTROW types are limited to specific points in the iteration, is not aligned with expectations. Additionally, the naming of BEFOREFIRSTROW/AFTERLASTROW is misleading; consider renaming them to more accurate terms such as ONSTARTROW and ONENDROW.",
  "SR": "To reproduce the issue, attempt to evaluate global expressions like {params[\"p1\"]},{new DateTime()} within the BIRT scripting environment after the data row iteration is complete. This can be done by, for example, attempting to evaluate these expressions from chart actions after data binding. The expected outcome is the occurrence of a 'QueryResults or its iterator has been closed' DataException, highlighting the issue with global expression evaluation outside the expected iteration points."
}
