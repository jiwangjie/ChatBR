{"id": "27869", "title": "Bug 27869: StyledText overuse of Font.getFontData", "description": "Bug 27869: StyledText overuse of Font.getFontData. Btw, UTF8 is the default English encoding for Redhat 8. FontMetrics API is also heavily used by the StyledText. I believe that the metric information should be cached in the StyledText and updated only when the font is changed.", "OB": "Running Eclipse and using the Java Editor, a single key stroke can cause the API Font.getFontData() to be called 13 times. This API is also overused when scrolling the StyledText and selecting text. Each Font has 7 FontData, so every time I type 'a' in the Java Editor, 91 (713) FontData will be loaded.", "EB": "The FontMetrics information should be cached in the StyledText and updated only when the font is changed. This would reduce the number of calls to Font.getFontData() and improve performance.", "SR": "To reproduce the issue:\n1. Add a `System.out.println` statement in the first line of the method `Font.getFontData`.\n2. Run a self-hosted Eclipse.\n3. Observe the console for any unexpected behavior.\nI'm concerned about this problem because on some platforms, the performance of this method is very poor compared to Windows. For example, Motif running on UTF8."}