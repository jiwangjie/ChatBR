{"id": "50059", "title": "Bug 50059: Resources not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml", "description": "Bug 50059: Resources are not served from /WEBINF/lib/{.jar}/METAINF/resources if metadatacomplete=\"true\" is set in web.xml. \nMake a Servlet 3.0 web application (let's name it 'foo') with metadatacomplete=\"true\" attribute set on the webapp element in the /WEB-INF/web.xml.2.", "OB": "When a Servlet 3.0 web application is running with the metadatacomplete=\"true\" attribute set in the web.xml, the resources located in /WEB-INF/lib/{.jar}/META-INF/resources are not being served properly.", "EB": "The resources located in /WEB-INF/lib/{.jar}/META-INF/resources should be served correctly even when the metadatacomplete=\"true\" attribute is set in the web.xml.", "SR": "To reproduce the issue: \n1. Create a Jar file that contains a single /META-INF/resources/index.html file. \n2. Start the web application in Tomcat 7.0.2. \n3. Open a browser and navigate to http://localhost:8080/foo/index.html. \n   - Expected result: The server should respond with a 200 status code and serve the index.html file. \n   - Actual result: The server responds with a 404 status code, indicating that the resource could not be found. \n   \n   If you modify the web.xml to set metadatacomplete=\"false\" and restart the application, accessing /foo/index.html will respond as expected. \n   \n   Note: This issue was tested with Glassfish v3.0.1 where the resources are served correctly regardless of the value of the metadatacomplete attribute in the web.xml. \n   \n   Based on my initial investigation of the Servlet 3.0 specification, it seems that the metadatacomplete attribute only regulates annotation and web fragment processing."}