{
  "id": "50016",
  "title": "Bug 50016 - Bad division of responsibility around isUserInRole and new Request login and logout methods",
  "description": "There are 2 similar problems that have a bad division of responsibility. 1. Request.isUserInRole tries to prevent jacc implementations and is also wrong. In the current tomcat implementation, roleref mappings are first applied to the supplied role and then the target role is tested. jacc requires that this be implemented by constructing a roleref permission with the current servlet name and the supplied (not mapped) role. 2. The implementation of the new login and logout methods are excessively intrusive into the internals of the authentication. In particular, checking which known Authenticator is installed to see if it supports user/pw login is overly restrictive since other authenticators might be installed.",
  "OB": "1. Request.isUserInRole behaves incorrectly. If the user is not in the mapped role, the original role is tested. However, the current implementation reports true for both the original role A and the mapped role B, which is incorrect. (a) The implementation of the new login and logout methods is excessively intrusive into the internals of the authentication, as it checks which known Authenticator is installed to see if it supports user/password login, limiting the flexibility of other potential authenticators.",
  "EB": "1. Request.isUserInRole should behave correctly for a jacc implementation. It should supply the original role and, if possible, the servlet name to the wrapper. If there is a mapping, only the mapped role should be checked. A user that logs in and is in role A and not B should be able to test if they are in role A (expect: false) and in role B (expect: true). The current implementation incorrectly reports true for both roles. (a) The implementation of the new login and logout methods should not be overly restrictive in checking which Authenticator is installed, as other authenticators might be installed, and this approach limits flexibility.",
  "SR": "1. To reproduce the issue with Request.isUserInRole: \n   a. Use a jacc implementation. \n   b. Supply a user in a role that has both an original role (A) and a mapped role (B). \n   c. Test whether the user is in the original role A and mapped role B. The current implementation reports true for both roles, which is incorrect. \n\n2. To reproduce the issue with the new login and logout methods: \n   a. Install different authenticators. \n   b. Check if the new login and logout methods are overly restrictive by checking which Authenticator is installed. The implementation should not limit flexibility for other potential authenticators."
}