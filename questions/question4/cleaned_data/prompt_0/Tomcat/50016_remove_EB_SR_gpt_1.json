{
  "id": "50016",
  "title": "Bug 50016 - Bad division of responsibility around isUserInRole and new Request login and logout methods",
  "description": "There are 2 similar problems that have a bad division of responsibility. 1. Request.isUserInRole tries to prevent jacc implementations and is also wrong. In the current tomcat implementation, roleref mappings are first applied to the supplied role and then the target role is tested. jacc requires that this be implemented by constructing a roleref permission with the current servlet name and the supplied (not mapped) role. The implementation of the new login and logout methods are excessively intrusive into the internals of the authentication. In particular, checking which known Authenticator is installed to see if it supports user/pw login is overly restrictive since other authenticators might be installed.",
  "OB": "The observed behavior involves two main issues. Firstly, the Request.isUserInRole method is attempting to prevent jacc implementations but is not functioning correctly. Specifically, the roleref mappings are applied to the supplied role, and then the target role is tested. This approach does not align with the requirements of jacc, which mandates the construction of a roleref permission with the current servlet name and the supplied (not mapped) role. Secondly, the new login and logout methods are overly intrusive into the authentication system's internals. They rely on checking for a known Authenticator, which restricts their functionality as other authenticators might be installed as well.",
  "EB": "The expected behavior should address both of these issues. Firstly, Request.isUserInRole should be modified to align with jacc requirements. It should construct a roleref permission with the current servlet name and the supplied (not mapped) role before testing the target role. This change will ensure compliance with jacc implementations. Secondly, the new login and logout methods need to be refactored to be less intrusive and more flexible. They should not rely solely on the presence of a specific Authenticator but should be adaptable to various authenticator scenarios, allowing for smoother integration and use in different authentication contexts.",
  "SR": "Steps to reproduce the issues are as follows: \n\n1. Attempt to use the Request.isUserInRole method in a context where jacc implementations are in use. \n2. Observe the behavior when testing for roles, and how it does not align with the requirements of jacc. \n\nTo reproduce the second issue related to the new login and logout methods: \n\n1. Implement or use the new login and logout methods in a system where multiple authenticators might be installed. \n2. Note the restrictions and intrusive behavior of these methods when checking for the presence of a known Authenticator."
}