{"id": "50016", "title": "Bug 50016 - Bad division of responsibility around isUserInRole and new Request login and logout methods", "description": "Bug 50016 - Bad division of responsibility around isUserInRole and new Request login and logout methods. Created attachment 26089 [details] to improve division of responsibility for isUserInRole and login/logout methods. There are 2 similar problems that have a bad division of responsibility. 1. Request.isUserInRole tries to prevent jacc implementations and is also wrong. In the current tomcat implementation, roleref mappings are first applied to the supplied role and then the target role is tested. jacc requires that this be implemented by constructing a roleref permission with the current servlet name and the supplied (not mapped) role. ", "OB": "The current implementation of isUserInRole method in Tomcat reports true for both role A and role B, even if the user is only in role A and not role B.", "EB": "So, to be reasonably amenable to a jacc implementation, the Request.isUserInRole method should supply the original role and if possible, the servlet name to the wrapper. Additionally, if there is a role mapping, only the mapped role should be checked. For example, a user that logs in and is in role A and not B should be able to test if they are in role A (false) and if they are in role B (true).", "SR": "To reproduce the issue, consider a web app with two roles A and B and a servlet S that maps A to B and B to A. Perform relevant user actions or operations that lead to calling the isUserInRole method and compare the expected behavior with the observed behavior."}