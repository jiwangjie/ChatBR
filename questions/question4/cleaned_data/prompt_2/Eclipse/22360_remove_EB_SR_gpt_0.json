{"id": "22360", "title": "Bug 22360[Fonts] FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource", "description": "Bug 22360[Fonts] FontRegistry cannot be instantiated using resources outside org.eclipse.jface.resource. Therefore, all the resources that are being looked up are only ones relative to the location of the FontRegistry class in the org.eclipse.jface.resource path. It can be resolved if FontRegistry takes a client class (or class loader) as an additional parameter to the constructor.", "OB": "I receive a MissingResourceException when I try to create an instance of FontRegistry for my application using the following code:\n\ncom.company.product.MyClass\npublic void createFontRegistry(){\n\tFontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}\n\nI do have a file named fonts.properties in my com/company/product/ directory. However, if I use the following code instead:\n\ncom.company.product.MyClass\npublic void createFontRegistry(){\n\tResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}\n\nThere is no exception. Furthermore, if I copy the complete FontRegistry class to my com.company.product package, it works. It seems to be a bug in the FontRegistry. It tries to load the fonts resource bundle using the FontRegistry's class loader, which causes the issue (refer to the readResourceBundle(String) method in the FontRegistry class).", "EB": "The FontRegistry should be modified to accept a client class (or class loader) as an additional parameter in the constructor to allow instantiation using resources outside the org.eclipse.jface.resource path. This will prevent the MissingResourceException when attempting to create FontRegistry instances with resources located in different paths.", "SR": ""}