{
  "id": "22360",
  "title": "Bug 22360[Fonts] FontRegistry unable to instantiate with resources outside org.eclipse.jface.resource",
  "description": "The current behavior of FontRegistry prevents instantiation with resources outside the 'org.eclipse.jface.resource' path. This limits resource lookup solely to locations relative to the FontRegistry class path. It's suggested that FontRegistry should accept a client class or class loader as an additional parameter in the constructor to resolve this issue.",
  "OB": "When attempting to create a FontRegistry instance for my application using the code snippet:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry() {\n  FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}\n```\n\nI encounter a MissingResourceException. The 'fonts.properties' file exists in the 'com/company/product/' folder. However, using the following alternative approach:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry() {\n  ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}\n```\n\nNo exception is thrown. Additionally, creating a complete copy of the FontRegistry class within the 'com.company.product' package resolves the issue. It seems that FontRegistry attempts to load the 'fonts' resource bundle using its class loader, leading to this discrepancy (refer to the 'readResourceBundle(String)' method within the FontRegistry class).",
  "EB": "The FontRegistry should allow instantiation with resources located outside the 'org.eclipse.jface.resource' path without triggering MissingResourceExceptions.",
  "SR": "To reproduce the issue:\n1. Attempt to create a FontRegistry instance in an application using the code provided in 'OB'.\n2. Notice the MissingResourceException.\n3. Try using 'ResourceBundle.getBundle' with the same resource path to observe the absence of an exception.\n4. Replicate the FontRegistry class within the 'com.company.product' package and observe the resolution of the issue."
}
