{
  "id": "22360",
  "title": "Bug 22360[Fonts] FontRegistry MissingResourceException",
  "description": "FontRegistry in the org.eclipse.jface.resource package cannot be instantiated using resources outside the package. It should be able to take a client class or class loader as an additional parameter to the constructor.",
  "OB": "When attempting to create a FontRegistry instance in my application as follows:\n\ncom.company.product.MyClass\npublic void createFontRegistry() {\n  FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}\nI encounter a MissingResourceException. I have a file named fonts.properties in my com/company/product/ folder. However, if I use the following approach:\n\ncom.company.product.MyClass\npublic void createFontRegistry() {\n  ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}\nNo exception occurs. Additionally, if I duplicate the FontRegistry class in my com.company.product package, it works without issues. It seems that there might be a bug in the FontRegistry, as it attempts to load the fonts resource bundle using the FontRegistry's class loader (see readResourceBundle(String) method in FontRegistry).",
  "EB": "The expected behavior is that creating a FontRegistry instance as described in the observed behavior should not result in a MissingResourceException. FontRegistry should be able to handle resources outside the org.eclipse.jface.resource package or accept a client class or class loader as an additional parameter to the constructor, allowing for more flexible resource loading.",
  "SR": "To reproduce this issue:\n1. Create a class, e.g., com.company.product.MyClass.\n2. Define a method to create a FontRegistry instance:\n\n```java\npublic void createFontRegistry() {\n  FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}```\n3. Make sure you have a file named fonts.properties in the com/company/product/ folder.\n4. Call the createFontRegistry method, and you will encounter a MissingResourceException.\n\nTo verify the workaround:\n1. Create the same com.company.product.MyClass class.\n2. Define a method to create a ResourceBundle instance instead:\n\n```java\npublic void createFontRegistry() {\n  ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}```\n3. This time, there should be no exception.\n\nAdditionally, to confirm that duplicating the FontRegistry class in the com.company.product package resolves the issue, you can try creating a copy of the FontRegistry class in your com.company.product package and use it in your application."
}