{
  "id": "22360",
  "title": "Bug 22360[Fonts] FontRegistry Cannot Instantiate Using Resources Outside org.eclipse.jface.resource",
  "description": "When attempting to create a FontRegistry instance for an application, FontRegistry cannot be instantiated using resources outside the org.eclipse.jface.resource. All the resources that are being looked up are the only ones relative to the location of the FontRegistry class in the org.eclipse.jface.resource path. To resolve this issue, FontRegistry should either take a client class or class loader as an additional parameter to the constructor or allow clients to load their own resource bundle and take it as a parameter to the constructor (versus the name of the bundle).",
  "OB": "When trying to create a FontRegistry instance for my application using resources outside org.eclipse.jface.resource, I encounter a MissingResourceException.",
  "EB": "The expected behavior should allow FontRegistry to be instantiated using resources from locations outside org.eclipse.jface.resource. This can be achieved by either adding a client class or class loader as an additional parameter to the FontRegistry constructor or by enabling clients to load their own resource bundle and pass it as a parameter to the constructor instead of just the bundle name.",
  "SR": "To reproduce the issue, follow these steps:\n1. Create a class, e.g., com.company.product.MyClass.\n2. Attempt to create a FontRegistry instance as follows:\n   com.company.product.MyClass\n   public void createFontRegistry() {\n       FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n   }\n3. Place a 'fonts.properties' file in the 'com/company/product/' folder.\n4. Observe the MissingResourceException.\n\nAlternatively, perform the following steps:\n1. Create a class, e.g., com.company.product.MyClass.\n2. Attempt to create a FontRegistry instance as follows:\n   com.company.product.MyClass\n   public void createFontRegistry() {\n       ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n   }\n3. Notice that there is no exception.\n\nAdditionally, to validate the workaround:\n1. Create a complete copy of the FontRegistry class in the 'com.company.product' package.\n2. Observe that it works without any exceptions. The issue seems to be related to the FontRegistry class."
}