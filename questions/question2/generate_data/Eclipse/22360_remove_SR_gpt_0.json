{
  "id": "22360",
  "title": "Bug 22360[Fonts] FontRegistry MissingResourceException",
  "description": "When attempting to create a FontRegistry instance outside the org.eclipse.jface.resource path, a MissingResourceException occurs. This is likely due to the FontRegistry using its class loader to load resource bundles. To address this, the FontRegistry should allow clients to provide their own resource bundle as a parameter to the constructor.",
  "OB": "When I attempt to create a FontRegistry instance for my application using the code:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}\n```\nI encounter a MissingResourceException. I have a 'fonts.properties' file in the 'com/company/product/' folder. However, if I use the following code instead:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}\n```\nNo exception is thrown. Furthermore, if I create a copy of the FontRegistry class in my 'com.company.product' package, it works. My assumption is that this is a bug in the FontRegistry, as it attempts to load the font resource bundle using its own class loader.",
  "EB": "Alternatively, the FontRegistry should allow clients to load their own resource bundle and pass it as a parameter to the constructor, instead of hardcoding the bundle name.",
  "SR": "To reproduce the issue:\n1. Attempt to create a FontRegistry instance outside the 'org.eclipse.jface.resource' path.\n2. Use the code:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    FontRegistry fonts = new FontRegistry(\"com.company.product.fonts\");\n}\n```\n3. Observe the MissingResourceException. To verify the absence of the exception, use:\n\n```java\ncom.company.product.MyClass\npublic void createFontRegistry(){\n    ResourceBundle fonts = ResourceBundle.getBundle(\"com.company.product.fonts\");\n}\n```"
}