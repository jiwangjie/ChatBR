{
  "id": "131649",
  "title": "Designer generates wrong column reference expression for inner table",
  "description": "The design involves a 2-level table to list offices and their employees, allowing for expressions like 'row[\"FIRSTNAME\"] + \" \" + row[\"LASTNAME\"] + \" / \" + row[\"OFFICECODE\"]'. However, this configuration does not function correctly. When the user double-clicks on 'COUNTRY', the expected behavior is to insert 'rows[0][\"COUNTRY\"]' into the expression. The first index in the 'rows' array represents the 0-based index of the nested table within the data set (0 = outermost table, 1 = first-level inner table, etc.).",
  "OB": "The software currently runs fine. However, a problem arises when the designer attempts to append a country name suffix to each employee's name using an expression like 'row[\"COUNTRY\"]'. The issue is that 'row[\"OFFICECODE\"]' is not valid within the inner table. To allow the inner table to access the outer table's columns, the expression needs to utilize the 'rows' object.",
  "EB": "When the designer adds 'row[\"COUNTRY\"]' to the expression text, the expected behavior is for the software to recognize 'rows[0][\"COUNTRY\"]' as the correct column reference for the inner table. In this context, the first index (an integer) in the 'rows' array should represent the 0-based index of the nested table containing the data set (0 = outermost table, 1 = first-level inner table, etc.).",
  "SR": "1. Open the designer tool.\n2. Create a 2-level table to list offices and their employees.\n3. Construct an expression like 'row[\"FIRSTNAME\"] + \" \" + row[\"LASTNAME\"] + \" / \" + row[\"OFFICECODE\"]'.\n4. Double-click on the 'COUNTRY' column within the table.\n5. Observe that the software should automatically insert 'rows[0][\"COUNTRY\"]' into the expression, allowing the inner table to access the outer table's columns correctly."
}