{
  "id": "50016",
  "title": "Bug 50016 - Bad division of responsibility around isUserInRole and new Request login and logout methods",
  "description": "There are 2 similar problems that have a bad division of responsibility. (1) Request.isUserInRole tries to prevent jacc implementations and is also wrong. In the current tomcat implementation, roleref mappings are first applied to the supplied role and then the target role is tested. JACC requires that this be implemented by constructing a roleref permission with the current servlet name and the supplied (not mapped) role. (2) Both should be delegated directly to the Authenticator. The authenticator also ought to be able to decide if it wants to cache the authentication results.",
  "OB": "The current implementation of Request.isUserInRole reports true for both roles A and B when it should only report true for the mapped role, which is role B. This is problematic because it does not follow the expected behavior of JACC implementations.",
  "EB": "The expected behavior for Request.isUserInRole is to supply the original role and, if possible, the servlet name to the wrapper. If there is a mapping, only the mapped role should be checked. So, when a user logs in and is in role A but not in role B, the method should return false for A and true for B. This behavior is in line with JACC requirements.",
  "SR": "To reproduce the issue, consider a web app with two roles, A and B, and a servlet S that maps A to B and B to A. Then, use Request.isUserInRole with role A and role B to observe the incorrect behavior of returning true for both roles, regardless of the mapping."
}