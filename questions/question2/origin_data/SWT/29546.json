{"bug_id": "29546", "title": "Bug 29546Project rebuild cannot write over .class files", "description": "I have a classes directory full of files that come preshipped to me.My ownclass files live in the same tree as additional files.To make this work, Ihave to deselect the Project's \"Allow to clean output folders\" setting.However now the project does not clean output files, a rebuild cannot beperformed.Steps to reproduce:  we'll basically create a new project with one class.1) Make a \"test\" directory, with subdir \"classes/otherpackage\".Put adummy \"fred.class\" file in the otherpackage directory (it can just be a textfile in reality, doesn't matter)2) In Eclipse, create a new project with project contents being the \"test\"directory from step 1.Browse to the \"classes\" directory as the default outputdir.You immediately get an error on the project about \"Problems encountered whiledeleting resources\".Seems bogus to me (is this a bug in itself?), but thereis a workaround.3) Go to project propertiesJava Compiler.Click Use Project Settings, go tothe Other tab, and deselect \"Allow to clean output folders...\" (which isn'tvery good English!\"Allow cleaning output folders\" perhaps?)Anyway...Click Apply, and Yes to rebuild, then OK from the project properties.All iswell!!4) Create a new class, Main.java, give it a main method.Builds great!5) From the menu bar, click ProjectRebuild.You get an error \"Class file not written\".In order to workaround this, one must manually delete the .class file, Refreshthe project, then rebuild.But that's a lot of trouble to go to.Be great if it would clean only the .class files relevant to the project'ssource but leave the rest of the classes directory alone.Or, at least compileif the class file already exists  basically fixing the \"Allow to clean outputfolders...\" checkbox is broken.Thanks!"}