{"bug_id": "37929", "title": "Bug 37929invalidated session causes pageContext methods to fail", "description": "javax.servlet.http.HttpSession methods such as getAttribute(),getValue(), getAttributeNames(), getValueNames(), etc, throw anIllegalStateException if called on a session that has beeninvalidated.So, with the following code in a JSP page:<%session.invalidate();Object obj = pageContext.findAttribute(\"foo\");%An IllegalStateException is thrown because pageContext.findAttribute()eventually calls session.getAttribute() on a session that has beeninvalidated.The session that has been invalidated should simply be ignored when amethod needs to process the various scopes (page, request, session,application).This impacts the following methods in PageContextImpl:public int getAttributesScope(final String name)which calls  private int doGetAttributeScope(String name);public Object findAttribute(final String name)which calls  private Object doFindAttribute(String name);public void removeAttribute(final String name)which calls  private void doRemoveAttribute(String name);The fix is to catch IllegalStateException and ignore it when processingthe attribute in session scope. The code then simply follows through toprocess application scope.No need to worry about setAttribute() because it is always invokedon a specific scope, and the spec already statesthat java.lang.IllegalStateException must be thrown when calledon an invalidated session.pageContext.setAttribute(\"foo\", \"value of foo\", PageContext.SESSIONSCOPE);java.lang.IllegalStateException  if the scope is PageContext.SESSIONSCOPEbut the page that was requested does not participate in a session orthe session has been invalidated.At the same time, a fix should be done to method \"doRemoveAttribute(Stringname)\" where a try/catch block for Exception appears unnecessary.private void doRemoveAttribute(String name){try {removeAttribute(name, PAGESCOPE);removeAttribute(name, REQUESTSCOPE);if( session != null ) {try {removeAttribute(name, SESSIONSCOPE);} catch (IllegalStateException ex) {// Session has been invalidated.// Ignore and fall through to application scope.}}removeAttribute(name, APPLICATIONSCOPE);} catch (Exception ex) {// we remove as much as we can, and// simply ignore possible exceptions}}Here is a full analysis:Starting with 'removeAttribute(final String name)' we check for null and throw NPE if necessary we call doRemoveAttribute(name)doRemoveAttribute(name) we call removeAttribute(name, scope) for each scoperemoveAttribute(final String name, final int scope) this calls doRemoveAttribute(name, scope)doRemoveAttribute(name, scope) page scope: attributes.remove  won't throw an Exception request scope: request.removeAttribute  no documented Exception thrown session scope: throws IllegalStateException if session is null app scope: context.removeAttribute  no documented Exception thrownA null value for name is already checked in removeAttribute(final String name)and we throw NPE. So this situation (removing an attr from page or requestscope throwing an NPE) won't happen.In doRemoveAttribute(name), we already check on session != nullbefore calling removeAttribute(name, SESSIONSCOPE). So therenormally is no IllegalStateException thrown (except for the invalidatedcase).When removing an attribute from application (i.e., ServletContext)scope, any registered listeners will be notified, but the code thatdoes that (seeappservwebtier/src/java/org/apache/catalina/core/ApplicationContext.removeAttribute()) already catches any Throwable that a listenermay throw.The try/catch block is therefore unnecessary.Moreover, if any of the removal actions from the different scopes couldhave thrown an exception, each of them would have needed to be wrappedinside their own try/catch, so as to ensure that an exception in onescope does not cause any of the subsequent removals to be bypassed.doRemoveAttribute(String name) has therefore been modified as follows:private void doRemoveAttribute(String name){removeAttribute(name, PAGESCOPE);removeAttribute(name, REQUESTSCOPE);if( session != null ) {try {removeAttribute(name, SESSIONSCOPE);} catch (IllegalStateException ex) {// Session has been invalidated.// Ignore and fall through to application scope.}}removeAttribute(name, APPLICATIONSCOPE);}Changes done on glassfish. ymmv on jasper for the diffs. PageContextImpl.java9 Dec 2005 18:54:30 00001.7+++ PageContextImpl.java16 Dec 2005 00:11:21 00001.8@@ 452,8 +452,13 @@return REQUESTSCOPE;if (session != null) {+try {if (session.getAttribute(name) != null)return SESSIONSCOPE;+} catch (IllegalStateException ex) {+// Session has been invalidated.+// Ignore and fall through to application scope.+}}if (context.getAttribute(name) != null)@@ 495,9 +500,14 @@return o;if (session != null) {+try {o = session.getAttribute(name);if (o != null)return o;+} catch (IllegalStateException ex) {+// Session has been invalidated.+// Ignore and fall through to application scope.+}++if (o != null) return o;}return context.getAttribute(name);@@ 559,19 +569,18 @@}}private void doRemoveAttribute(String name){try {removeAttribute(name, PAGESCOPE);removeAttribute(name, REQUESTSCOPE);if( session != null ) {+try {removeAttribute(name, SESSIONSCOPE);+} catch (IllegalStateException ex) {+// Session has been invalidated.+// Ignore and fall through to application scope.}removeAttribute(name, APPLICATIONSCOPE);} catch (Exception ex) {// we remove as much as we can, and// simply ignore possible exceptions}+removeAttribute(name, APPLICATIONSCOPE);}public JspWriter getOut() {"}