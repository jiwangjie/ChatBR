{"bug_id": "47451", "title": "Bug 47451NPE if response contains null contentencoding header", "description": "I've been getting a NullPointerException when using the JnlpDownloadServletfrom JDK 1.6.014 with Tomcat 6.0.20:Jun 29, 2009 3:35:03 PM org.apache.coyote.http11.Http11Processor processSEVERE: Error finishing responsejava.lang.NullPointerExceptionat org.apache.tomcat.util.buf.MessageBytes.indexOf(MessageBytes.java:479)at org.apache.tomcat.util.buf.MessageBytes.indexOf(MessageBytes.java:485)at org.apache.coyote.http11.Http11Processor.isCompressable(Http11Processor.java:1441)at org.apache.coyote.http11.Http11Processor.prepareResponse(Http11Processor.java:1517)at org.apache.coyote.http11.Http11Processor.action(Http11Processor.java:944)at org.apache.coyote.Response.action(Response.java:181)at org.apache.coyote.http11.InternalOutputBuffer.endRequest(InternalOutputBuffer.java:379)at org.apache.coyote.http11.Http11Processor.process(Http11Processor.java:889)at org.apache.coyote.http11.Http11Protocol$Http11ConnectionHandler.process(Http11Protocol.java:583)at org.apache.tomcat.util.net.JIoEndpoint$Worker.run(JIoEndpoint.java:454)at java.lang.Thread.run(Thread.java:619)A brief analysis of the JnlpDownloadServlet code shows that the contentencodingheader on the response is being set to null in DownloadResponse$FileDownloadResponse.The Tomcat code tries to guard against a null header in Http11Process.isCompressable:if ((contentEncodingMB != null)&& (contentEncodingMB.indexOf(\"gzip\") != 1))return false;However, it appears that it's possible for contentEncodingMB, which is aninstance of MessageBytes, to be nonnull, while the value encapsulated bythe MessageBytes IS null, resulting in an NPE in MessageBytes.indexOf().Since this occurs with the JnlpDownloadServlet provided by Sun (see http://java.sun.com/j2se/1.5.0/docs/guide/javaws/developersguide/downloadservletguide.html), I imagine more people might be running into this problem."}