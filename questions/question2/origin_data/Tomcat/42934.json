{"bug_id": "42934", "title": "Bug 42934sessionDidActivate() called before contextInitialized()", "description": "I'm using Seam and a Seam app depends upon the Seam application beinginitialized before you can do much of anything in Seam.That said Seam puts some hooks into the sessionDidActivate() andsessionDidPassivate() events.Because of that when I start up my appI'm getting a Seam IllegalStateException because thecontextInitialized() event is fired after sessionDidActivate() so Seamis not yet initialized it's Session hooks are being fired.What makes me think this is a bug is that sessionWillPassivate() is beingcorrectly called before contextDestroyed() so it would seem thatsessionDidActivate() being called before contextInitialized() would beinconsistent behavior.So to sum up I think tomcat should fire context and session events in thefollowing order:contextInitializedsessionDidActivatesessionWillPassivatecontextDestroyedAs a side note Tomcat 5 follows what I think is the completely wrong butconsistent order by firing events in this order:sessionDidActivatecontextInitializedcontextDestroyedsessionWillPassivate"}