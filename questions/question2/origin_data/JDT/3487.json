{"bug_id": "3487", "title": "Bug 3487Smoke 20: Rendering of methods different in Class Hierarchy / Outliner (1FZOKGK)", "description": "MA (8/14/00 6:09:15 PM)1. open java.lang object form rt.jar with correct source annotation2. activate static methods in the class hierrachy viewer3. the hierarhcy viewer renders a method <clinit, which is not shown in the outlinerMA (8/14/00 6:09:20 PM)I think, static initializers should be rendered which a human readable name, also in source filesNOTES:KUM (8/15/00 6:11:17 PM)<clinit are compiler generated initializers. They are different from the initializer code which can beplaced directly into the source of a class such asclass X {{// initializer per instance}static {// class initializer}}Such initializers show up in the outline and in the method view.<clinit shouldn't show up in thetype viewer's method list.EG (8/31/00 8:00:37 PM)agreed, synthetic initializers should be hiddenMA (11/7/00 6:05:24 PM)filtered out in TypeHierarchy  25AK (11/16/00 4:30:18 PM)not fixedinitializers show up only in the outliner now(so it's changed since KUM wrote the comment above)EG (12/5/00 1:05:46 PM)consider once we are on new SEFDM (1/29/01 12:34:40 PM)Verified  not fixedThe problem is now also in the Ouline view and the problem is evenworse in my opinion because the default constructor is now rendered as if itwould be real (i.e. explicitly defined in the class).Test Case: java.applet.Applet.class== synthetic members should be shown but recognizable as such.MINOR PROBLEM  NOT FOR WEDNESDAYMA (20.08.2001 17:23:13)Initializers were not rendered in the type hierarchy. added in 200Can't see constructors in outline for class files."}