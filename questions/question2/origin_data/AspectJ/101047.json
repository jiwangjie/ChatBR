{"bug_id": "101047", "title": "Bug 101047Weaver produces wrong local variable table bytecode", "description": "AspectJ version: DEVELOPMENT (also observed in 1.2.1)When weaving with a before or after advice, the generated local variable tablewill, on branch instructions, offset the \"length\" field of a local variablewrongly by one instruction. Also, the weaver will mix up local variables withthe same name, thus violating the java VM specification:// Test.ajaspect Test {before() : ( execution( Foo.foo(..) ) ) {System.out.println(\"before\");}// Foo.javapublic class Foo {private String myString = \"A String\";public static void main(String[] args) {new Foo().foo();}private void foo() {String myLocal = myString;if (myLocal.endsWith(\"X\")) {String local1 = \"local1\";System.out.println(local1);} else if (myLocal.endsWith(\"Y\")) {String local2 = \"local2\";System.out.println(local2);} else {String local1 = \"local3\";System.out.println(local1);}}}We compilw with ajc sourceroots . and dumps Foo with javap:javap c l s private Foo........private void foo();Signature: ()VCode:0:invokestatic65; //Method Test.aspectOf:()LTest;3:invokevirtual68; //Method Test.ajc$before$Test$1$f0485e90:()V6:aload07:getfield15; //Field myString:Ljava/lang/String;10:astore111:aload112:ldc30; //String X14:invokevirtual36; //Method java/lang/String.endsWith:(Ljava/lang/String;)Z17:ifeq3320:ldc38; //String local122:astore223:getstatic44; //Field java/lang/System.out:Ljava/io/PrintStream;26:aload227:invokevirtual50; //Method java/io/PrintStream.println:(Ljava/lang/String;)V30:goto6533:aload134:ldc52; //String Y36:invokevirtual36; //Method java/lang/String.endsWith:(Ljava/lang/String;)Z39:ifeq5542:ldc54; //String local244:astore245:getstatic44; //Field java/lang/System.out:Ljava/io/PrintStream;48:aload249:invokevirtual50; //Method java/io/PrintStream.println:(Ljava/lang/String;)V52:goto6555:ldc56; //String local357:astore258:getstatic44; //Field java/lang/System.out:Ljava/io/PrintStream;61:aload262:invokevirtual50; //Method java/io/PrintStream.println:(Ljava/lang/String;)V65:returnLineNumberTable:line 7: 6line 8: 11line 9: 20line 10: 23line 11: 33line 12: 42line 13: 45line 15: 55line 16: 58line 18: 65LocalVariableTable:StartLengthSlotNameSignature6600thisLFoo;11551myLocalLjava/lang/String;45122local2Ljava/lang/String;23432local1Ljava/lang/String;We see that the two occurences of the \"local1\" variable erroneously have beencombined into one entry, starting at byte 23 and ending at byte 66. This isobviously wrong, since \"local1\" has no value in the \"local2\" block. Secondly,the \"local2\" variable end is wrongly offset by one instruction offset."}