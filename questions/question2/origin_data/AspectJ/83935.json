{"bug_id": "83935", "title": "Bug 83935@AJ and formal binding impl", "description": "Some notes on formal binding impl for @AJIn code style, the advice signature is always looking the same(..bindings.., org.aspectj.lang.Part thisJoinPointStaticPart, JoinPointthisJoinPoint, org.aspectj.lang.Part thisEnclosingJoinPointStaticPart)In @ style, it is user defined.The current impl is handling the formal binding in a way that onlyargs/this/target can be bound.I had to add some conditionals to handles cases like that:void myAdvice(JoinPoint jp, Object target) {..}where target() binding is at index 1, while the index 0 is not an unbound butactually \"virtually\" bound to the joinpoint.Pointcut are thus having a virtuallyBoundedNames String[] that is the list ofarguments for which we don't want any complain if it not bound.This one is populated during@ extraction, and Pointcut.concretize() make surethe info is not lost when composition occurs (with PerClause f.e.)The only issue is that currently, binding JP/SJP/ESJP themselves is not possiblef.e. \"... && args(jp)\" myAdvice(JoinPoint jp, JoinPoint currentJp)Is that a big issue ?May be impact adviceexecution() and could impact some use cases around mock testing."}