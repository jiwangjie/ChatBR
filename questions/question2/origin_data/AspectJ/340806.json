{"bug_id": "340806", "title": "Bug 340806Race condition in JavaLangTypeToResolvedTypeConverter (potentially exposed through Spring AOP)", "description": "Build Identifier: 1.6.11Spinoff of https://jira.springsource.org/browse/SPR8070 and Bug 337855There is a race condition in JavaLangTypeToResolvedTypeConverter's use of the'typeVariablesInProgress' Map.This can lead to fromType() returning NULL (which eventually leads to the NPE in World).} else if (aType instanceof java.lang.reflect.TypeVariable) {if (typeVariablesInProgress.get().get(aType) != null) {// aType can get removed from the Map after this null check!return typeVariablesInProgress.get().get(aType);}The error results in the following stack trace:java.lang.NullPointerException: nullat org.aspectj.weaver.World.resolve(World.java:278) ~[aspectjweaver.jar:1.6.11]at org.aspectj.weaver.World.resolve(World.java:218) ~[aspectjweaver.jar:1.6.11]at org.aspectj.weaver.World.resolve(World.java:253) ~[aspectjweaver.jar:1.6.11]at org.aspectj.weaver.TypeFactory.createParameterizedType(TypeFactory.java:42) ~[aspectjweaver.jar:1.6.11]at org.aspectj.weaver.reflect.JavaLangTypeToResolvedTypeConverter.fromType(JavaLangTypeToResolvedTypeConverter.java:88) ~[aspectjweaver.jar:1.6.11]I have also attached a BTrace script that shows further analysis of the problem:onFromTypeLine91: RETURNING TYPE FROM MAP (typeVariablesInProgress: {T=T})onFromTypeFieldGet: typeVariablesInProgress: {T=T}onFromTypeReturn: fromType(T)  nullWe have tested a patch that wraps the 'typeVariablesInProgress' Map in a ThreadLocal.In limited testing, this appears to have fixed the problem.I have attached the patch.Reproducible: SometimesSteps to Reproduce:Perform type resolution on classes with parameterized/generic signatures concurrently with multiple threads.Note: I have been unable to reproduce this issue outside of our server.We see the issue with Spring and during Server initialization under heavy load."}