{"bug_id": "46298", "title": "Bug 46298Aspectj generate code does not decompile cleanly.", "description": "Under certain condition you can not cleanly decompile code generated by theaspectj compiler/byte code weaver.package com.regular;public class ExceptionCatcher{public ExceptionCatcher(){super();}public void catchException(){try{ExceptionThrower throwUp = new ExceptionThrower();throwUp.throwException();}catch(Exception e){System.out.println(\"Inside my catch block\");}}public static void main(String[] args){ExceptionCatcher catcher = new ExceptionCatcher();catcher.catchException();}}package com.aop;import org.aspectj.lang.JoinPoint;public aspect ExceptionHandler{pointcut classList() :within(com.regular..);before(Throwable e) :classList()&& handler()&& args(e){System.out.println(\"Starting before block\");log(thisJoinPointStaticPart, e);System.out.println(\"End of before block\");}private void log(JoinPoint.StaticPart jp, Throwable e){System.out.println(\"Class Name: \" + jp.getSignature().getDeclaringType());System.out.println(\"Error Message\" + e.getMessage() );}}Runing JAD:jad ExceptionCatcher.classParsing ExceptionCatcher.class... Generating ExceptionCatcher.jadCouldn't fully decompile method catchExceptionCouldn't resolve all exception handlers in method catchExceptionNow the JAD Output:// Decompiled by Jad v1.5.7. Copyright 199799 Pavel Kouznetsov.// Jad home page: http://www.geocities.com/SiliconValley/Bridge/8617/jad.html// Decompiler options: packimports(3)// Source File Name:ExceptionCatcher.javapackage com.regular;import com.aop.ExceptionHandler;import com.capitalone.risk.aop.ITestInterface;import com.capitalone.risk.aop.ITestInterfaceAspect;import java.io.PrintStream;import org.aspectj.runtime.reflect.Factory;// Referenced classes of package com.regular://ExceptionThrowerpublic class ExceptionCatcherimplements com.aop.IntroductionPointCut.IPhilipsTarget{public ExceptionCatcher(){}public void catchException(){if(this instanceof ITestInterface)ITestInterfaceAspect.aspectOf().ajc$before$comcapitaloneriskaopITestInterfaceAspect$113((ITestInterface)this);ExceptionThrower throwUp = new ExceptionThrower();throwUp.throwException();break MISSINGBLOCKLABEL77;Exception exception;exception;ExceptionHandler.aspectOf().ajc$before$comaopExceptionHandler$1f8(exception, ajc$tjp0);Exception e = exception;System.out.println(\"Inside my catch block\");break MISSINGBLOCKLABEL77;Throwable throwable;throwable;if(this instanceof ITestInterface)ITestInterfaceAspect.aspectOf().ajc$after$comcapitaloneriskaopITestInterfaceAspect$172((ITestInterface)this);throw throwable;if(this instanceof ITestInterface)ITestInterfaceAspect.aspectOf().ajc$after$comcapitaloneriskaopITestInterfaceAspect$172((ITestInterface)this);return;}public static void main(String args[]){ExceptionCatcher catcher = new ExceptionCatcher();catcher.catchException();}public static final org.aspectj.lang.JoinPoint.StaticPart ajc$tjp0;static{Factory factory = new Factory(\"ExceptionCatcher.java\", Class.forName(\"com.regular.ExceptionCatcher\"));ajc$tjp0 = factory.makeSJP(\"exceptionhandler\",factory.makeCatchClauseSig(\"0com.regular.ExceptionCatcherjava.lang.Exception<missing\"), 33);}}The aspect class:jad ExceptionHandler.classParsing ExceptionHandler.class... Generating ExceptionHandler.jadCouldn't fully decompile method aspectOf// Decompiled by Jad v1.5.7. Copyright 199799 Pavel Kouznetsov.// Jad home page: http://www.geocities.com/SiliconValley/Bridge/8617/jad.html// Decompiler options: packimports(3)// Source File Name:ExceptionHandler.javapackage com.aop;import java.io.PrintStream;import org.aspectj.lang.NoAspectBoundException;import org.aspectj.lang.Signature;public class ExceptionHandler{public ExceptionHandler(){}public void ajc$before$comaopExceptionHandler$1f8(Throwable e,org.aspectj.lang.JoinPoint.StaticPart thisJoinPointStaticPart){System.out.println(\"Starting before block\");log(thisJoinPointStaticPart, e);System.out.println(\"End of before block\");}private void log(org.aspectj.lang.JoinPoint.StaticPart jp, Throwable e){System.out.println(\"Class Name: \" + jp.getSignature().getDeclaringType());System.out.println(\"Error Message\" + e.getMessage());}public static ExceptionHandler aspectOf(){ajc$perSingletonInstance;JVM INSTR dup ;JVM INSTR ifnull 8;goto L1 L2L1:return;L2:throw new NoAspectBoundException();}public static boolean hasAspect(){return ajc$perSingletonInstance != null;}private static void ajc$postClinit(){ajc$perSingletonInstance = new ExceptionHandler();}public static final ExceptionHandler ajc$perSingletonInstance;static{ajc$postClinit();}}Enjoy!Ron"}