{"bug_id": "49638", "title": "Bug 49638exception logging: after() throwing advice can't convert Throwable obj to string and ajc aborts", "description": "The problem is found by the example in Listing 5.15 from Laddad's AspectJ inAction book. It looks like an exception object in after() throwing(Throwable ex)advice has a problem being converted to string in a logger.logp() call.EnvironmentOS:Solaris 8 kernel patch level 10852827 plus j2se recommended patchesJava version:java versionjava version \"1.4.2\"Java(TM) 2 Runtime Environment, Standard Edition (build 1.4.2b28)Java HotSpot(TM) Client VM (build 1.4.2b28, mixed mode)The problem has also been reproduced with AspectJ 1.1.1 on Windows 20005.00.2195, SP 4.Descriptionajc aborts with the following output:trouble in:public class TestException extends java.lang.Object:public static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp0public static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp1public void <init():ALOAD0// TestException this(line 1)INVOKESPECIAL java.lang.Object.<init ()Vconstructorexecution(void TestException.<init())|RETURNconstructorexecution(void TestException.<init())end public void <init()public static void main(String[]):methodexecution(void TestException.main(java.lang.String[]))| methodcall(void TestException.perform())| | catch java.lang.Throwable  E0| | |INVOKESTATIC TestException.perform ()V(line 4)| | catch java.lang.Throwable  E0| |GOTO L0| |E0: ASTORE1| |INVOKESTATIC ExceptionLoggerAspectV2.aspectOf()LExceptionLoggerAspectV2;| |ALOAD1| |GETSTATIC TestException.ajc$tjp0Lorg/aspectj/lang/JoinPoint$StaticPart;| |INVOKEVIRTUALExceptionLoggerAspectV2.ajc$after$ExceptionLoggerAspectV2$14a(Ljava/lang/Throwable;Lorg/aspectj/lang/JoinPoint$StaticPart;)V| |ALOAD1| |ATHROW| |L0: NOP| |ACONSTNULL| |ASTORE2| |INVOKESTATIC ExceptionLoggerAspectV2.aspectOf()LExceptionLoggerAspectV2;| |ALOAD2| |CHECKCAST java.lang.Throwable| |GETSTATIC TestException.ajc$tjp0Lorg/aspectj/lang/JoinPoint$StaticPart;| |INVOKEVIRTUALExceptionLoggerAspectV2.ajc$after$ExceptionLoggerAspectV2$14a(Ljava/lang/Throwable;Lorg/aspectj/lang/JoinPoint$StaticPart;)V| |NOP| methodcall(void TestException.perform())|RETURN(line 5)methodexecution(void TestException.main(java.lang.String[]))end public static void main(String[])public static void perform():methodexecution(void TestException.perform())|ACONSTNULL(line 8)|ASTORE0|ALOAD0// java.lang.Object nullObj(line 9)| methodcall(java.lang.String java.lang.Object.toString())| | catch java.lang.Throwable  E0| | |INVOKEVIRTUAL java.lang.Object.toString ()Ljava/lang/String;| | catch java.lang.Throwable  E0| |GOTO L0| |E0: ASTORE1| |INVOKESTATIC ExceptionLoggerAspectV2.aspectOf()LExceptionLoggerAspectV2;| |ALOAD1| |GETSTATIC TestException.ajc$tjp1Lorg/aspectj/lang/JoinPoint$StaticPart;| |INVOKEVIRTUALExceptionLoggerAspectV2.ajc$after$ExceptionLoggerAspectV2$14a(Ljava/lang/Throwable;Lorg/aspectj/lang/JoinPoint$StaticPart;)V| |ALOAD1| |ATHROW| |L0: NOP| methodcall(java.lang.String java.lang.Object.toString())|POP|RETURN(line 10)methodexecution(void TestException.perform())end public static void perform()end public class TestExceptionABORTException thrown from AspectJ 1.1.1This might be logged as a bug already  find current bugs athttp://bugs.eclipse.org/bugs/buglist.cgi?product=AspectJ&component=CompilerBugs for exceptions thrown have titles File:line from the top stack,e.g., \"SomeFile.java:243\"If you don't find the exception below in a bug, please add a new bugat http://bugs.eclipse.org/bugs/enterbug.cgi?product=AspectJTo make the bug a priority, please include a test programthat can reproduce this exception.can't convert from java.lang.String to java.lang.Throwablecan't convert from java.lang.String to java.lang.Throwableorg.aspectj.weaver.BCException: can't convert from java.lang.String tojava.lang.Throwableat org.aspectj.weaver.bcel.Utility.appendConversion(Utility.java:203)at org.aspectj.weaver.bcel.BcelVar.appendLoadAndConvert(BcelVar.java:57)at org.aspectj.weaver.bcel.BcelAdvice.getAdviceArgSetup(BcelAdvice.java:287)atorg.aspectj.weaver.bcel.BcelAdvice.getAdviceInstructions(BcelAdvice.java:244)atorg.aspectj.weaver.bcel.BcelShadow.weaveAfterReturning(BcelShadow.java:986)at org.aspectj.weaver.bcel.BcelShadow.weaveAfter(BcelShadow.java:941)at org.aspectj.weaver.bcel.BcelAdvice.implementOn(BcelAdvice.java:126)at org.aspectj.weaver.Shadow.implementMungers(Shadow.java:341)at org.aspectj.weaver.Shadow.implement(Shadow.java:313)atorg.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:1006)at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:299)at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:77)at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:417)at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:390)at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:327)atorg.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles(AjBuildManager.java:256)atorg.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:156)atorg.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:70)at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:99)at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:53)at org.aspectj.tools.ajc.Main.run(Main.java:217)at org.aspectj.tools.ajc.Main.runMain(Main.java:155)at org.aspectj.tools.ajc.Main.main(Main.java:72)1 fail|abortSample code is two files, TextException.java and ExceptionLoggerAspectV2.java(see below). To reproduce the problem, do$ ajc .javaFile 1 TestException.javapublic class TestException{public static void main(String[] args) {perform();}public static void perform() {Object nullObj = null;nullObj.toString();}}File 2  ExceptionLoggerAspectV2.javaimport java.util.logging.;import org.aspectj.lang.;public aspect ExceptionLoggerAspectV2{Logger logger = Logger.getLogger(\"exceptions\");ExceptionLoggerAspectV2() {logger.setLevel(Level.ALL);}pointcut exceptionLogMethods(): call( .(..)) && !within(ExceptionLoggerAspectV2);after() thowing(Throwable ex) : exceptionLogMethods() {if (logger.isLoggable(Level.WARNING)) {Signature sig = thisJoinPointStaticPart.getSignature();logger.logp(Level.WARNING,sig.getDeclaringType().getName(),sig.getName(),\"Exception logger aspect\", ex);}}}"}