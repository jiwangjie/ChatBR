{"bug_id": "211674", "title": "Bug 211674[ataspectj] after throwing annotation style is too sensitive to parameter positions", "description": "Reported on the list by Ashley Williams:Having converted my aspects to use the @AspectJ style, I'm now getting a strange error message when a compile my tracing aspect,.First here is the section of code:@Pointcut(\"execution(@Tracing  (..)) && @annotation(tracing)\")void annotatedMethods(Tracing tracing) {}@AfterThrowing(pointcut = \"annotatedMethods(tracing)\", throwing = \"t\")public void logException(JoinPoint thisJoinPoint, Tracing tracing,Throwable t) {Level level = Level.toLevel(tracing.level());if (logger.isEnabledFor(level)) {logger.log(level, formatter.formatSignatureThrowing(thisJoinPoint),t);}}So I am matching on all methods annotated with @Tracing and logging the subclass of Throwable that may have been thrown.However when I run my test case i get the following error:java.lang.VerifyError: (class: com/db/abfo/tracing/PojoOne, method: calculate signature: ()V) catchtype not a subclass of ThrowableThis used to work when I used the aspectj after throwing language extention form:pointcut annotatedMethods(Tracing tracing) : execution(@Tracing  (..)) && @annotation(tracing);after(Tracing tracing) throwing(Throwable t) : annotatedMethods(tracing) {Level level = tracing.level().getLevel();if (logger.isEnabledFor(level)) {logger.log(level, formatter.formatSignatureThrowing(thisJoinPoint),t);}}"}