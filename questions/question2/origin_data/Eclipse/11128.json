{"bug_id": "11128", "title": "Bug 11128Access to a field in a particular supertype through IJavaObject", "description": "It is possible to cast an instance to a super type and query it for a field.This query should return the field from the super type. For the evaluationengine to support this, we need to be able to ask an IJavaObject for a fieldfrom a particular type in the hierarchy as follows:public IJavaFieldVariable getField(String name, String typeSignature) throwsDebugException;An implementation of this API (in JDIObjectValue) is:public IJavaFieldVariable getField(String name, String typeSignature) throwsDebugException {ReferenceType ref = getUnderlyingReferenceType();try {Field field= null;Iterator fields= ref.allFields().iterator();while (fields.hasNext()) {field = (Field)fields.next();if (name.equals(field.name()) &&typeSignature.equals(field.declaringType().signature())) {break;}}if (field != null) {return new JDIFieldVariable((JDIDebugTarget)getDebugTarget(), field,getUnderlyingObject());}} catch (RuntimeException e) {targetRequestFailed(MessageFormat.format(JDIDebugModelMessages.getString(\"JDIObjectValue.exceptionretrievingfield\"),new String[]{e.toString()}), e); //$NONNLS1$}// it is possible to return nullreturn null;}"}