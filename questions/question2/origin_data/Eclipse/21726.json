{"bug_id": "21726", "title": "Bug 21726DrillDownAdapter blindly assumes IAdaptable interface on selected object.", "description": "I found following problem: When TreeContentProvider.getChildren() returns objects that do not implementIAdaptable interface and when DrillDownAdapter is defined and selection appearson that element, than DrillDownAdapter.canGoInto() makes class castexception. It is because blind assumption, that every selection implements IAdaptableinterface. Here is a excerpt from canGoInto:...if (oSelection == null || oSelection.size() != 1)return false;IAdaptable anElement = (IAdaptable) oSelection.getFirstElement();...This cause lot of problems when using \"external\" objects as tree elements (letsay parsed xml file  these elements does not deal with eclipse IAdaptableinterface). Wrapping these to some kind of \"TreeNode\" causes another problem how to do update/refresh on such tree (tracking backward object change toTreeNode is not simple).Is there any chance that DrillDownAdapter (and possibly others ) shall notrequire IAdaptable interface?"}