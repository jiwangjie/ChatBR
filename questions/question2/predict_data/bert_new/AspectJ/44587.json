{"id": "44587", "title": "Bug 44587Erroneous exception conversion", "description": "Bug 44587Erroneous exception conversion || initialization(Main.new(..)) {System.err.println(\"exception thrown at \"+thisJoinPointStaticPart);t.printStackTrace(System.err);}}package client;import library.Loggable;public aspect LogManager {declare parents: client.. implements Loggable;}package client;public class Main {public static void main(String args[]) {new Main();}}package library;import java.util.logging.Logger;public aspect LogManager {private Logger Loggable.logger = doGetLogger();public Logger Loggable.getLogger() { return logger; }private Logger Loggable.doGetLogger() {throw new RuntimeException(\"evil\");//return Logger.getLogger(\"main\");}}package library;public interface Loggable {} ", "OB": "The following code results in an incorrect exception NoClassDefFoundErrorbeing thrown (and without a stack trace). Here is the output when runningafter compiling with AspectJ from head (and AspectJ 1.1.1):C:\\devel\\test\\excHandling\\interTypejava client.MainException in thread \"main\" java.lang.NoClassDefFoundErrorat client.Main.main(Main.java:6)AspectJ 1.0.6 doesn't exhibit this problem; it produces the following output:C:\\devel\\test\\excHandling\\interTypejava client.MainException in thread \"main\" java.lang.ExceptionInInitializerErrorat client.Main.main(Main.java;client/ExceptionHandling.java[1k];library/LogManager.java[2k]:1004)Caused by: java.lang.RuntimeException: evilat client.ExceptionHandling.doGetLoggerlibraryLogManager(ExceptionHandling.java;library/LogManager.java[1k]:1009)at client.ExceptionHandling.<init(ExceptionHandling.java;library/LogManager.java[1k]:1006)at client.ExceptionHandling.<clinit(ExceptionHandling.java;library/LogManager.java[1k]:3)... 1 moreThis example is probably related to bug 44586.If you change the after throwing advice in client/ExceptionHandling.java toremove the execution OR initialization part, you get similar the followingoutput to the AspectJ 1.0.6 case; the exception isn't swallowed.Here is our test code:package client;public aspect ExceptionHandling {after() throwing (Throwable t) : execution( Main.(..)) ", "EB": "", "SR": ""}