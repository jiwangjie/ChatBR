{"id": "114495", "title": "Bug 114495unqualified superaspect<T pointcut sortafunny in subaspect", "description": "Bug 114495unqualified superaspect<T pointcut sortafunny in subaspect \"I get no compiler error in either case, so perhaps \"outside ofthat type or subtypes. (My initial aspect was aperthis(), so I thought that was the problem. )Not sure if this is treated by bug 112105 or any other generics bugs (is there atag for them? )package bugs;public class ParameterizedTypeInPointcut {public static void main(String[] args) {C.go();}static class C {static void go() {}}}abstract aspect AAParameterizedTypeInPointcut<Target {pointcut going() :call(void Target.go()) ;before() : going() {System.out.println(\"AA.going()\");}}aspect AParameterizedTypeInPointcut extendsAAParameterizedTypeInPointcut<ParameterizedTypeInPointcut.C{declare warning : going() : \"going()\"; // works finebefore() : going() { // advice not appliedSystem.out.println(\"A.going()\");}} ", "OB": "Advice not applied in subaspect using parameterized superaspect pointcut withoutqualifying with type parameter.Declare error using same locution works.Doc ambiguous:\"All references to a pointcut declared in a generic type fromoutside of that type must be via a parameterized type reference, and not a rawtype reference. \"But can't interfaces can be parameterized and pointcutsdeclared on interfaces?Eek!This was disconcerting because the declare warning showed the pointcut wascorrect, but still the advice was not being applied. ", "EB": "", "SR": ""}