{"id": "12772", "title": "Bug 12772Support for 2.0 startup sequence", "description": "Bug 12772Support for 2.0 startup sequence Defect created for tracking of changes to the executable launcher and Main.javato support the 2.0 startup sequence. Also seehttp://dev.eclipse.org/viewcvs/index.cgi/%7Echeckout%7E/platformupdatehome/doc/working/startup.htmlSummary of prior email exchanges follows ... kcornell@Rational.Com A few questions:1) I have been looking at the Main.java code (from the Mar 21 stable drop) andthe logic in the showSplash() method expects the corresponding showSplashprocess (with the bitmap pathname) to complete before it will format the endsplash command. klicnik@ca.ibm.com (1) the current assumption is that the executable launcher knows the relativename of the splash bitmap just like in R1.0. If directory was not specified (ie. (2) good question ... given the restart time is not trivial (starting fromscratch) my vote would be to put up the splash again (ie. There are 2 cases that will cause restart ...restart once the workbench was fully up and running, and restart due tocompletion of install/update (triggered during regular startup with changesdetected). kcornell@Rational.Com I am trying to figure out how the launcher will work in the given startupsequence you have defined. There are some real problems because of multipleprocesses and the event processing loops. (It would be quite simple on Win32,but the Motif and Photon versions may require some interesting tricks, which Iwould like to avoid. I am starting to investigate a slightly different startupsequence, which will probably require some minor changes to Main.java. It willtake me several days to come up with a solution that will work on all threewindow systems (win32, motif and photon), let alone make it work on Windows,Linux, Solaris, HPUX , AIX and QNX. ", "OB": "Am I correct?2) If the launcher detects an exit code of 23 (restart), is the splash screensupposed to be displayed again? The Main.java code simply gets achance to point it at a different directory to start the relative lookup (itoptionally appends an extra argument to the \"showsplash\" command passed toMain.java). It expects the showsplash process to lookup the bitmap relative tothe directory path. Main.java did not supplythe extra argument) the lookup should be relative to the location of theexecutable (just like in R1.0). Main.java appends the resource handle to the endsplash commandpassed into Main.java, and propagates the comand argument \"upstream\". At somelater point the platform causes the endsplash to be executed. In both cases by the time the restart is triggered the originalsplash is down. ", "EB": "The showsplash process should then shows thebitmap, write the resource handle to stdout (Main.java is reading the stream),and terminate. ", "SR": "restart exactly as ifthis was the original start). "}