{"id": "50582", "title": "Bug 50582Small JSPs do not set ContentLength (and use chunked encoding) if AccessLogValve is configured", "description": "%2. Expected response: (Tomcat 7.0.4)HTTP/1.1 200 OKServer: ApacheCoyote/1.1SetCookie: JSESSIONID=0AFC2875C06A962DF8A02DE6A780F721; Path=/; HttpOnlyContentType: text/html;charset=ISO88591ContentLength: 6Date: Thu, 13 Jan 2011 21:16:23 GMThello!4. Actual response: (Tomcat 7.0.6)HTTP/1.1 200 OKServer: ApacheCoyote/1.1SetCookie: JSESSIONID=2C176DBAC054D5BBF3D99FBE5C026915; Path=/; HttpOnlyContentType: text/html;charset=ISO88591TransferEncoding: chunkedDate: Thu, 13 Jan 2011 21:23:19 GMT6hello!0===============================================Investigation.If I place a breakpoint in AbstractHttp11ProcessorprepareResponse() I see the following line long contentLength = response.getContentLengthLong();returns 1 and the call stack is:Daemon Thread [\"httpbio8080\"exec1] (Suspended)Response.getContentLengthLong() line: 523Http11Processor(AbstractHttp11Processor).prepareResponse() line: 887Http11Processor(AbstractHttp11Processor).action(ActionCode, Object) line: 739Response.action(ActionCode, Object) line: 170Response.sendHeaders() line: 350OutputBuffer.doFlush(boolean) line: 308OutputBuffer.flush() line: 291Response.getBytesWritten(boolean) line: 327AccessLogValve$ByteSentElement.addElement(StringBuilder, Date, Request, Response, long) line: 1052AccessLogValve.log(Request, Response, long) line: 579AccessLogValve.invoke(Request, Response) line: 562StandardEngineValve.invoke(Request, Response) line: 118CoyoteAdapter.service(Request, Response) line: 380Http11Processor.process(SocketWrapper<Socket) line: 243Http11Protocol$Http11ConnectionHandler.process(SocketWrapper<Socket, SocketStatus) line: 188Http11Protocol$Http11ConnectionHandler.process(SocketWrapper<Socket) line: 166JIoEndpoint$SocketProcessor.run() line: 288ThreadPoolExecutor$Worker.runTask(Runnable) line: 886ThreadPoolExecutor$Worker.run() line: 908TaskThread(Thread).run() line: 662Note OutputBuffer.flush() call above.If I remove AccessLogValve from configuration, the response.getContentLengthLong();call returns \"8\" as expected and call stack is:Daemon Thread [\"httpbio8080\"exec1] (Suspended)Http11Processor(AbstractHttp11Processor).prepareResponse() line: 888Http11Processor(AbstractHttp11Processor).action(ActionCode, Object) line: 739Response.action(ActionCode, Object) line: 170Response.sendHeaders() line: 350OutputBuffer.doFlush(boolean) line: 308OutputBuffer.close() line: 275Response.finishResponse() line: 501CoyoteAdapter.service(Request, Response) line: 406Http11Processor.process(SocketWrapper<Socket) line: 243Http11Protocol$Http11ConnectionHandler.process(SocketWrapper<Socket, SocketStatus) line: 188Http11Protocol$Http11ConnectionHandler.process(SocketWrapper<Socket) line: 166JIoEndpoint$SocketProcessor.run() line: 288ThreadPoolExecutor$Worker.runTask(Runnable) line: 886ThreadPoolExecutor$Worker.run() line: 908TaskThread(Thread).run() line: 662===============================================The value returned by response.getContentLengthLong() should be set explicitly (e.g. with contentlength header). ", "OB": "Bug 50582Small JSPs do not set ContentLength (and use chunked encoding) if AccessLogValve is configured The second stack trace includes OutputBuffer.close() call and it sets the length value to the response:coyoteResponse.setContentLength(bb.getLength());This regression is triggered by flushing when AccessLogValve asks for the count of bytes written and was introduced when implementing 50496. ", "EB": "", "SR": "Reported in the following thread on users@:http://markmail.org/thread/awcu5ler2m77jjokSteps to reproduce:1. Create the following JSP page, simple.jsp:<%= \"hello!\" Send the following request:GET /simple.jsp HTTP/1.1Host: localhostKeepAlive: 115Connection: keepalive3. "}