{"id": "42727", "title": "Bug 42727CoyoteReader readLine returns null for some post request bodies that are a multiple of MAXLINELENGTH in size", "description": "i have a webapp running on jboss4.0.5.GA/apachetomcat5.5.20 that reads inthe http post request body and processes it.i noticed that for request bodies that didn't contain line separators and thathad sizes that were exact multiples oforg.apache.catalina.connector.CoyoteReader.MAXLINELENGTH (4096), i wasreceiving null when calling org.apache.catalina.connector.CoyoteReader.readLine().i believe that the problem is at line 155 inorg.apache.catalina.connector.CoyoteReader, where on the last iteration throughthe loop, \"pos\" does equal zero and null is returned even though data has beenaggregated.here's a command to run in cygwin to easily reproduce the problem:for requestSize in 4095 4096 4097 8191 8192 8193; do dd if=/dev/zero bs=1ccount=$requestSize | tr '\\000' 'A' | curl databinary @http://localhost:8080/DebugJboss/DebugServlet$requestSize.txt; done;output from directory listing (size filename):4095 4095.txt0 4096.txt4097 4097.txt8191 8191.txt0 8192.txt8193 8193.txthere's the bulk of the servlet code i used to reproduce the problem:public class DebugServlet extends HttpServlet {protected void doPost(HttpServletRequest arg0, HttpServletResponse arg1)throws ServletException, IOException {BufferedReader br = arg0.getReader();Writer writer = arg1.getWriter();String line = null;while ((line = br.readLine()) != null) {writer.write(line);}writer.close();br.close();}}it appears that a workaround is to wrap the requests's input stream instead:BufferedReader br = new BufferedReader(new InputStreamReader(arg0.getInputStream())); ", "OB": "Bug 42727CoyoteReader readLine returns null for some post request bodies that are a multiple of MAXLINELENGTH in size ", "EB": "", "SR": ""}