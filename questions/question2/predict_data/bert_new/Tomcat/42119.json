{"id": "42119", "title": "Bug 42119request.getCharacterEncoding misparses charset=UTF8; xyz=3", "description": "Bug 42119request.getCharacterEncoding misparses charset=UTF8; xyz=3 (This bug is also present in Coyote source 6.0.10. ", "OB": ")If there is an HTTP header ContentType: text/abc; charset=UTF8; xyz=3request.getCharacterEncoding() returns \"UTF8; xyz=3\" but Tomcat 4.1.24 returns\"UTF8\".In Tomcat 4.1.24, request.getCharacterEncoding uses parseCharacterEncodingdefined injakartatomcat4.1.24src/catalina/src/share/org/apache/catalina/util/RequestUtil.javaand it correctly handles the case of other ContentType parameters.In Tomcat 5.5.23, however, request.getCharacterEncoding usesgetCharsetFromContentType defined infromapachetomcat5.5.23src/connectors/util/java/org/apache/tomcat/util/http/ContentType.javawhich does not search for a possible terminating semicolon in the charset, thuserroneously including additional characters in the charset.The code in 5.5.23 has a comment begins// Basically return everything after \";charset=\"Please consider using the code from 4.1.24This problem showed up when ContentType was multipart/mixed and a clientspecified a charset parameter to ContentType; however, it will occur in anyContentType where charset is specified and is not the last parameter. ", "EB": "", "SR": ""}