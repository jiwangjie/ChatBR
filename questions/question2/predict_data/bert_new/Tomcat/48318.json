{"id": "48318", "title": "Bug 48318WebDAV servlet returns 500 if files not readable", "description": "", "OB": "Bug 48318WebDAV servlet returns 500 if files not readable If a directory contains a file that is not readable by the Tomcatprocess (eg file permissions, dangling symlink) then Tomcat throws aNullPointerException and returns a 500 Internal Server Error to theclient.Throwing NPE in these circumstances is certainly wrong.Returning 500with no further information is unhelpful behavior and should be fixed.Generally, interfaces of this type at least list inaccessible files(Windows Explorer, UNIX ls(1), BSD FTP client, ...) and only return anerror when one attempts to access such a file.markt suggests an alternative of simply ignoring inaccessible files but notesthat \"could cause issues if a user tries to upload a file of that name\" andsuggests better error reporting.Stack:SEVERE: Servlet.service() for servlet webdav threw exceptionjava.lang.NullPointerExceptionat org.apache.catalina.servlets.WebdavServlet.parseProperties(Unknown Source)at org.apache.catalina.servlets.WebdavServlet.doPropfind(Unknown Source)at org.apache.catalina.servlets.WebdavServlet.service(Unknown Source)at javax.servlet.http.HttpServlet.service(Unknown Source)...Method parseProperties() is injava/org/apache/catalina/servlets/WebdavServlet.java.org and the NPEhappens when cacheEntry.attributes is null (case FINDBYPROPERTY in mytesting and possibly in other cases too).Following the breadcrumbs via:cacheEntry = resources.lookupCache(path);leads eventually to java/org/apache/naming/resources/FileDirContext.java:public Attributes getAttributes(String name, String[] attrIds)throws NamingException {// Building attribute listFile file = file(name);if (file == null)throw new NamingException(sm.getString(\"resources.notFound\", name));...protected File file(String name) {File file = new File(base, name);if (file.exists() && file.canRead()) {... // do useful stuff} else {return null; // ouch} ", "EB": "", "SR": ""}