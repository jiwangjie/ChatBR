{"id": "25608", "title": "Bug 25608[Dialogs] ProgressMonitorDialog won't cancel unless it's forked", "description": " Bug 25608[Dialogs] ProgressMonitorDialog won't cancel unless it's forked )package org.myco.action;import java.lang.reflect.InvocationTargetException;import org.eclipse.core.resources.IProject;import org.eclipse.core.runtime.IProgressMonitor;import org.eclipse.jdt.core.IJavaProject;import org.eclipse.jface.action.IAction;import org.eclipse.jface.dialogs.ProgressMonitorDialog;import org.eclipse.jface.operation.IRunnableWithProgress;import org.eclipse.jface.viewers.ISelection;import org.eclipse.jface.viewers.IStructuredSelection;import org.eclipse.swt.widgets.Display;import org.eclipse.swt.widgets.MessageBox;import org.eclipse.swt.widgets.Shell;import org.eclipse.ui.IActionDelegate;public class MyMenuAction implements IActionDelegate {private ISelection currentSelection = null;private Shell shell = null;public MyMenuAction() {super();Display display = Display.getCurrent();shell = (display == null) ? null : display.getActiveShell();}private void displayMessage(String title, String message, int iIconType){MessageBox messageBox = new MessageBox(shell,org.eclipse.swt.SWT.OK | iIconType | org.eclipse.swt.SWT.APPLICATIONMODAL);messageBox.setMessage(message);messageBox.setText(title);messageBox.open();}public ProgressMonitorDialog getProgressMonitorDialog() {return new ProgressMonitorDialog(shell);}private ISelection getCurrentSelection() {return currentSelection;}private IProject getSelected() {ISelection selection = getCurrentSelection();if ((selection == null) || selection.isEmpty() || ! (selectioninstanceof IStructuredSelection)) {return null;}Object element =((IStructuredSelection)selection).getFirstElement();if(element instanceof IProject) {return (IProject)element;}if(element instanceof IJavaProject) {return ((IJavaProject)element).getProject();}return null;}public void selectionChanged(IAction action, ISelection selection) {currentSelection = selection;action.setEnabled(true);}public void run(IAction action) {final IProject project = getSelected();if(project == null) {displayMessage(\"MyMenuAction Title\", \"No projectselected\", org.eclipse.swt.SWT.ICONINFORMATION);return;}try {ProgressMonitorDialog dialog =getProgressMonitorDialog();IRunnableWithProgress runnable = newIRunnableWithProgress() {public void run(IProgressMonitor monitor) throwsInvocationTargetException, InterruptedException {boolean isCanceled = false;for(int j=0; j<100000; j++) {if(monitor.isCanceled()) {isCanceled = true;System.out.println(\"Monitor was cancelled for \" + project.getName() + \" oniteration \" + j);break;}monitor.subTask(\"Task \" + j);}if(!isCanceled) {System.out.println(\"Monitor wasnever cancelled. \");}}};dialog.run(false, true, runnable); // false==!fork,true==cancelable//dialog.run(true, true, runnable); // true==fork,true==cancelable}catch (InvocationTargetException exc) {exc.printStackTrace();}catch (InterruptedException exc) {exc.printStackTrace();}}}", "OB": " On ProgressMonitorDialog, there's a method:public void run(boolean fork, boolean cancelable, IRunnableWithProgressrunnable)If the value of \"fork\" is false, the dialog cannot be canceled. The cancelbutton remains enabled and isCanceled() always returns false.The following code demonstrates this behaviour.", "EB": "", "SR": " (I chose to enable the popupmenu extension on one IProject."}