{"id": "39236", "title": "Bug 39236Completely different behaviour for creating a shell with a parent versus calling setParent", "description": " Bug 39236Completely different behaviour for creating a shell with a parent versus calling setParent", "OB": " Launch the folowing example.Note that the shell in red is located at (10,10)relative to the display rather than to its parent shell.Click in the red shell which will trigger the setParent call (to the sameparent as it already had).Suddenly the red shell becomes an MDI shell (rather than a dialog) and itmoves with the parent shell and is positioned relative to the parent shell.public static void main(String[] args) {final Display display = new Display();final Shell shell = new Shell(display);final Shell s = new Shell(shell);s.setBackground(display.getSystemColor(SWT.COLORRED));s.addMouseListener(new MouseAdapter() {public void mouseDown(org.eclipse.swt.events.MouseEvent e) {s.setParent(shell);}});shell.open();s.setBounds(10, 10, 100, 100);s.open();while (!shell.isDisposed()) {if (!display.readAndDispatch())display.sleep();}display.dispose();}", "EB": "", "SR": " Launch the folowing example.Note that the shell in red is located at (10,10)relative to the display rather than to its parent shell.Click in the red shell which will trigger the setParent call (to the sameparent as it already had).Suddenly the red shell becomes an MDI shell (rather than a dialog) and itmoves with the parent shell and is positioned relative to the parent shell.public static void main(String[] args) {final Display display = new Display();final Shell shell = new Shell(display);final Shell s = new Shell(shell);s.setBackground(display.getSystemColor(SWT.COLORRED));s.addMouseListener(new MouseAdapter() {public void mouseDown(org.eclipse.swt.events.MouseEvent e) {s.setParent(shell);}});shell.open();s.setBounds(10, 10, 100, 100);s.open();while (!shell.isDisposed()) {if (!display.readAndDispatch())display.sleep();}display.dispose();}"}