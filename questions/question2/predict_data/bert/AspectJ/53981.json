{"id": "53981", "title": "Bug 53981proceed used as method name in around advice", "description": " Bug 53981proceed used as method name in around advice Using a method named proceed(..) in around advice confuses the compiler (in atleast the 23 ways shown below).True of the current tree (untested in 1.1.1).Workaround for now is to renamethe method. first problem: NPE in compilerjava.lang.NullPointerExceptionatorg.aspectj.ajdt.internal.compiler.ast.MakeDeclsPublicVisitor.endVisit(MakeDeclsPublicVisitor.java:44)public class Proceeding {public static void main(String[] args) { }static aspect A {interface IProceed {void proceed(Runnable next);}IProceed decorator;void around() : execution(void main(String[])) {decorator.proceed(new Runnable() {public void run() {proceed();}});}}} second problem: incorrect error wrt number of argumentspublic class Proceeding {public static void main(String[] args) {}static aspect A {void around() : execution(void main(String[])) {Proceeding.proceed(null); // BUG: treated as proceed(Object);}}static void proceed(Object o) {}} third hypothetical: we should document how ambiguity is resolvedpublic class Proceeding {public static void main(String[] args) {}static aspect A {void around() : execution(void main(String[])) {proceed(); // special form or Proceeding.proceed()? }}void proceed() {}}", "OB": "", "EB": "", "SR": ""}