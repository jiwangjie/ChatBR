{"id": "61768", "title": "Bug 61768scope for intertype methods", "description": " Bug 61768scope for intertype methods Note that it's ok to access private staticfields of the aspect, but not to use private classes of the aspect.If this is a feature and not a bug, what are theprecise scope rules for intertype method declarations?/aspect Aspect {private static int y = 5;private class A { int x = 3; }private static void B.happy() {System.out.println(y);// happy accessing private field y}private static void B.foo(A z) {System.out.println(z.x);// ERROR: The type Aspect.A is not visible}public void B.bar() {B.foo(new A());// ERROR: The type A is not visible}}class B {}public class IT {public static void main(String[] args) {new B().bar();}}", "OB": " / According to the documentation, the scope rules forintertype method declarations are interpretedfrom the originating aspect. The only exceptions(I thought) are the use of \"this\" and \"super\" which refer tothe target type.According to that interpretation, the program below is type correct, butajc generates two error messages, shown in commentsat the relevant lines.", "EB": "", "SR": ""}