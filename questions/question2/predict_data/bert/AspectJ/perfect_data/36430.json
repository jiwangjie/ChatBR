{"id": "36430", "title": "Bug 36430Support Xreweavable option", "description": " Bug 36430Support Xreweavable option Adding a RFE as Wes suggested...Wes' reply:There are some issues with the Xnoweave option that we won'thave the time to carefully resolve for 1.1, even though,as you suggest, there may be times when it would be useful.The workaround at present is to weave tracing into transactionswhen the transactions jar is compiled. Personally, I think this caseajc injars app.jar;transaction.jaraspectpath transaction.jar;tracing.jardoesn't make sense.Things on the aspectpath are defined,whereas things in injars will be woven into and redefined.It's not clear from this command which variant the userexpects when refering to a type in transactions.jar.Ramnivas Laddad wrote: Hello, I think I have a use case that cannot be implemented (at least elegantly, anyway) without noweave/XnoWeave option (and thus I request to make it a regular option instead of experimental X). Basically, I want to have my tracing.jar ( contains tracing aspect) weave into transaction.jar (contains abstract transaction mangement aspects, concrete policy enforcement aspects, and supporting classes). Assume app.jar contain business classes and interfaces. Ramnivas", "OB": " Each of the jar is created using ourjar (but not noweave or XnoWeave). Everything works fine if I create the original jar files using noweave.", "EB": " I could workaround by creating multiple jars, but I hink noweave is the right approach as I really don't want to ship multiple jars that are needed to implement a single concern and expect the users to correctly specify jar files in injars and aspectpath.", "SR": " e.g., do the buildajc @tracing.lst outjar tracing.jarajc @transactions.lst aspectpath tracing.jar \\outjar transactions.jarajc @app.lst aspectpath \"tracing.jar;transactions.jar\" \\outjar app.jar build the jarmkdir finalcd finaljar xf ../tracing.jarjar xf ../transactions.jarjar xf ../app.jar fixup manifest, etc?jar cf ../final.jar What if you don't have the sources for the transactions.jar?This is a case of getting binary transactions aspects from avendor who won't provide source and wanting to weave yourtracing into it.I would hope that by the time that problembecomes prevalent, we will have a solution for it.If you'd like to keep this on the radar, please submit thisdiscussion as an RFE for the compiler athttp://dev.eclipse.org/bugs/enterbug.cgi?product=AspectJThank you WesP.S. To build the final system I issue the following command:ajc injars app.jar;transaction.jaraspectpath transaction.jar;tracing.jar Now compiler gives me error due to multiply woven classes and aspects in transaction.jar."}