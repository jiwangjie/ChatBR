{"id": "80249", "title": "Bug 80249Order of types passed to compiler determines weaving behavior", "description": "", "OB": " Bug 80249Order of types passed to compiler determines weaving behavior Currently, the order in which you specify types when passing them to thecompiler can affect how they are woven:For example, if we have class A and class B extends AAlso, an aspect that'declare parents: A+ implements Serializable' then depending on whether we see Afirst, we may or may not make B serializable.The fix is that when we weave a type, we first weave its supertype then itssuperinterfaces (if they were also passed to the compiler).The problematic construct is declare parentsso we only process the types in aspecial order if there are declare parents around.Also, because we can'tcurrently do decp when binary weaving, the order processing logic is only beingput into the source weaving pipeline.", "EB": "", "SR": ""}