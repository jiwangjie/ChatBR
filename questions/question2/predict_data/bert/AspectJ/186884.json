{"id": "186884", "title": "Bug 186884Unhandled Kind of New Exception when have advice for Pointcut call(Throwable+.new(..))", "description": " Bug 186884Unhandled Kind of New Exception when have advice for Pointcut call(Throwable+.new(..)) The error happens when having at least \"before()\" or \"after()\" advice. I tried empty advice and it still fails.Full Stack Trace:trouble in:public class com.liferay.filters.compression.CompressionFilter extends java.lang.Object implements javax.servlet.Filter:static boolean useCompressionFilterpublic static final String ENCODINGprivate static final String ALREADYFILTEREDprivate static final String COMPRESS = \"compress\"private static final String INCLUDE = \"javax.servlet.include.requesturi\"private static org.apache.commons.logging.Log logstatic Class class$com$liferay$filters$compression$CompressionFilter [Synthetic]public void init(javax.servlet.FilterConfig):methodexecution(void com.liferay.filters.compression.CompressionFilter.init(javax.servlet.FilterConfig))|RETURN(line 80)methodexecution(void com.liferay.filters.compression.CompressionFilter.init(javax.servlet.FilterConfig))end public void init(javax.servlet.FilterConfig)public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException:methodexecution(void com.liferay.filters.compression.CompressionFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain))|GETSTATIC com.liferay.filters.compression.CompressionFilter.log Lorg/apache/commons/logging/Log;(line 86)| methodcall(boolean org.apache.commons.logging.Log.isDebugEnabled())| |INVOKEINTERFACE org.apache.commons.logging.Log.isDebugEnabled ()Z| methodcall(boolean org.apache.commons.logging.Log.isDebugEnabled())|IFEQ L1|GETSTATIC com.liferay.filters.compression.CompressionFilter.useCompressionFilter Z(line 87)|IFEQ L0|GETSTATIC com.liferay.filters.compression.CompressionFilter.log Lorg/apache/commons/logging/Log;(line 88)|LDC \"Compression is enabled\"| methodcall(void org.apache.commons.logging.Log.debug(java.lang.Object))| |INVOKEINTERFACE org.apache.commons.logging.Log.debug (Ljava/lang/Object;)V| methodcall(void org.apache.commons.logging.Log.debug(java.lang.Object))|GOTO L1|L0: GETSTATIC com.liferay.filters.compression.CompressionFilter.log Lorg/apache/commons/logging/Log;(line 91)|LDC \"Compression is disabled\"| methodcall(void org.apache.commons.logging.Log.debug(java.lang.Object))| |INVOKEINTERFACE org.apache.commons.logging.Log.debug (Ljava/lang/Object;)V| methodcall(void org.apache.commons.logging.Log.debug(java.lang.Object))|L1: ALOAD1// Ljavax/servlet/ServletRequest; req(line 95)|CHECKCAST javax.servlet.http.HttpServletRequest|ASTORE 4// Ljavax/servlet/http/HttpServletRequest; httpReq|ALOAD2// Ljavax/servlet/ServletResponse; res(line 96)|CHECKCAST javax.servlet.http.HttpServletResponse|ASTORE 5// Ljavax/servlet/http/HttpServletResponse; httpRes|ALOAD 4// Ljavax/servlet/http/HttpServletRequest; httpReq(line 98)|GETSTATIC com.liferay.filters.compression.CompressionFilter.ENCODING Ljava/lang/String;| methodcall(void javax.servlet.http.HttpServletRequest.setCharacterEncoding(java.lang.String))| |INVOKEINTERFACE javax.servlet.http.HttpServletRequest.setCharacterEncoding (Ljava/lang/String;)V| methodcall(void javax.servlet.http.HttpServletRequest.setCharacterEncoding(java.lang.String))|ALOAD 4// Ljavax/servlet/http/HttpServletRequest; httpReq(line 100)| methodcall(java.lang.String com.liferay.util.Http.getCompleteURL(javax.servlet.http.HttpServletRequest))| |INVOKESTATIC com.liferay.util.Http.getCompleteURL (Ljavax/servlet/http/HttpServletRequest;)Ljava/lang/String;| methodcall(java.lang.String com.liferay.util.Http.getCompleteURL(javax.servlet.http.HttpServletRequest))|ASTORE 6// Ljava/lang/String; completeURL|GETSTATIC com.liferay.filters.compression.CompressionFilter.useCompressionFilter Z(line 102)|IFEQ L3|ALOAD0// Lcom/liferay/filters/compression/CompressionFilter; this|ALOAD 4// Ljavax/servlet/http/HttpServletRequest; httpReq| methodcall(boolean com.liferay.filters.compression.CompressionFilter.isCompress(javax.servlet.http.HttpServletRequest))| |INVOKEVIRTUAL com.liferay.filters.compression.CompressionFilter.isCompress (Ljavax/servlet/http/HttpServletRequest;)Z| methodcall(boolean com.liferay.filters.compression.CompressionFilter.isCompress(javax.servlet.http.HttpServletRequest))|IFEQ L3|ALOAD0// Lcom/liferay/filters/compression/CompressionFilter; this|ALOAD 4// Ljavax/servlet/http/HttpServletRequest; httpReq| methodcall(boolean com.liferay.filters.compression.CompressionFilter.isInclude(javax.servlet.http.HttpServletRequest))| |INVOKEVIRTUAL com.liferay.filters.compression.CompressionFilter.isInclude (Ljavax/servlet/http/HttpServletRequest;)Z| methodcall(boolean com.liferay.filters.compression.CompressionFilter.isInclude(javax.servlet.http.HttpServletRequest))|IFNE L3|ALOAD 4// Ljavax/servlet/http/HttpServletRequest; httpReq| methodcall(boolean com.liferay.util.BrowserSniffer.acceptsGzip(javax.servlet.http.HttpServletRequest))| |INVOKESTATIC com.liferay.util.BrowserSniffer.acceptsGzip (Ljavax/servlet/http/HttpServletRequest;)Z| methodcall(boolean com.liferay.util.BrowserSniffer.acceptsGzip(javax.servlet.http.HttpServletRequest))|IFEQ L3|ALOAD0// Lcom/liferay/filters/compression/CompressionFilter; this|ALOAD 4// Ljavax/servlet/http/HttpServletRequest; httpReq| methodcall(boolean com.liferay.filters.compression.CompressionFilter.isAlreadyFiltered(javax.servlet.http.HttpServletRequest))| |INVOKEVIRTUAL com.liferay.filters.compression.CompressionFilter.isAlreadyFiltered (Ljavax/servlet/http/HttpServletRequest;)Z| methodcall(boolean com.liferay.filters.compression.CompressionFilter.isAlreadyFiltered(javax.servlet.http.HttpServletRequest))|IFNE L3|GETSTATIC com.liferay.filters.compression.CompressionFilter.log Lorg/apache/commons/logging/Log;(line 106)| methodcall(boolean org.apache.commons.logging.Log.isDebugEnabled())| |INVOKEINTERFACE org.apache.commons.logging.Log.isDebugEnabled ()Z| methodcall(boolean org.apache.commons.logging.Log.isDebugEnabled())|IFEQ L2|GETSTATIC com.liferay.filters.compression.CompressionFilter.log Lorg/apache/commons/logging/Log;(line 107)|NEW java.lang.StringBuffer|DUP|LDC \"Compressing \"| constructorcall(void java.lang.StringBuffer.<init(java.lang.String))| |INVOKESPECIAL java.lang.StringBuffer.<init (Ljava/lang/String;)V| constructorcall(void java.lang.StringBuffer.<init(java.lang.String))|ALOAD 6// Ljava/lang/String; completeURL| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))| |INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))| methodcall(java.lang.String java.lang.StringBuffer.toString())| |INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;| methodcall(java.lang.String java.lang.StringBuffer.toString())| methodcall(void org.apache.commons.logging.Log.debug(java.lang.Object))| |INVOKEINTERFACE org.apache.commons.logging.Log.debug (Ljava/lang/Object;)V| methodcall(void org.apache.commons.logging.Log.debug(java.lang.Object))|L2: ALOAD 4// Ljavax/servlet/http/HttpServletRequest; httpReq(line 110)|GETSTATIC com.liferay.filters.compression.CompressionFilter.ALREADYFILTERED Ljava/lang/String;|GETSTATIC java.lang.Boolean.TRUE Ljava/lang/Boolean;| methodcall(void javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String, java.lang.Object))| |INVOKEINTERFACE javax.servlet.http.HttpServletRequest.setAttribute (Ljava/lang/String;Ljava/lang/Object;)V| methodcall(void javax.servlet.http.HttpServletRequest.setAttribute(java.lang.String, java.lang.Object))|NEW com.liferay.filters.compression.CompressionResponse(line 112)|DUP|ALOAD 5// Ljavax/servlet/http/HttpServletResponse; httpRes| constructorcall(void com.liferay.filters.compression.CompressionResponse.<init(javax.servlet.http.HttpServletResponse))| |INVOKESPECIAL com.liferay.filters.compression.CompressionResponse.<init (Ljavax/servlet/http/HttpServletResponse;)V| constructorcall(void com.liferay.filters.compression.CompressionResponse.<init(javax.servlet.http.HttpServletResponse))|ASTORE 7// Lcom/liferay/filters/compression/CompressionResponse; compressionResponse|ALOAD3// Ljavax/servlet/FilterChain; chain(line 115)|ALOAD1// Ljavax/servlet/ServletRequest; req|ALOAD 7// Lcom/liferay/filters/compression/CompressionResponse; compressionResponse| methodcall(void javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse))| |INVOKEINTERFACE javax.servlet.FilterChain.doFilter (Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V| methodcall(void javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse))|ALOAD 7// Lcom/liferay/filters/compression/CompressionResponse; compressionResponse(line 117)| methodcall(void com.liferay.filters.compression.CompressionResponse.finishResponse())| |INVOKEVIRTUAL com.liferay.filters.compression.CompressionResponse.finishResponse ()V| methodcall(void com.liferay.filters.compression.CompressionResponse.finishResponse())|GOTO L5|L3: GETSTATIC com.liferay.filters.compression.CompressionFilter.log Lorg/apache/commons/logging/Log;(line 120)| methodcall(boolean org.apache.commons.logging.Log.isDebugEnabled())| |INVOKEINTERFACE org.apache.commons.logging.Log.isDebugEnabled ()Z| methodcall(boolean org.apache.commons.logging.Log.isDebugEnabled())|IFEQ L4|GETSTATIC com.liferay.filters.compression.CompressionFilter.log Lorg/apache/commons/logging/Log;(line 121)|NEW java.lang.StringBuffer|DUP|LDC \"Not compressing \"| constructorcall(void java.lang.StringBuffer.<init(java.lang.String))| |INVOKESPECIAL java.lang.StringBuffer.<init (Ljava/lang/String;)V| constructorcall(void java.lang.StringBuffer.<init(java.lang.String))|ALOAD 6// Ljava/lang/String; completeURL| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))| |INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))| methodcall(java.lang.String java.lang.StringBuffer.toString())| |INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;| methodcall(java.lang.String java.lang.StringBuffer.toString())| methodcall(void org.apache.commons.logging.Log.debug(java.lang.Object))| |INVOKEINTERFACE org.apache.commons.logging.Log.debug (Ljava/lang/Object;)V| methodcall(void org.apache.commons.logging.Log.debug(java.lang.Object))|L4: ALOAD3// Ljavax/servlet/FilterChain; chain(line 124)|ALOAD1// Ljavax/servlet/ServletRequest; req|ALOAD2// Ljavax/servlet/ServletResponse; res| methodcall(void javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse))| |INVOKEINTERFACE javax.servlet.FilterChain.doFilter (Ljavax/servlet/ServletRequest;Ljavax/servlet/ServletResponse;)V| methodcall(void javax.servlet.FilterChain.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse))|L5: RETURN(line 126)methodexecution(void com.liferay.filters.compression.CompressionFilter.doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain))end public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletExceptionpublic void destroy():methodexecution(void com.liferay.filters.compression.CompressionFilter.destroy())|RETURN(line 129)methodexecution(void com.liferay.filters.compression.CompressionFilter.destroy())end public void destroy()protected boolean isAlreadyFiltered(javax.servlet.http.HttpServletRequest):methodexecution(boolean com.liferay.filters.compression.CompressionFilter.isAlreadyFiltered(javax.servlet.http.HttpServletRequest))|ALOAD1// Ljavax/servlet/http/HttpServletRequest; req(line 132)|GETSTATIC com.liferay.filters.compression.CompressionFilter.ALREADYFILTERED Ljava/lang/String;| methodcall(java.lang.Object javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String))| |INVOKEINTERFACE javax.servlet.http.HttpServletRequest.getAttribute (Ljava/lang/String;)Ljava/lang/Object;| methodcall(java.lang.Object javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String))|IFNULL L0|ICONST1(line 133)|IRETURN|L0: ICONST0(line 136)|IRETURNmethodexecution(boolean com.liferay.filters.compression.CompressionFilter.isAlreadyFiltered(javax.servlet.http.HttpServletRequest))end protected boolean isAlreadyFiltered(javax.servlet.http.HttpServletRequest)protected boolean isCompress(javax.servlet.http.HttpServletRequest):methodexecution(boolean com.liferay.filters.compression.CompressionFilter.isCompress(javax.servlet.http.HttpServletRequest))|ALOAD1// Ljavax/servlet/http/HttpServletRequest; req(line 141)|LDC \"compress\"|ICONST1| methodcall(boolean com.liferay.util.ParamUtil.get(javax.servlet.ServletRequest, java.lang.String, boolean))| |INVOKESTATIC com.liferay.util.ParamUtil.get (Ljavax/servlet/ServletRequest;Ljava/lang/String;Z)Z| methodcall(boolean com.liferay.util.ParamUtil.get(javax.servlet.ServletRequest, java.lang.String, boolean))|IFNE L0|ICONST0(line 142)|IRETURN|L0: ALOAD1// Ljavax/servlet/http/HttpServletRequest; req(line 151)|LDC \"ppstate\"| methodcall(java.lang.String com.liferay.util.ParamUtil.getString(javax.servlet.ServletRequest, java.lang.String))| |INVOKESTATIC com.liferay.util.ParamUtil.getString (Ljavax/servlet/ServletRequest;Ljava/lang/String;)Ljava/lang/String;| methodcall(java.lang.String com.liferay.util.ParamUtil.getString(javax.servlet.ServletRequest, java.lang.String))|ASTORE2// Ljava/lang/String; windowState|ALOAD2// Ljava/lang/String; windowState(line 153)|LDC \"exclusive\"| methodcall(boolean java.lang.String.equals(java.lang.Object))| |INVOKEVIRTUAL java.lang.String.equals (Ljava/lang/Object;)Z| methodcall(boolean java.lang.String.equals(java.lang.Object))|IFEQ L1|ICONST0(line 154)|IRETURN|L1: ICONST1(line 157)|IRETURNmethodexecution(boolean com.liferay.filters.compression.CompressionFilter.isCompress(javax.servlet.http.HttpServletRequest))end protected boolean isCompress(javax.servlet.http.HttpServletRequest)protected boolean isInclude(javax.servlet.http.HttpServletRequest):methodexecution(boolean com.liferay.filters.compression.CompressionFilter.isInclude(javax.servlet.http.HttpServletRequest))|ALOAD1// Ljavax/servlet/http/HttpServletRequest; req(line 163)|LDC \"javax.servlet.include.requesturi\"| methodcall(java.lang.Object javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String))| |INVOKEINTERFACE javax.servlet.http.HttpServletRequest.getAttribute (Ljava/lang/String;)Ljava/lang/Object;| methodcall(java.lang.Object javax.servlet.http.HttpServletRequest.getAttribute(java.lang.String))|CHECKCAST java.lang.String|ASTORE2// Ljava/lang/String; uri|ALOAD2// Ljava/lang/String; uri(line 165)|IFNONNULL L0|ICONST0(line 166)|IRETURN|L0: ICONST1(line 169)|IRETURNmethodexecution(boolean com.liferay.filters.compression.CompressionFilter.isInclude(javax.servlet.http.HttpServletRequest))end protected boolean isInclude(javax.servlet.http.HttpServletRequest)static Class class(String, boolean):methodexecution(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))| catch java.lang.ClassNotFoundExceptionE0| |ALOAD0(line 0)| | methodcall(java.lang.Class java.lang.Class.forName(java.lang.String))| | |INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;)Ljava/lang/Class;| | methodcall(java.lang.Class java.lang.Class.forName(java.lang.String))| |ILOAD1| |IFNE L0| | methodcall(java.lang.Class java.lang.Class.getComponentType())| | |INVOKEVIRTUAL java.lang.Class.getComponentType ()Ljava/lang/Class;| | methodcall(java.lang.Class java.lang.Class.getComponentType())| |L0: ARETURN| catch java.lang.ClassNotFoundExceptionE0|E0: NEW java.lang.NoClassDefFoundError|DUPX1| constructorcall(void java.lang.NoClassDefFoundError.<init())| |INVOKESPECIAL java.lang.NoClassDefFoundError.<init ()V| constructorcall(void java.lang.NoClassDefFoundError.<init())| methodcall(java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable))| |INVOKEVIRTUAL java.lang.Throwable.initCause (Ljava/lang/Throwable;)Ljava/lang/Throwable;| methodcall(java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable))|ATHROWmethodexecution(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))end static Class class(String, boolean)public void <init():ALOAD0// Lcom/liferay/filters/compression/CompressionFilter; this(line 52)INVOKESPECIAL java.lang.Object.<init ()Vconstructorexecution(void com.liferay.filters.compression.CompressionFilter.<init())|RETURNconstructorexecution(void com.liferay.filters.compression.CompressionFilter.<init())end public void <init()private static final void <clinit():staticinitialization(void com.liferay.filters.compression.CompressionFilter.<clinit())|GETSTATIC com.liferay.filters.compression.CompressionFilter.class$com$liferay$filters$compression$CompressionFilter Ljava/lang/Class;(line 54)|DUP|IFNONNULL L0|POP|LDC \"[Lcom.liferay.filters.compression.CompressionFilter;\"|ICONST0| methodcall(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))| |INVOKESTATIC com.liferay.filters.compression.CompressionFilter.class (Ljava/lang/String;Z)Ljava/lang/Class;| methodcall(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))|DUP|PUTSTATIC com.liferay.filters.compression.CompressionFilter.class$com$liferay$filters$compression$CompressionFilter Ljava/lang/Class;| methodcall(java.lang.String java.lang.Class.getName())| |L0: INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;| methodcall(java.lang.String java.lang.Class.getName())| methodcall(java.lang.String com.liferay.util.SystemProperties.get(java.lang.String))| |INVOKESTATIC com.liferay.util.SystemProperties.get (Ljava/lang/String;)Ljava/lang/String;| methodcall(java.lang.String com.liferay.util.SystemProperties.get(java.lang.String))|ICONST1| methodcall(boolean com.liferay.util.GetterUtil.getBoolean(java.lang.String, boolean))| |INVOKESTATIC com.liferay.util.GetterUtil.getBoolean (Ljava/lang/String;Z)Z| methodcall(boolean com.liferay.util.GetterUtil.getBoolean(java.lang.String, boolean))|PUTSTATIC com.liferay.filters.compression.CompressionFilter.useCompressionFilter Z|GETSTATIC com.liferay.filters.compression.CompressionFilter.useCompressionFilter Z(line 62)|IFEQ L3| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isJBoss())| |INVOKESTATIC com.liferay.portal.kernel.util.ServerDetector.isJBoss ()Z(line 63)| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isJBoss())|IFNE L1| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isJetty())| |INVOKESTATIC com.liferay.portal.kernel.util.ServerDetector.isJetty ()Z| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isJetty())|IFNE L1| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isJOnAS())| |INVOKESTATIC com.liferay.portal.kernel.util.ServerDetector.isJOnAS ()Z| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isJOnAS())|IFNE L1| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isOC4J())| |INVOKESTATIC com.liferay.portal.kernel.util.ServerDetector.isOC4J ()Z| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isOC4J())|IFNE L1| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isOrion())| |INVOKESTATIC com.liferay.portal.kernel.util.ServerDetector.isOrion ()Z| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isOrion())|IFNE L1| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isTomcat())| |INVOKESTATIC com.liferay.portal.kernel.util.ServerDetector.isTomcat ()Z| methodcall(boolean com.liferay.portal.kernel.util.ServerDetector.isTomcat())|IFEQ L2|L1: ICONST1(line 67)|PUTSTATIC com.liferay.filters.compression.CompressionFilter.useCompressionFilter Z|GOTO L3|L2: ICONST0(line 70)|PUTSTATIC com.liferay.filters.compression.CompressionFilter.useCompressionFilter Z|L3: NEW java.lang.StringBuffer(line 75)|DUP| constructorcall(void java.lang.StringBuffer.<init())| |INVOKESPECIAL java.lang.StringBuffer.<init ()V| constructorcall(void java.lang.StringBuffer.<init())|GETSTATIC com.liferay.filters.compression.CompressionFilter.class$com$liferay$filters$compression$CompressionFilter Ljava/lang/Class;|DUP|IFNONNULL L4|POP|LDC \"[Lcom.liferay.filters.compression.CompressionFilter;\"|ICONST0| methodcall(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))| |INVOKESTATIC com.liferay.filters.compression.CompressionFilter.class (Ljava/lang/String;Z)Ljava/lang/Class;| methodcall(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))|DUP|PUTSTATIC com.liferay.filters.compression.CompressionFilter.class$com$liferay$filters$compression$CompressionFilter Ljava/lang/Class;| methodcall(java.lang.String java.lang.Class.getName())| |L4: INVOKEVIRTUAL java.lang.Class.getName ()Ljava/lang/String;| methodcall(java.lang.String java.lang.Class.getName())| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))| |INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))|LDC \".encoding\"| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))| |INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))| methodcall(java.lang.String java.lang.StringBuffer.toString())| |INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;| methodcall(java.lang.String java.lang.StringBuffer.toString())| methodcall(java.lang.String com.liferay.util.SystemProperties.get(java.lang.String))| |INVOKESTATIC com.liferay.util.SystemProperties.get (Ljava/lang/String;)Ljava/lang/String;| methodcall(java.lang.String com.liferay.util.SystemProperties.get(java.lang.String))|LDC \"UTF8\"| methodcall(java.lang.String com.liferay.util.GetterUtil.getString(java.lang.String, java.lang.String))| |INVOKESTATIC com.liferay.util.GetterUtil.getString (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;| methodcall(java.lang.String com.liferay.util.GetterUtil.getString(java.lang.String, java.lang.String))|PUTSTATIC com.liferay.filters.compression.CompressionFilter.ENCODING Ljava/lang/String;|NEW java.lang.StringBuffer(line 173)|DUP| constructorcall(void java.lang.StringBuffer.<init())| |INVOKESPECIAL java.lang.StringBuffer.<init ()V| constructorcall(void java.lang.StringBuffer.<init())|GETSTATIC com.liferay.filters.compression.CompressionFilter.class$com$liferay$filters$compression$CompressionFilter Ljava/lang/Class;|DUP|IFNONNULL L5|POP|LDC \"[Lcom.liferay.filters.compression.CompressionFilter;\"|ICONST0| methodcall(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))| |INVOKESTATIC com.liferay.filters.compression.CompressionFilter.class (Ljava/lang/String;Z)Ljava/lang/Class;| methodcall(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))|DUP|PUTSTATIC com.liferay.filters.compression.CompressionFilter.class$com$liferay$filters$compression$CompressionFilter Ljava/lang/Class;| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.Object))| |L5: INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/Object;)Ljava/lang/StringBuffer;| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.Object))|LDC \"ALREADYFILTERED\"| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))| |INVOKEVIRTUAL java.lang.StringBuffer.append (Ljava/lang/String;)Ljava/lang/StringBuffer;| methodcall(java.lang.StringBuffer java.lang.StringBuffer.append(java.lang.String))| methodcall(java.lang.String java.lang.StringBuffer.toString())| |INVOKEVIRTUAL java.lang.StringBuffer.toString ()Ljava/lang/String;| methodcall(java.lang.String java.lang.StringBuffer.toString())|PUTSTATIC com.liferay.filters.compression.CompressionFilter.ALREADYFILTERED Ljava/lang/String;|GETSTATIC com.liferay.filters.compression.CompressionFilter.class$com$liferay$filters$compression$CompressionFilter Ljava/lang/Class;(line 180)|DUP|IFNONNULL L6|POP|LDC \"[Lcom.liferay.filters.compression.CompressionFilter;\"|ICONST0| methodcall(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))| |INVOKESTATIC com.liferay.filters.compression.CompressionFilter.class (Ljava/lang/String;Z)Ljava/lang/Class;| methodcall(java.lang.Class com.liferay.filters.compression.CompressionFilter.class(java.lang.String, boolean))|DUP|PUTSTATIC com.liferay.filters.compression.CompressionFilter.class$com$liferay$filters$compression$CompressionFilter Ljava/lang/Class;| methodcall(org.apache.commons.logging.Log org.apache.commons.logging.LogFactory.getLog(java.lang.Class))| |L6: INVOKESTATIC org.apache.commons.logging.LogFactory.getLog (Ljava/lang/Class;)Lorg/apache/commons/logging/Log;| methodcall(org.apache.commons.logging.Log org.apache.commons.logging.LogFactory.getLog(java.lang.Class))|PUTSTATIC com.liferay.filters.compression.CompressionFilter.log Lorg/apache/commons/logging/Log;|RETURNstaticinitialization(void com.liferay.filters.compression.CompressionFilter.<clinit())end private static final void <clinit()end public class com.liferay.filters.compression.CompressionFilterException thrown from AspectJ 1.5.2This might be logged as a bug alreadyfind current bugs athttp://bugs.eclipse.org/bugs/buglist.cgi?product=AspectJ&component=CompilerBugs for exceptions thrown have titles File:line from the top stack,e.g., \"SomeFile.java:243\"If you don't find the exception below in a bug, please add a new bugat http://bugs.eclipse.org/bugs/enterbug.cgi?product=AspectJTo make the bug a priority, please include a test programthat can reproduce this exception.Unhandled kind of new1: impdep1[254](1)when implementing on shadow constructorcall(void java.lang.NoClassDefFoundError.<init())when weaving classeswhen weavingwhen batch building BuildConfig[null] Files=1Unhandled kind of new1: impdep1[254](1)java.lang.RuntimeException: Unhandled kind of new1: impdep1[254](1)at org.aspectj.weaver.bcel.BcelShadow.deleteNewAndDup(BcelShadow.java:226)at org.aspectj.weaver.bcel.BcelShadow.prepareForMungers(BcelShadow.java:284)at org.aspectj.weaver.Shadow.implement(Shadow.java:470)at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2825)at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:502)at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:115)at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1574)at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1525)at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1305)at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1127)at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:321)at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:192)at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$orgaspectjajdtinternalcompilerCompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:887)at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:244)at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:163)at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112)at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60)at org.aspectj.tools.ajc.Main.run(Main.java:367)at org.aspectj.tools.ajc.Main.runMain(Main.java:246)at org.aspectj.tools.ajc.Main.main(Main.java:86)trouble in:public class com.liferay.filters.compression.CompressionStream extends javax.servlet.ServletOutputStream:private static final String CONTENTENCODING = \"ContentEncoding\"private static final String GZIP = \"gzip\"private static org.apache.commons.logging.Log logprivate javax.servlet.http.HttpServletResponse resprivate javax.servlet.ServletOutputStream outputprivate java.io.OutputStream bufferedOutputprivate boolean closedstatic Class class$com$liferay$filters$compression$CompressionStream [Synthetic]public void close() throws java.io.IOException:methodexecution(void com.liferay.filters.compression.CompressionStream.close())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 56)|GETFIELD com.liferay.filters.compression.CompressionStream.closed Z|IFEQ L0| constructorcall(void java.io.IOException.<init())| |INVOKESTATIC com.myco.error.ThrowablesAspect.aspectOf ()Lcom/myco/error/ThrowablesAspect;| |INVOKEVIRTUAL com.myco.error.ThrowablesAspect.ajc$before$commycoerrorThrowablesAspect$1$45ca0c36 ()V| |NEW java.io.IOException| |DUP| |INVOKESPECIAL java.io.IOException.<init ()V(line 57)| constructorcall(void java.io.IOException.<init())|ATHROW|L0: ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 60)|GETFIELD com.liferay.filters.compression.CompressionStream.bufferedOutput Ljava/io/OutputStream;|INSTANCEOF java.io.ByteArrayOutputStream|IFEQ L1|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 61)|GETFIELD com.liferay.filters.compression.CompressionStream.bufferedOutput Ljava/io/OutputStream;|CHECKCAST java.io.ByteArrayOutputStream|ASTORE1// Ljava/io/ByteArrayOutputStream; baos|NEW java.io.ByteArrayOutputStream(line 63)|DUP| constructorcall(void java.io.ByteArrayOutputStream.<init())| |INVOKESPECIAL java.io.ByteArrayOutputStream.<init ()V| constructorcall(void java.io.ByteArrayOutputStream.<init())|ASTORE2// Ljava/io/ByteArrayOutputStream; compressedContent|NEW java.util.zip.GZIPOutputStream(line 66)|DUP|ALOAD2// Ljava/io/ByteArrayOutputStream; compressedContent| constructorcall(void java.util.zip.GZIPOutputStream.<init(java.io.OutputStream))| |INVOKESPECIAL java.util.zip.GZIPOutputStream.<init (Ljava/io/OutputStream;)V| constructorcall(void java.util.zip.GZIPOutputStream.<init(java.io.OutputStream))|ASTORE3// Ljava/util/zip/GZIPOutputStream; gzipOutput|ALOAD3// Ljava/util/zip/GZIPOutputStream; gzipOutput(line 69)|ALOAD1// Ljava/io/ByteArrayOutputStream; baos| methodcall(byte[] java.io.ByteArrayOutputStream.toByteArray())| |INVOKEVIRTUAL java.io.ByteArrayOutputStream.toByteArray ()[B| methodcall(byte[] java.io.ByteArrayOutputStream.toByteArray())| methodcall(void java.util.zip.GZIPOutputStream.write(byte[]))| |INVOKEVIRTUAL java.util.zip.GZIPOutputStream.write ([B)V| methodcall(void java.util.zip.GZIPOutputStream.write(byte[]))|ALOAD3// Ljava/util/zip/GZIPOutputStream; gzipOutput(line 70)| methodcall(void java.util.zip.GZIPOutputStream.finish())| |INVOKEVIRTUAL java.util.zip.GZIPOutputStream.finish ()V| methodcall(void java.util.zip.GZIPOutputStream.finish())|ALOAD2// Ljava/io/ByteArrayOutputStream; compressedContent(line 72)| methodcall(byte[] java.io.ByteArrayOutputStream.toByteArray())| |INVOKEVIRTUAL java.io.ByteArrayOutputStream.toByteArray ()[B| methodcall(byte[] java.io.ByteArrayOutputStream.toByteArray())|ASTORE 4// [B compressedBytes|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 74)|GETFIELD com.liferay.filters.compression.CompressionStream.res Ljavax/servlet/http/HttpServletResponse;|ALOAD 4// [B compressedBytes|ARRAYLENGTH| methodcall(void javax.servlet.http.HttpServletResponse.setContentLength(int))| |INVOKEINTERFACE javax.servlet.http.HttpServletResponse.setContentLength (I)V| methodcall(void javax.servlet.http.HttpServletResponse.setContentLength(int))|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 75)|GETFIELD com.liferay.filters.compression.CompressionStream.res Ljavax/servlet/http/HttpServletResponse;|LDC \"ContentEncoding\"|LDC \"gzip\"| methodcall(void javax.servlet.http.HttpServletResponse.addHeader(java.lang.String, java.lang.String))| |INVOKEINTERFACE javax.servlet.http.HttpServletResponse.addHeader (Ljava/lang/String;Ljava/lang/String;)V| methodcall(void javax.servlet.http.HttpServletResponse.addHeader(java.lang.String, java.lang.String))|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 77)|GETFIELD com.liferay.filters.compression.CompressionStream.output Ljavax/servlet/ServletOutputStream;|ALOAD 4// [B compressedBytes| methodcall(void javax.servlet.ServletOutputStream.write(byte[]))| |INVOKEVIRTUAL javax.servlet.ServletOutputStream.write ([B)V| methodcall(void javax.servlet.ServletOutputStream.write(byte[]))|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 78)|GETFIELD com.liferay.filters.compression.CompressionStream.output Ljavax/servlet/ServletOutputStream;| methodcall(void javax.servlet.ServletOutputStream.flush())| |INVOKEVIRTUAL javax.servlet.ServletOutputStream.flush ()V| methodcall(void javax.servlet.ServletOutputStream.flush())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 79)|GETFIELD com.liferay.filters.compression.CompressionStream.output Ljavax/servlet/ServletOutputStream;| methodcall(void javax.servlet.ServletOutputStream.close())| |INVOKEVIRTUAL javax.servlet.ServletOutputStream.close ()V| methodcall(void javax.servlet.ServletOutputStream.close())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 81)|ICONST1|PUTFIELD com.liferay.filters.compression.CompressionStream.closed Z|GOTO L2|L1: ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 83)|GETFIELD com.liferay.filters.compression.CompressionStream.bufferedOutput Ljava/io/OutputStream;|INSTANCEOF java.util.zip.GZIPOutputStream|IFEQ L2|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 84)|GETFIELD com.liferay.filters.compression.CompressionStream.bufferedOutput Ljava/io/OutputStream;|CHECKCAST java.util.zip.GZIPOutputStream|ASTORE1// Ljava/util/zip/GZIPOutputStream; gzipOutput|ALOAD1// Ljava/util/zip/GZIPOutputStream; gzipOutput(line 86)| methodcall(void java.util.zip.GZIPOutputStream.finish())| |INVOKEVIRTUAL java.util.zip.GZIPOutputStream.finish ()V| methodcall(void java.util.zip.GZIPOutputStream.finish())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 88)|GETFIELD com.liferay.filters.compression.CompressionStream.output Ljavax/servlet/ServletOutputStream;| methodcall(void javax.servlet.ServletOutputStream.flush())| |INVOKEVIRTUAL javax.servlet.ServletOutputStream.flush ()V| methodcall(void javax.servlet.ServletOutputStream.flush())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 89)|GETFIELD com.liferay.filters.compression.CompressionStream.output Ljavax/servlet/ServletOutputStream;| methodcall(void javax.servlet.ServletOutputStream.close())| |INVOKEVIRTUAL javax.servlet.ServletOutputStream.close ()V| methodcall(void javax.servlet.ServletOutputStream.close())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 91)|ICONST1|PUTFIELD com.liferay.filters.compression.CompressionStream.closed Z|L2: RETURN(line 93)methodexecution(void com.liferay.filters.compression.CompressionStream.close())end public void close() throws java.io.IOExceptionpublic void flush() throws java.io.IOException:methodexecution(void com.liferay.filters.compression.CompressionStream.flush())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 96)|GETFIELD com.liferay.filters.compression.CompressionStream.closed Z|IFEQ L0| constructorcall(void java.io.IOException.<init())| |INVOKESTATIC com.myco.error.ThrowablesAspect.aspectOf ()Lcom/myco/error/ThrowablesAspect;| |INVOKEVIRTUAL com.myco.error.ThrowablesAspect.ajc$before$commycoerrorThrowablesAspect$1$45ca0c36 ()V| |NEW java.io.IOException| |DUP| |INVOKESPECIAL java.io.IOException.<init ()V(line 97)| constructorcall(void java.io.IOException.<init())|ATHROW|L0: ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 100)|GETFIELD com.liferay.filters.compression.CompressionStream.bufferedOutput Ljava/io/OutputStream;| methodcall(void java.io.OutputStream.flush())| |INVOKEVIRTUAL java.io.OutputStream.flush ()V| methodcall(void java.io.OutputStream.flush())|RETURN(line 101)methodexecution(void com.liferay.filters.compression.CompressionStream.flush())end public void flush() throws java.io.IOExceptionpublic void write(int) throws java.io.IOException:methodexecution(void com.liferay.filters.compression.CompressionStream.write(int))|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 104)|GETFIELD com.liferay.filters.compression.CompressionStream.closed Z|IFEQ L0| constructorcall(void java.io.IOException.<init())| |INVOKESTATIC com.myco.error.ThrowablesAspect.aspectOf ()Lcom/myco/error/ThrowablesAspect;| |INVOKEVIRTUAL com.myco.error.ThrowablesAspect.ajc$before$commycoerrorThrowablesAspect$1$45ca0c36 ()V| |NEW java.io.IOException| |DUP| |INVOKESPECIAL java.io.IOException.<init ()V(line 105)| constructorcall(void java.io.IOException.<init())|ATHROW|L0: ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 112)|GETFIELD com.liferay.filters.compression.CompressionStream.bufferedOutput Ljava/io/OutputStream;|ILOAD1// I b|I2B| methodcall(void java.io.OutputStream.write(int))| |INVOKEVIRTUAL java.io.OutputStream.write (I)V| methodcall(void java.io.OutputStream.write(int))|RETURN(line 113)methodexecution(void com.liferay.filters.compression.CompressionStream.write(int))end public void write(int) throws java.io.IOExceptionpublic void write(byte[]) throws java.io.IOException:methodexecution(void com.liferay.filters.compression.CompressionStream.write(byte[]))|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 116)|ALOAD1// [B b|ICONST0|ALOAD1// [B b|ARRAYLENGTH| methodcall(void com.liferay.filters.compression.CompressionStream.write(byte[], int, int))| |INVOKEVIRTUAL com.liferay.filters.compression.CompressionStream.write ([BII)V| methodcall(void com.liferay.filters.compression.CompressionStream.write(byte[], int, int))|RETURN(line 117)methodexecution(void com.liferay.filters.compression.CompressionStream.write(byte[]))end public void write(byte[]) throws java.io.IOExceptionpublic void write(byte[], int, int) throws java.io.IOException:methodexecution(void com.liferay.filters.compression.CompressionStream.write(byte[], int, int))|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 120)|GETFIELD com.liferay.filters.compression.CompressionStream.closed Z|IFEQ L0| constructorcall(void java.io.IOException.<init())| |INVOKESTATIC com.myco.error.ThrowablesAspect.aspectOf ()Lcom/myco/error/ThrowablesAspect;| |INVOKEVIRTUAL com.myco.error.ThrowablesAspect.ajc$before$commycoerrorThrowablesAspect$1$45ca0c36 ()V| |NEW java.io.IOException| |DUP| |INVOKESPECIAL java.io.IOException.<init ()V(line 121)| constructorcall(void java.io.IOException.<init())|ATHROW| catch java.io.IOExceptionE0| |L0: ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 129)| |GETFIELD com.liferay.filters.compression.CompressionStream.bufferedOutput Ljava/io/OutputStream;| |ALOAD1// [B b| |ILOAD2// I off| |ILOAD3// I len| | methodcall(void java.io.OutputStream.write(byte[], int, int))| | |INVOKEVIRTUAL java.io.OutputStream.write ([BII)V| | methodcall(void java.io.OutputStream.write(byte[], int, int))| catch java.io.IOExceptionE0|GOTO L1|E0: ASTORE 4// Ljava/io/IOException; ioe(line 131)|GETSTATIC com.liferay.filters.compression.CompressionStream.log Lorg/apache/commons/logging/Log;(line 132)|ALOAD 4// Ljava/io/IOException; ioe| methodcall(java.lang.String java.io.IOException.getMessage())| |INVOKEVIRTUAL java.io.IOException.getMessage ()Ljava/lang/String;| methodcall(java.lang.String java.io.IOException.getMessage())| methodcall(void org.apache.commons.logging.Log.warn(java.lang.Object))| |INVOKEINTERFACE org.apache.commons.logging.Log.warn (Ljava/lang/Object;)V| methodcall(void org.apache.commons.logging.Log.warn(java.lang.Object))|L1: RETURN(line 134)methodexecution(void com.liferay.filters.compression.CompressionStream.write(byte[], int, int))end public void write(byte[], int, int) throws java.io.IOExceptionpublic boolean closed():methodexecution(boolean com.liferay.filters.compression.CompressionStream.closed())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 137)|GETFIELD com.liferay.filters.compression.CompressionStream.closed Z|IRETURNmethodexecution(boolean com.liferay.filters.compression.CompressionStream.closed())end public boolean closed()public void reset():methodexecution(void com.liferay.filters.compression.CompressionStream.reset())|RETURN(line 141)methodexecution(void com.liferay.filters.compression.CompressionStream.reset())end public void reset()static Class class(String, boolean):methodexecution(java.lang.Class com.liferay.filters.compression.CompressionStream.class(java.lang.String, boolean))| catch java.lang.ClassNotFoundExceptionE0| |ALOAD0(line 0)| | methodcall(java.lang.Class java.lang.Class.forName(java.lang.String))| | |INVOKESTATIC java.lang.Class.forName (Ljava/lang/String;)Ljava/lang/Class;| | methodcall(java.lang.Class java.lang.Class.forName(java.lang.String))| |ILOAD1| |IFNE L0| | methodcall(java.lang.Class java.lang.Class.getComponentType())| | |INVOKEVIRTUAL java.lang.Class.getComponentType ()Ljava/lang/Class;| | methodcall(java.lang.Class java.lang.Class.getComponentType())| |L0: ARETURN| catch java.lang.ClassNotFoundExceptionE0|E0: NEW java.lang.NoClassDefFoundError|DUPX1| constructorcall(void java.lang.NoClassDefFoundError.<init())| |INVOKESPECIAL java.lang.NoClassDefFoundError.<init ()V| constructorcall(void java.lang.NoClassDefFoundError.<init())| methodcall(java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable))| |INVOKEVIRTUAL java.lang.Throwable.initCause (Ljava/lang/Throwable;)Ljava/lang/Throwable;| methodcall(java.lang.Throwable java.lang.Throwable.initCause(java.lang.Throwable))|ATHROWmethodexecution(java.lang.Class com.liferay.filters.compression.CompressionStream.class(java.lang.String, boolean))end static Class class(String, boolean)private final void this():methodexecution(void com.liferay.filters.compression.CompressionStream.this())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 149)|ACONSTNULL|PUTFIELD com.liferay.filters.compression.CompressionStream.res Ljavax/servlet/http/HttpServletResponse;|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 150)|ACONSTNULL|PUTFIELD com.liferay.filters.compression.CompressionStream.output Ljavax/servlet/ServletOutputStream;|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 151)|ACONSTNULL|PUTFIELD com.liferay.filters.compression.CompressionStream.bufferedOutput Ljava/io/OutputStream;|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 152)|ICONST0|PUTFIELD com.liferay.filters.compression.CompressionStream.closed Z|RETURNmethodexecution(void com.liferay.filters.compression.CompressionStream.this())end private final void this()public void <init(javax.servlet.http.HttpServletResponse) throws java.io.IOException:ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 47)INVOKESPECIAL javax.servlet.ServletOutputStream.<init ()Vconstructorexecution(void com.liferay.filters.compression.CompressionStream.<init(javax.servlet.http.HttpServletResponse))|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this| methodcall(void com.liferay.filters.compression.CompressionStream.this())| |INVOKESPECIAL com.liferay.filters.compression.CompressionStream.this ()V| methodcall(void com.liferay.filters.compression.CompressionStream.this())|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 49)|ALOAD1// Ljavax/servlet/http/HttpServletResponse; res|PUTFIELD com.liferay.filters.compression.CompressionStream.res Ljavax/servlet/http/HttpServletResponse;|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 50)|ALOAD1// Ljavax/servlet/http/HttpServletResponse; res| methodcall(javax.servlet.ServletOutputStream javax.servlet.http.HttpServletResponse.getOutputStream())| |INVOKEINTERFACE javax.servlet.http.HttpServletResponse.getOutputStream ()Ljavax/servlet/ServletOutputStream;| methodcall(javax.servlet.ServletOutputStream javax.servlet.http.HttpServletResponse.getOutputStream())|PUTFIELD com.liferay.filters.compression.CompressionStream.output Ljavax/servlet/ServletOutputStream;|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 51)|NEW java.io.ByteArrayOutputStream|DUP| constructorcall(void java.io.ByteArrayOutputStream.<init())| |INVOKESPECIAL java.io.ByteArrayOutputStream.<init ()V| constructorcall(void java.io.ByteArrayOutputStream.<init())|PUTFIELD com.liferay.filters.compression.CompressionStream.bufferedOutput Ljava/io/OutputStream;|ALOAD0// Lcom/liferay/filters/compression/CompressionStream; this(line 52)|ICONST0|PUTFIELD com.liferay.filters.compression.CompressionStream.closed Z|RETURN(line 53)constructorexecution(void com.liferay.filters.compression.CompressionStream.<init(javax.servlet.http.HttpServletResponse))end public void <init(javax.servlet.http.HttpServletResponse) throws java.io.IOExceptionprivate static final void <clinit():staticinitialization(void com.liferay.filters.compression.CompressionStream.<clinit())|GETSTATIC com.liferay.filters.compression.CompressionStream.class$com$liferay$filters$compression$CompressionStream Ljava/lang/Class;(line 147)|DUP|IFNONNULL L0|POP|LDC \"[Lcom.liferay.filters.compression.CompressionStream;\"|ICONST0| methodcall(java.lang.Class com.liferay.filters.compression.CompressionStream.class(java.lang.String, boolean))| |INVOKESTATIC com.liferay.filters.compression.CompressionStream.class (Ljava/lang/String;Z)Ljava/lang/Class;| methodcall(java.lang.Class com.liferay.filters.compression.CompressionStream.class(java.lang.String, boolean))|DUP|PUTSTATIC com.liferay.filters.compression.CompressionStream.class$com$liferay$filters$compression$CompressionStream Ljava/lang/Class;| methodcall(org.apache.commons.logging.Log org.apache.commons.logging.LogFactory.getLog(java.lang.Class))| |L0: INVOKESTATIC org.apache.commons.logging.LogFactory.getLog (Ljava/lang/Class;)Lorg/apache/commons/logging/Log;| methodcall(org.apache.commons.logging.Log org.apache.commons.logging.LogFactory.getLog(java.lang.Class))|PUTSTATIC com.liferay.filters.compression.CompressionStream.log Lorg/apache/commons/logging/Log;|RETURNstaticinitialization(void com.liferay.filters.compression.CompressionStream.<clinit())end private static final void <clinit()end public class com.liferay.filters.compression.CompressionStreamException thrown from AspectJ 1.5.2This might be logged as a bug alreadyfind current bugs athttp://bugs.eclipse.org/bugs/buglist.cgi?product=AspectJ&component=CompilerBugs for exceptions thrown have titles File:line from the top stack,e.g., \"SomeFile.java:243\"If you don't find the exception below in a bug, please add a new bugat http://bugs.eclipse.org/bugs/enterbug.cgi?product=AspectJTo make the bug a priority, please include a test programthat can reproduce this exception.Unhandled kind of new1: impdep1[254](1)when implementing on shadow constructorcall(void java.lang.NoClassDefFoundError.<init())when weaving classeswhen weavingwhen batch building BuildConfig[null] Files=1Unhandled kind of new1: impdep1[254](1)java.lang.RuntimeException: Unhandled kind of new1: impdep1[254](1)at org.aspectj.weaver.bcel.BcelShadow.deleteNewAndDup(BcelShadow.java:226)at org.aspectj.weaver.bcel.BcelShadow.prepareForMungers(BcelShadow.java:284)at org.aspectj.weaver.Shadow.implement(Shadow.java:470)at org.aspectj.weaver.bcel.BcelClassWeaver.implement(BcelClassWeaver.java:2825)at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:502)at org.aspectj.weaver.bcel.BcelClassWeaver.weave(BcelClassWeaver.java:115)at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1574)at org.aspectj.weaver.bcel.BcelWeaver.weaveWithoutDump(BcelWeaver.java:1525)at org.aspectj.weaver.bcel.BcelWeaver.weaveAndNotify(BcelWeaver.java:1305)at org.aspectj.weaver.bcel.BcelWeaver.weave(BcelWeaver.java:1127)at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.weave(AjCompilerAdapter.java:321)at org.aspectj.ajdt.internal.compiler.AjCompilerAdapter.afterCompiling(AjCompilerAdapter.java:192)at org.aspectj.ajdt.internal.compiler.CompilerAdapter.ajc$afterReturning$orgaspectjajdtinternalcompilerCompilerAdapter$2$f9cc9ca0(CompilerAdapter.aj:70)at org.aspectj.org.eclipse.jdt.internal.compiler.Compiler.compile(Compiler.java:367)at org.aspectj.ajdt.internal.core.builder.AjBuildManager.performCompilation(AjBuildManager.java:887)at org.aspectj.ajdt.internal.core.builder.AjBuildManager.doBuild(AjBuildManager.java:244)at org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild(AjBuildManager.java:163)at org.aspectj.ajdt.ajc.AjdtCommand.doCommand(AjdtCommand.java:112)at org.aspectj.ajdt.ajc.AjdtCommand.runCommand(AjdtCommand.java:60)at org.aspectj.tools.ajc.Main.run(Main.java:367)at org.aspectj.tools.ajc.Main.runMain(Main.java:246)at org.aspectj.tools.ajc.Main.main(Main.java:86)", "OB": " I get this error when weaving a LifeRay jar (compressionfilter.jar).Unhandled kind of new1: impdep1[254](1)when implementing on shadow constructorcall(void java.lang.NoClassDefFoundError.<init()) when weaving classes ..To reproduce:1)extract TestCase.zip.2) Go to the expanded TestCase/ directory.3)do: ajc ThrowablesAspect.aj log \"test.log\" cp \"<path to aspectjrt.jar;lib\\commonslogging1.0.4.jar;lib\\servletapi.jar;lib\\utiljava.jar;lib\\portalkernel.jar\" injars compressionfilter.jar outjar compressionfilter.jar.new4) ajc will say there are 2 fail|abortsNOTE: No advice or doing \"around()\" doesn't produce the error.", "EB": "", "SR": ""}