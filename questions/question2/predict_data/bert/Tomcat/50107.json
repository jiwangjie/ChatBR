{"id": "50107", "title": "Bug 50107StandardPipeline is destroyed two times.", "description": "", "OB": " Bug 50107StandardPipeline is destroyed two times. The second call will be ignored.StandardPipeline is destroyed two times.At first, pipeline is destroyed at ContainerBase.java L.1096:<<ContainerBase.java destroyInternal() L.109410971094// Stop the Valves in our pipeline (including the basic), if any1095if (pipeline instanceof Lifecycle) {1096((Lifecycle) pipeline).destroy();1097}<<ContainerBase.java destroyInternal() L.110411071104// Required if the child is destroyed directly.1105if (parent != null) {1106parent.removeChild(this);1107}When abovementioned \"parent\" is StandardEngine, the parent.removeChild() calls theLifecycleBasechild.destroy(), and child.destroy() calls ContainerBasedestroyInternal().At this time ContainerBase is StandardHost.<<ContainerBase.java removeChild() L.960964960// Set child's parent to null to prevent a loop961child.setParent(null);962try {963child.destroy();964} catch (LifecycleException e) {As a result, pipeline is destroyed again(, and get the abovementioned info message).In Tomcat 6.0, child.destroy() is not called from ContainerBaseremoveChild().But, as seen above, the removeChild() that is contained in Tomcat7.0 calls the child.destroy().IMHO, it might not be better to call the child.destroy() from removeHost().I made the patch that removed host.destroy() from removeHost().Best regards.", "EB": "", "SR": " Created attachment 26181 [details]patch for MBeanFactory.javaWhen I call MBeanFactoryremoveHost operation via JMX(jconsle), I get the following message.INFO: The destroy() method was called on component [Pipeline[StandardHost[localhost]]] after destroy() had already been called."}