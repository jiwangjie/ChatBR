{"id": "40860", "title": "Bug 40860Tomcat loses request parameters", "description": " Hi,I\u2019m having a problem with parameters loses in tomcat. It\u2019s an intermittentproblem. That occurs when I do some ajax\u2019s request and then I do one or moreform submissions.I put the tomcat in debug mode andI observed the class CoyoteAdapter \u2013 themethod service(). There exists a request variable (CoyoteRequest type) that hasa protected variable requestParametersParsed that is a flag to parse or notparse the parameters of a post or get. In the end of the method exists a\u2018finally\u2019 clause that force the request variable to do a recycle. requestParametersParsed must befalse but in some situations it is true!I cant find the cause of the problem but I found the problem. To resolve myproblem I put a request.recycle(); before the line to force therequestParametersParsedvariable to false.I don\u2019t want to have a tomcat modified by me. Its not good.See the posthttp://mailarchives.apache.org/modmbox/tomcatdev/200601.mbox/%3C43D11EAA.1090905@amazon.com.br%3EHe is having the same problem.ThanksThiago", "OB": " Bug 40860Tomcat loses request parameters The recycleforces the requestParametersParsed variable to change to false. Then in the nextutilization of the class the parameters will be parsed again.The problem that I\u2019ve found is in some situations (as described at the start)the requestParametersParsed variable is true and the parameters are not parsed.The consequence of this is that in my servlet when I ask request.getParameter(\u2026)and it returns null but in my query string or in my post data has the parameter.The prove of that is when I ask request.getQueryString() and it returns a notempty string with my parameter.Ex:request.getQueryString() = servlet?param=xrequest.getParameter(\u2018param\u2019) = nullSee a pierce of the method service of CoyoteAdapter:public void service(Request req, Response res)throws Exception {\u2026try {// Parse and set Catalina and configuration specific// request parametersif ( postParseRequest(req, request, res, response) ) {// Calling the containerconnector.getContainer().invoke(request, response);}\u2026} finally {// Recycle the wrapper request and responserequest.recycle();response.recycle();}}At line \u201cif postParseRequest(\u2026\u201d the request.", "EB": "", "SR": ""}