{"id": "48934", "title": "Bug 48934Cluster's regression. When replication fails once, replication can be never done again.", "description": " Bug 48934Cluster's regression. (Transport className is org.apache.catalina.tribes.transport.nio.PooledParallelSender. Perhaps, I think PooledMultiSender to be the same. ; No faulty members identified.=====The cause ishttp://svn.apache.org/viewvc?view=revision&revision=908741When replication fails, sender is disconnected by this fix.The disconnect method is as follows in PooledParallelSender.===public synchronized void disconnect() {this.connected = false;super.disconnect();}===this.connected is set to false, and super.disconnect() is called.In super.disconnect(), the queue is closed.I think.if connected is set to false once, it never becomes true again.andif queue is closed once, it never opened again.It is only ReplicationTransmitterstart to be able to set connected to true.It is also the same to open the queue.As a result,when replication fails once, replication can be never done again.I do not know the reason why r908741 is applied.However, if ChannelException is thrown once, it becomes impossible to use all Sender.This is not good thing.Can revert r908741 ?If it is not possible, what is the reason for the r908741?Best regards.", "OB": " When replication fails once, replication can be never done again. I found cluster's regression in Tomcat6.0.26.The reproduction is as follows.=====The cluster is composed of tomcat1 and tomcat2. )Tomcat2 is stopped during session replication.As a result, Session replication failed and ChannelException is thrown.Tomcat2 restart.Session replication again.As a result, following exception is thrown.org.apache.catalina.tribes.ChannelException: Sender not connected.", "EB": "", "SR": ""}