{"id": "40306", "title": "Bug 40306modjk, POST request bodies are not restored on successful login when using modjk", "description": " I (think) I've narrowed down the issue inFormAuthenticator.java. (The buffer wasnull) so it looks like the root of the problem is that nothing is read from theinput stream.During testing I reverted to the old way of adding the request parameters(saved.addParameter()) to see if they were indeed there and it worked.I also tried,InputStream is = new BufferedInputStream(request.getInputStream());which didn't work..from FormAuthenticator.java:protected void saveRequest(Request request, Session session)throws IOException {...if (\"POST\".equalsIgnoreCase(request.getMethod())) {ByteChunk body = new ByteChunk();body.setLimit(request.getConnector().getMaxSavePostSize());byte[] buffer = new byte[4096];int bytesRead;InputStream is = request.getInputStream();while ( (bytesRead = is.read(buffer) ) = 0) {body.append(buffer, 0, bytesRead);}saved.setBody(body);}...}", "OB": " Bug 40306modjk, POST request bodies are not restored on successful login when using modjk After the FormAuthenticator intercepts a POST request to a protected resource,the original request is not properly restored upon successful login when usingmodjk. It seems the problem is that theorginal request is not saved properly. body.toString() was returning null.", "EB": " When connectiong to tomcat directly (8080), the POST request is restoredas expected.I've tested this with modjk 1.2.15 and 1.2.18.", "SR": ""}