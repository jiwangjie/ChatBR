{"id": "38131", "title": "Bug 38131ajc needs d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac.I am guessing this may have to do something with change in the underlying Eclipse compiler. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\npublic static void main(String[] args) {\n\nSystem.out.println(\"Hello\");\n\n}\n\n}\n\nThen compile using following command: ajc subpackage\\Test.java\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. subpackage\\Test.java or javac subpackage\\Test.java\n\nNo big deal, really.", "OB": "The test.class is then put in subpackage\\subpackage directory. This means running java command results in Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test. Running either of the following commands fixes the problem: ajc d .", "EB": "But it will be nice to have the same behavior as javac.", "SR": "To reproduce the issue:\n\n1. Create a class in a subpackage, such as:\n\n   package subpackage;\n\n   public class Test {\n\n       public static void main(String[] args) {\n\n           System.out.println(\"Hello\");\n\n       }\n\n   }\n\n2. Compile the class using the command: ajc subpackage\\Test.java\n\n3. Check for the creation of a directory \"subpackage\" within the existing \"subpackage\" directory, with the compiled Test.class file inside.\n\n4. Try running the java command and observe the Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test.\n\n5. Run the command: ajc d . and notice that it resolves the issue."}