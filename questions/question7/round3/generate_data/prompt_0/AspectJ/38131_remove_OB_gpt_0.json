{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with a change in the underlying Eclipse compiler. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n\tpublic static void main(String[] args) {\n\n\t\tSystem.out.println('Hello');\n\n\t}\n\n}\n\nThen compile using the following command: ajc subpackage\\Test.java\n\nYou will see a directory 'subpackage' created under the existing 'subpackage' directory. subpackage\\Test.java or javac subpackage\\Test.java.\n\nNo big deal, really.", "OB": "When compiling a Java file using 'ajc' command with a class in a subpackage, a duplicate 'subpackage' directory is created under the existing 'subpackage' directory.", "EB": "But it will be nice to have the same behavior as 'javac', where the compiled class file is placed directly inside the 'subpackage' directory without creating a duplicate subdirectory.", "SR": "To reproduce the issue, compile a Java class file using 'ajc' command with '-d' option followed by the subpackage path, like 'ajc -d subpackage subpackage\\Test.java'."}