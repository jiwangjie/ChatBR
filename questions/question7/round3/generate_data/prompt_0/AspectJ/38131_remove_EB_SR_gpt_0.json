{"id": "38131", "title": "Bug 38131ajc needs -d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with a change in the underlying Eclipse compiler.\n\nCreate a class in a subpackage:\n\npackage subpackage;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println('Hello');\n    }\n}\n\nThen compile using the following command: ajc subpackage\\Test.java\n\nYou will see a directory 'subpackage' created under the existing 'subpackage' directory. subpackage\\Test.java or javac subpackage\\Test.java.\n\nNo big deal, really.", "OB": "The test.class is then put in the subpackage\\subpackage directory. This means running the java command results in an 'Exception in thread 'main' java.lang.NoClassDefFoundError: subpackage/Test'. Running either of the following commands fixes the problem: ajc -d .", "EB": "The 'ajc' command should correctly compile the classes in the subpackage and place the compiled 'Test.class' file in the 'subpackage' directory. Running the java command should not result in any 'NoClassDefFoundError' and should successfully execute the 'main' method, printing 'Hello' as the output.", "SR": "To reproduce the issue:\n1. Create a class in a subpackage, for example, 'subpackage/Test.java'.\n2. Compile the class using the command 'ajc subpackage\\Test.java'.\n3. Run the java command using the command 'java subpackage/Test'.\n\nExpected behavior:\n- The compiler should correctly compile the class and place the compiled 'Test.class' file in the 'subpackage' directory.\n- Running the java command should execute the 'main' method in the 'Test' class without any errors and print 'Hello' as the output."}