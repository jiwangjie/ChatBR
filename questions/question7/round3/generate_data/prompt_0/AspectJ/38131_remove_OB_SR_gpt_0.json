{"id": "38131", "title": "Bug 38131ajc needs d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with change in the underlying Eclipse compiler. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n  public static void main(String[] args) {\n    System.out.println(\"Hello\");\n  }\n\n}\n\nThen compile using the following command:\n\najc subpackage\\Test.java\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory.\n\nsubpackage\\Test.java or javac subpackage\\Test.java\n\nNo big deal, really.", "OB": "When compiling a Java class in a subpackage using the ajc command, a directory with the same name as the subpackage is created within the existing subpackage directory.", "EB": "The same behavior as javac is expected, where no directory should be created within the existing subpackage directory.", "SR": "To reproduce the issue:\n1. Create a class in a subpackage.\n2. Compile the class using the ajc command.\n3. Check if a directory with the same name as the subpackage is created within the existing subpackage directory."}