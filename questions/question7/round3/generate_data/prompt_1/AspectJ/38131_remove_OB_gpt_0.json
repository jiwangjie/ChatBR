{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler. \n\nTo reproduce:\n1. Create a class in a subpackage:\n\npackage subpackage;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\n2. Compile using the following command: ajc -d subpackage subpackage\\Test.java\n\nObserved behavior: The command creates a directory \"subpackage\" under the existing \"subpackage\" directory, but it does not generate the compiled class file in the new directory.\n\nExpected behavior: The command should create the \"subpackage\" directory (if it doesn't exist) and generate the compiled class file within it, similar to the behaviour of the javac command.\n\nThis behaviour should be fixed so that ajc and javac have the same behavior.\n", "OB": "The command creates a directory \"subpackage\" under the existing \"subpackage\" directory, but it does not generate the compiled class file in the new directory.", "EB": "The command should create the \"subpackage\" directory (if it doesn't exist) and generate the compiled class file within it, similar to the behaviour of the javac command.", "SR": "Compile the Test.java file in the subpackage using the command `ajc -d subpackage subpackage\\Test.java` and verify that the directory \"subpackage\" is created (if it doesn't exist) and the compiled class file is generated within it."}