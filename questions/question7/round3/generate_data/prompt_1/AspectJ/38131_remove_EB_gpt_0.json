{"id": "38131", "title": "Bug 38131ajc needs d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with change in the underlying Eclipse compiler.\n\nCreate a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\nThen compile using the following command:\n\najc subpackage\\Test.java\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\"directory. subpackage\\Test.java or javac subpackage\\Test.java. No big deal, really.", "OB": "When running the ajc command to compile a class located in a subpackage, a directory named \"subpackage\" is created under the existing \"subpackage\" directory. This results in the compiled test.class file being placed in the subpackage\\subpackage directory instead of the expected subpackage directory.", "EB": "The test.class file should be placed in the correct subpackage directory, not in the subpackage\\subpackage directory.", "SR": "To reproduce the issue:\n1. Create a class named Test.java in a subpackage such as \"subpackage\"\n2. Run the command ajc d . subpackage\\Test.java to correctly compile the class and place the test.class file in the subpackage directory."}