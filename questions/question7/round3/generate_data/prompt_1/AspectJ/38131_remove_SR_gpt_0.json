{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler.\n\nTo reproduce the issue, follow these steps:\n1. Create a class in a subpackage such as:\n   package subpackage;\n   public class Test {\n       public static void main(String[] args) {\n           System.out.println(\"Hello\");\n       }\n   }\n2. Compile the class using the following command:\n   ajc subpackage\\Test.java\n\nObserved Behavior:\nAfter the compilation, a directory named \"subpackage\" is created under the existing \"subpackage\" directory, and the compiled .class file \"Test.class\" is placed in this new directory.\nWhen running the command \"java subpackage.Test\", it results in the following exception:\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\nExpected Behavior:\nThe behavior of ajc should be consistent with javac, so after compilation, the \"Test.class\" file should be placed in the existing \"subpackage\" directory, and running the command \"java subpackage.Test\" should not result in the NoClassDefFoundError.\n\nTo fix the problem, you can use the following command instead:\najc -d . subpackage\\Test.java\n\nIt would be nice to have the same behavior as javac, where the -d option is not required.", "OB": "", "EB": "", "SR": ""}