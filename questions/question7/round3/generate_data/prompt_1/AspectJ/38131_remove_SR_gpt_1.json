{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with change in the underlying Eclipse compiler.\n\nCreate a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\npublic static void main(String[] args) {\n\nSystem.out.println(\"Hello\");\n\n}\n\n}\n\nThen compile using following command: ajc subpackage\\Test.java\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. subpackage\\Test.java or javac subpackage\\Test.java\n\nNo big deal, really.", "OB": "When compiling the Test.java class using ajc subpackage\\Test.java command, a directory named \"subpackage\" is created under the existing \"subpackage\" directory and the Test.class file is put in that subdirectory.", "EB": "However, it would be nice to have the same behavior as javac.", "SR": "To reproduce the issue, create a class in a subpackage and compile it using the ajc subpackage\\Test.java command. Notice the creation of an additional \"subpackage\" directory and the placement of the Test.class file therein. To resolve the issue, use the ajc -d . command instead."}