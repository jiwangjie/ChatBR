{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n\n}\n\nThen compile using the following command: ajc subpackage\\Test.java. You will see a directory \"subpackage\" created under the existing \"subpackage\" directory.", "OB": "The test.class file is then put in the subpackage\\subpackage directory. This means running the java command results in an exception: Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test. Running either of the following commands fixes the problem: ajc -d .", "EB": "But it would be nice to have the same behavior as javac.", "SR": "1. Create a Java class in the subpackage 'subpackage'.\n2. Compile the class using the command 'ajc -d . subpackage\\Test.java'.\n3. Run the Java program using the command 'java subpackage.Test'. Make sure no exceptions are thrown."}