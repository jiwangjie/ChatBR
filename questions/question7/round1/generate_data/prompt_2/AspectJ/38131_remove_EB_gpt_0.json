{"id": "38131", "title": "Bug 38131 - ajc needs -d option while correctly compiling classes from subpackage", "description": "I am using version 1.1rc1 of ajc. This bug seems to be a regression since rc1 and a deviation from javac. I suspect it may be related to a change in the underlying Eclipse compiler. To reproduce the issue, follow these steps:\n\n1. Create a class in a subpackage. For example:\n\n   package subpackage;\n\n   public class Test {\n       public static void main(String[] args) {\n           System.out.println(\"Hello\");\n       }\n   }\n\n2. Compile the class using the following command:\n\n   ajc subpackage\\Test.java\n\n   Note: This command results in the creation of a directory called \"subpackage\" under the existing \"subpackage\" directory.\n\n3. Running the Java command results in the following exception:\n\n   Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\n     To fix this issue, you can run either of the following commands:\n\n   - ajc -d . subpackage\\Test.java\n\n   - javac subpackage\\Test.java\n\n   This bug is not a significant problem, but it should be addressed to ensure consistent behavior with other compilers.", "OB": "When compiling a class using ajc command without specifying the -d option, the test.class file is put in the \"subpackage\\subpackage\" directory.", "EB": "When compiling a class using ajc command without specifying the -d option, the test.class file should be put in the \"subpackage\" directory.", "SR": "To reproduce the issue, compile a class using the ajc command without specifying the -d option."}