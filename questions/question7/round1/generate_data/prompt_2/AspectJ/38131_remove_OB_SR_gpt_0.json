{"id": "38131", "title": "Bug 38131ajc does not include -d option while correctly compiling classes from a subpackage", "description": "Bug 38131ajc does not include -d option while correctly compiling classes from a subpackage. I am currently using version 1.1rc1. This is a regression from rc1 and a deviation from the behavior of javac. It seems this issue may be related to a change in the underlying Eclipse compiler. \n\nTo reproduce this issue, follow these steps:\n1. Create a class in a subpackage, for example:\n\n   package subpackage;\n\n   public class Test {\n      public static void main(String[] args) {\n         System.out.println(\"Hello\");\n      }\n   }\n\n2. Compile the class using the following command:\n\n   ajc subpackage\\Test.java\n\nObserved Behavior:\n- A directory named \"subpackage\" is created under the existing \"subpackage\" directory.\n\nExpected Behavior:\n- The compiled class should be placed in the existing \"subpackage\" directory without creating a new directory.\n\nNote: This behavior differs from the behavior of javac.\n\n", "OB": "A directory named \"subpackage\" is created under the existing \"subpackage\" directory when compiling the class using ajc subpackage\\Test.java command.", "EB": "The compiled class should be placed in the existing \"subpackage\" directory without creating a new directory.", "SR": "1. Create a class in a subpackage.\n2. Compile the class using the following command: ajc subpackage\\Test.java"}