{"id": "38131", "title": "Bug 38131ajc needs d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with change in the underlying Eclipse compiler. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n\n}\n\nThen compile using following command:\n\najc subpackage\\Test.java\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. subpackage\\Test.java or javac subpackage\\Test.java\n\nNo big deal, really.", "OB": "When compiling a Java file using the command 'ajc' and specifying a Java file located in a subpackage directory, a duplicate directory with the same name as the existing subpackage directory is created.", "EB": "The behavior should be consistent with the 'javac' command, where no duplicate subpackage directories are created.", "SR": "To reproduce this issue, follow these steps:\n\n1. Create a Java class file in a subpackage directory.\n2. Use the 'ajc' command to compile the Java file.\n3. Observe that a duplicate subpackage directory is created."}