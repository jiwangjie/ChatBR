{"id": "38131", "title": "Bug 38131ajc needs -d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with a change in the underlying Eclipse compiler. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n\tpublic static void main(String[] args) {\n\n\t\tSystem.out.println(\"Hello\");\n\n\t}\n\n}\n\nThen compile using the following command: ajc subpackage\\Test.java\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. subpackage\\Test.java\n\nor\n\njavac subpackage\\Test.java\n\nNo big deal, really.", "OB": "When compiling a class in a subpackage using the ajc (AspectJ compiler) command with the subpackage\\Test.java file as input, a test.class file is generated and placed in the subpackage\\subpackage directory. However, running the java command on this compiled file results in the following exception:\n\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\n", "EB": "The expected behavior is that running the java command on the compiled file should execute without any errors and print \"Hello\" as the output.", "SR": "To reproduce the issue, follow these steps:\n\n1. Create a class named Test in a subpackage (e.g., package subpackage).\n2. Add the following code to the Test class:\n\n\tpublic static void main(String[] args) {\n\n\t\tSystem.out.println(\"Hello\");\n\n\t}\n\n3. Save the file as subpackage\\Test.java.\n4. Open the command prompt or terminal and navigate to the directory containing the Test.java file.\n5. Compile the Test.java file using the ajc command:\n\n\tajc subpackage\\Test.java\n\n6. Verify that a subpackage\\subpackage directory is created.\n7. Try to run the compiled file using the java command:\n\n\tjava subpackage.Test\n\n8. Observe the exception: java.lang.NoClassDefFoundError: subpackage/Test"}