{"id": "38131", "title": "Bug 38131: ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131: ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler.\n\nTo reproduce the issue:\n1. Create a class in a subpackage such as:\n   package subpackage;\n   public class Test {\n       public static void main(String[] args) {\n           System.out.println(\"Hello\");\n       }\n   }\n2. Compile using the following command:\n   ajc subpackage\\Test.java\n\nAfter compiling, you will see a directory \"subpackage\" created under the existing \"subpackage\" directory. The test.class is then put in the subpackage\\subpackage directory.\n\nIf you try to run the java command, you will get the following error:\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\nTo fix the issue, you need to run either of the following commands:\n   ajc -d . subpackage\\Test.java\n", "OB": "After compiling with ajc subpackage\\Test.java, a directory named \"subpackage\" is created under the existing \"subpackage\" directory. The compiled class file, test.class, is placed inside subpackage\\subpackage directory. Running the java command results in the following error:\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test", "EB": "The compiled class file, test.class, should be placed directly in the subpackage directory, not in a new subdirectory named \"subpackage\". Running the java command without any errors should print \"Hello\" as output.", "SR": "To reproduce the issue, follow these steps:\n1. Create a class in a subpackage (e.g., subpackage\\Test.java) with the provided code.\n2. Compile the class using ajc with the command:\n   ajc -d . subpackage\\Test.java\n3. Run the java command to execute the program and verify that it prints \"Hello\" as output."}