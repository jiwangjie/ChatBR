{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with a change in the underlying Eclipse compiler.\n\nCreate a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n   public static void main(String[] args) {\n\n      System.out.println(\"Hello\");\n\n   }\n\n}\n\nThen compile using the following command: ajc subpackage\\Test.java.\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. subpackage\\Test.java or javac subpackage\\Test.java.\n\nNo big deal, really.", "OB": "When compiling the subpackage\\Test.java file using ajc, it creates a directory called \"subpackage\" within the existing \"subpackage\" directory. The compiled file, test.class, is placed in the subpackage\\subpackage directory.", "EB": "The compiled class file, Test.class, should be put in the correct directory without creating a duplicate subpackage directory. Running the java command should not result in a \"NoClassDefFoundError\".", "SR": "To reproduce the issue:\n1. Create a class named Test in the subpackage subpackage.\n2. Write a main method that prints \"Hello\".\n3. Compile the Test.java file using the command: ajc -d . subpackage\\Test.java.\n4. Verify that the compiled class file, Test.class, is placed directly in the subpackage directory.\n5. Run the java command with the following command: java subpackage.Test.\n6. Ensure that the program executes without any \"NoClassDefFoundError\"."}