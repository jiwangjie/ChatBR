{"id": "3666", "title": "Bug 3666 Code Completion Hungry code assist (1GDRYW5)", "description": "Bug 3666 Code Completion Hungry code assist (1GDRYW5) jkca (5/15/2001 11:04:56 AM) jresdk 106 Under certain circumstances code assist eats too much code. Consider the enclosed class. As a programmer, I must add a parameter to the baz call in bar to make the program correct. Steps: 1. UI can decide whether it wants to use the code assist end position (until the end of the current identifier) or the cursor location it used to start with, so as to control the amount of source to replace. Removing code assist option. ", "OB": "The code is changed to:\nbaz(x.foo().foo())\nI would rather it gave me\nbaz(x.foo()x.foo())\n\npublic class X {\n\tvoid bar(X x) {\n\t\tbaz(x.foo());\n\t}\n\n\tint foo() {\n\t\treturn 5;\n\t}\n\n\tvoid baz(int i, int j) {\n\t}\n}", "EB": "The expected behavior is that the code assist should replace only the selected portion of code, not the entire statement. It should not eat more code than necessary when making the correction.\n\nThe code should be:\nbaz(x.foo(), x.foo())", "SR": "To reproduce the issue:\n1. Create a class X with the following content:\n\n```java\npublic class X {\n\tvoid bar(X x) {\n\t\tbaz(x.foo());\n\t}\n\n\tint foo() {\n\t\treturn 5;\n\t}\n\n\tvoid baz(int i, int j) {\n\t}\n}\n```\n\n2. In the `bar` method, add another `foo()` method call inside the `baz` method call, like this:\n\n```java\nvoid bar(X x) {\n\tbaz(x.foo(), x.foo());\n}\n```\n\n3. Execute the code assist feature and observe that it replaces the code incorrectly, resulting in `baz(x.foo().foo())` instead of the expected `baz(x.foo(), x.foo())`."}