{"id": "49299", "title": "Bug 49299 Servlet 3.0 ch.7.1.1 says that custom cookie name affects URL rewriting", "description": "Bug 49299 Servlet 3.0 ch.7.1.1 says that custom cookie name affects URL rewriting. In chapter 7.1.1 of servlet30finalspec.pdf, it is stated that if a web application configures a custom name for its session tracking cookies, the same custom name should also be used as the name of the URI parameter if the session ID is encoded in the URL, provided that URL rewriting has been enabled. However, when testing the page, the actual result is that the page sends a cookie named 'MYSESSIONCOOKIE' with the session ID encoded in it, but the Reload link on the page uses 'jsessionid' instead of the custom cookie name.", "OB": "In chapter 7.1.1 of servlet30finalspec.pdf it is said that, 'If a web application configures a custom name for its session tracking cookies, the same custom name will also be used as the name of the URI parameter if the session ID is encoded in the URL (provided that URL rewriting has been enabled).' Actual result: The page sends the following cookie: SetCookie: MYSESSIONCOOKIE=658C60E714E9C7C833F4FDA366E0477F; Path=/cookiename; HttpOnly, but the Reload link on the page uses 'jsessionid': http://localhost:8080/cookiename/index.jsp;jsessionid=658C60E714E9C7C833F4FDA366E0477F4.", "EB": "The expected behavior is that the Reload link on the page should use the custom cookie name specified by the web application for session tracking, not 'jsessionid'.", "SR": "1. Configure a web application to use a custom name for its session tracking cookies. Enable URL rewriting. 2. Open the web application page. 3. Inspect the cookies being sent by the page. 4. Click on the Reload link on the page. 5. Check the URL of the Reload link and verify if it uses the custom cookie name or 'jsessionid' in the URL. "}