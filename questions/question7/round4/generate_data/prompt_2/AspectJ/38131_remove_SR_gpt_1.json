{"id": "38131", "title": "Bug 38131 - ajc needs -d option while correctly compiling classes from subpackage", "description": "I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with a change in the underlying Eclipse compiler.\n\nTo reproduce the issue:\n1. Create a class in a subpackage such as:\n\n```java\npackage subpackage;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n```\n\n2. Compile the class using the following command: ajc subpackage\\Test.java\n\nObserved Behavior:\nAfter compiling, the `Test.class` file is placed in the `subpackage\\subpackage` directory.\n\nThis means that running the `java` command results in the following error:\n`Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test`\n\nExpected Behavior:\nThe `Test.class` file should be placed in the `subpackage` directory, similar to the behavior of the `javac` command.\n\nSteps to Reproduce:\nCompile the class using the following command: ajc -d . subpackage\\Test.java\n\nThis will fix the issue and place the `Test.class` file in the correct `subpackage` directory.", "OB": "After compiling, the `Test.class` file is placed in the `subpackage\\subpackage` directory. This means that running the `java` command results in the following error:\n\n`Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test`", "EB": "The `Test.class` file should be placed in the `subpackage` directory, similar to the behavior of the `javac` command.", "SR": "Compile the class using the following command: ajc -d . subpackage\\Test.java"}