{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler. To reproduce the issue, follow these steps: \n\n1. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\npublic static void main(String[] args) {\n\nSystem.out.println(\"Hello\");\n\n}\n\n}\n\n2. Compile using the following command: ajc subpackage\\Test.java\n\nObserved Behavior: The test.class is then put in the subpackage\\subpackage directory. This means running the java command results in the following error:\n\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\nExpected Behavior: The behavior should be the same as javac, where the compiled class file is placed directly in the subpackage directory.\n\nSteps to Reproduce:\n\n1. Compile the class using ajc with the -d option: ajc -d . subpackage\\Test.java\n\nOR\n\n2. Compile the class using javac: javac subpackage\\Test.java\n\nRunning either of these commands should fix the problem.", "OB": "", "EB": "", "SR": ""}