{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with a change in the underlying Eclipse compiler. \nCreate a class in a subpackage such as:\n\n```java\npackage subpackage;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n```\n\nThen compile using the following command: `ajc subpackage\\Test.java`\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. \n\nRunning either of the following command fixes the problem: `ajc -d .`", "OB": "The `Test.class` file is then put in the `subpackage\\subpackage` directory. This means running the `java` command results in an `Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test`.", "EB": "The `Test.class` file should be put directly in the `subpackage` directory, not in a directory with the same name inside `subpackage`.", "SR": "To reproduce:\n1. Create a class in a subpackage.\n2. Compile the class using the command: `ajc subpackage\\Test.java`\n3. Verify that the `Test.class` file is put in the `subpackage\\subpackage` directory.\n4. Run the `java` command and observe the `NoClassDefFoundError`.\n5. Compile the class again using the command: `ajc -d .`.\n6. Run the `java` command and verify that the error is no longer present."}