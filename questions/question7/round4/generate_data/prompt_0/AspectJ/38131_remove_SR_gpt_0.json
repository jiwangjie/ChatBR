{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler.\n\nCreate a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\nThen compile using the following command:\n\najc subpackage\\Test.java\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory.\n\nThe Test.class file is then put in the \"subpackage\\subpackage\" directory. This means running the java command results in the following exception:\n\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\nRunning either of the following commands fixes the problem: ajc -d .", "OB": "The Test.class file is put in the \"subpackage\\subpackage\" directory. Running the java command results in the following exception: Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test", "EB": "But it will be nice to have the same behavior as javac.", "SR": "To reproduce:\n1. Create a class in a subpackage.\n2. Compile the class using the command \"ajc subpackage\\Test.java\".\n3. Run the \"java\" command and observe the exception.\n4. Fix the issue by running \"ajc -d .\" command."}