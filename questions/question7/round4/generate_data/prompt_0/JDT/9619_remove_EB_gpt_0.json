{"id": "9619", "title": "Bug 9619 - Move static member: Dialog details", "description": "Bug 9619 - Move static member: Dialog details 20020212a. Mnemonicsb. No validation on the type field. Type existence is not too expensive (done in the type wizard for super class), so could be done. At least isValidTypeNamef. label could say 'Select destination type:'g. \n\nBrowse button is too small (use SWTUtil for standard button sizes)c. Title is used for long text. When going to the next page, it says 'Type not found'Only types from the source folders of the own project should be shown in the dialog.e. destination type can be source type: refactoring warns that this will result in errors (which is not true) and makes pseudochanges in all referencing classes. ", "OB": "Browse button is too small.\nTitle is used for long text, causing it to say 'Type not found' when going to the next page.\nDialog shows types from all projects instead of only types from the source folders of the own project.\nRefactoring incorrectly warns that selecting a destination type which is the same as the source type will result in errors and creates pseudochanges in all referencing classes.", "EB": "The browse button should have a standard size using SWTUtil.\nThe title should not be used for long text, and it should not display 'Type not found' when going to the next page.\nThe dialog should only show types from the source folders of the own project.\nSelecting a destination type which is the same as the source type should not generate warning messages or create pseudochanges in all referencing classes.", "SR": "To reproduce the issue:\n1. Open the dialog for moving a static member.\n2. Observe that the browse button appears too small.\n3. Proceed to the next page and see that the title displays 'Type not found'.\n4. Notice that the dialog shows types from all projects, not just the source folders of the own project.\n5. Attempt to select a destination type that is the same as the source type and observe that a warning message is generated and pseudochanges are made in all referencing classes."}