{
  "id": "38131",
  "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage",
  "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with a change in the underlying Eclipse compiler. Create a class in a subpackage such as:\n\n```java\npackage subpackage;\n\npublic class Test {\n  public static void main(String[] args) {\n    System.out.println(\"Hello\");\n  }\n}\n```\n\nThen compile using the following command:\n\n```sh\najc -d subpackage subpackage\\Test.java\n```\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. Alternatively, with javac:\n\n```sh\njavac subpackage\\Test.java\n```\n\nNo big deal, really.",
  "OB": "When compiling a class from a subpackage using ajc without the -d option, it creates a directory with the same name as the subpackage under the existing subpackage directory.",
  "EB": "It will be nice to have the same behavior as javac, where the -d option is used to specify the destination directory for the compiled class files.",
  "SR": "1. Create a class in a subpackage.\n2. Compile the class using the command \"ajc -d . subpackage\\Test.java\"."
}

