{"id": "3666", "title": "Bug 3666 - CodeCompletion Hungry code assist", "description": "Bug 3666 - CodeCompletionHungry code assist (1GDRYW5) jkca (5/15/2001 11:04:56 AM)jresdk 106Under certain circumstances code assist eats too much code. Consider the enclosed class. As a programmer, I must add a parameter to the baz call in bar to make the program correct. Steps: 1. UI can decide whether it wants to use the code assist end position (until the end of current identifier) or the cursor location it used to start with, so as to controlthe amount of source to replace. Removing codeassist option.", "OB": "When using code assist in the given class, the code assist feature replaces more code than it should.", "EB": "The code is changed to:\nbaz(x.foo().foo())\nI would rather it gave me\nbaz(x.foo().x.foo())\npublic class X {\n  void bar(X x) {\n    baz(x.foo());\n  }\n  int foo() {\n    return 5;\n  }\n  void baz(int i, int j) {\n  }\n}\nKUM (5/21/01 9:02:11 AM) The text to replace is computed by the code assist infrastructure. Moved to ITPJCORE.PM (9/4/2001 2:58:56 PM) Option was added. PM (9/25/2001 2:20:50 PM) Removing option. The choice amongst one or the other should be conditioned by a keystroke (enter=replace until end, insert=replace until cursor location). Moving to ITPJUI.", "SR": "To reproduce the bug: \n1. Change the baz call to\n   baz(x.x.foo())\n2. Place the cursor after the first \"x.\"\n3. Press CtrlSpace to bring up code assist\n4. Type \"f\" to filter the list\n5. Select \"foo()\""}