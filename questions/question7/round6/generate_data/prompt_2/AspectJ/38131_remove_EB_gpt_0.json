{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler. \n\nTo reproduce the issue, create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n\n}\n\nThen compile using the following command:\n\najc subpackage\\Test.java\n\nYou will see a directory named \"subpackage\" created under the existing \"subpackage\" directory. The Test.class file is placed inside the subpackage\\subpackage directory. This causes the \"javac\" command to fail with the following error:\n\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\nRunning either of the following commands fixes the problem: ajc -d . subpackage\\Test.java", "OB": "The Test.class file is placed inside the subpackage\\subpackage directory, causing the \"javac\" command to fail with a NoClassDefFoundError when trying to run the program.", "EB": "The -d option should be used in the ajc command to specify the output directory as the current directory.", "SR": "The bug can be fixed by adding the -d option followed by . (dot) in the ajc command while compiling classes from the subpackage."}