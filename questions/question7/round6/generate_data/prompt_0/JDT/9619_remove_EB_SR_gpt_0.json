{"id": "9619", "title": "Bug 9619 - Move static member: Dialog details", "description": "Bug 9619 - Move static member: Dialog details 20020212a. Mnemonicsb. No validation on the type field. Type existence is not too expensive (done in the type wizard for the superclass), so it could be done. At least isValidTypeNamef. The label could say 'Select destination type:'g. Browse button is too small (use SWTUtil for standard button sizes)c. Title is used for long text. When going to the next page, it says 'Type not found'. Only types from the source folders of the own project should be shown in the dialog. e. Destination type can be source type: refactoring warns that this will result in errors (which is not true) and makes pseudo-changes in all referencing classes.", "OB": "The browse button is too small. The title is used for long text. When going to the next page, it displays 'Type not found'. Only types from the source folders of the own project should be shown in the dialog. The destination type can be the same as the source type, and instead of warning about resulting errors, it makes pseudo-changes in all referencing classes.", "EB": "The browse button should have a standard size using SWTUtil. The title should not be used for long text. When going to the next page, it should not display 'Type not found'. Only types from the source folders of the own project should be shown in the dialog. The destination type should not be allowed to be the same as the source type, and the refactoring should display a correct warning about resulting errors.", "SR": "To reproduce the issue:\n1. Open the dialog for moving a static member.\n2. Notice that the browse button is too small.\n3. Proceed to the next page and observe the title being used for long text.\n4. Continue to the next page and see the 'Type not found' message.\n5. Verify that types from all source folders are shown in the dialog, not just from the own project.\n6. Attempt to set the destination type as the same as the source type and observe the warning and pseudo-changes in referencing classes."}