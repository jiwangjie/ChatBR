{"id": "38131", "title": "Bug 38131ajc needs d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with change in the underlying Eclipse compiler. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n\n  public static void main(String[] args) {\n    System.out.println(\"Hello\");\n  }\n\n}\n\nThen compile using following command: ajc subpackage\\Test.java\n\nYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. subpackage\\Test.java or javac subpackage\\Test.java.\n\nNo big deal, really. ", "OB": "When compiling a class in a subpackage using the command 'ajc subpackage\\Test.java', a directory named 'subpackage' is created within the existing 'subpackage' directory. This causes an issue when running the Java command, resulting in an exception: 'Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test'.", "EB": "Running the 'ajc' command with the '-d .' option should correctly compile the classes from the subpackage, without creating an additional 'subpackage' directory.", "SR": "To reproduce the issue: \n1. Create a class in a subpackage.\n2. Compile the class using the command 'ajc subpackage\\Test.java'.\n3. Run the Java command and observe the exception.\n\nTo resolve the issue, add the '-d .' option to the 'ajc' command when compiling the classes from the subpackage."}