{"id": "38131", "title": "Bug 38131: ajc needs -d option while correctly compiling classes from subpackage", "description": "I am using ajc 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler.\n\nTo reproduce the issue, follow these steps:\n\n1. Create a class in a subpackage:\n   ```\n   package subpackage;\n\n   public class Test {\n       public static void main(String[] args) {\n           System.out.println(\"Hello\");\n       }\n   }\n   ```\n2. Compile the class using the following command:\n   ```\n   ajc subpackage\\Test.java\n   ```\n\nObserved Behavior:\n\nThe `Test.class` file is then put in a `subpackage\\subpackage` directory. This means running the `java` command results in the following error:\n\n```\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n```\n\nExpected Behavior:\n\nRunning either of the following commands should fix the problem:\n\n```\najc -d . subpackage\\Test.java\njavac subpackage\\Test.java\n```\n\nPlease note that adding the `-d .` option is necessary for correct compilation and to avoid the error mentioned above.", "OB": "The `Test.class` is put in the `subpackage\\subpackage` directory. This means running the `java` command results in the `java.lang.NoClassDefFoundError` for `subpackage/Test`.", "EB": "Running either of the following commands should fix the problem: `ajc -d . subpackage\\Test.java` or `javac subpackage\\Test.java`.", "SR": "To reproduce the issue:\n\n1. Create a class in a subpackage:\n```\npackage subpackage;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n```\n2. Compile the class using the following command:\n```\najc subpackage\\Test.java\n```"}