{"id": "38131", "title": "Bug 38131 - ajc needs -d option while correctly compiling classes from a subpackage", "description": "I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler. \n\nTo reproduce the issue:\n1. Create a class in a subpackage:\n   package subpackage;\n   public class Test {\n   public static void main(String[] args) {\n   System.out.println(\"Hello\");\n   }\n}\n\n2. Compile the class using the following command:\n   ajc subpackage\\Test.java\n\nObserved Behavior:\nThe test.class file is put in the subpackage\\subpackage directory, resulting in the following error when running the java command:\n   Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\nExpected Behavior:\nThe test.class file should be put in the subpackage directory.\n\nSteps to Reproduce:\najc -d . subpackage\\Test.java", "OB": "The test.class file is put in the subpackage\\subpackage directory. This means running the java command results in an Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test. Running either of the following commands fixes the problem: ajc -d .", "EB": "But it would be nice to have the same behavior as javac.", "SR": "ajc -d . subpackage\\Test.java"}