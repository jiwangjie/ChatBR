{"id": "38131", "title": "Bug 38131ajc needs d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac.I am guessing this may have to do something with change in the underlyingEclipse compiler.Create a class in a subpackage such as:package subpackage;public class Test {public static void main(String[] args) {System.out.println(\"Hello\");}}Then compile using following command: ajc subpackage\\\\Test.javaYou will see a directory \"subpackage\" created under the existing \"subpackage\" directory. subpackage\\\\Test.javaor javac subpackage\\\\Test.javaNo big deal, really. ", "OB": "When compiling a class in a subpackage using the command 'ajc subpackage\\\\Test.java', a directory named 'subpackage' is created under the existing 'subpackage' directory and the 'test.class' file is placed in it. As a result, running the 'java' command results in the following exception: 'Exception in thread 'main' java.lang.NoClassDefFoundError: subpackage/Test'.", "EB": "The 'ajc' command should not create a nested 'subpackage' directory when compiling a class in a subpackage. The 'test.class' file should be placed directly in the 'subpackage' directory, without creating a subdirectory.", "SR": "To reproduce, create a class in a subpackage and compile it using the command 'ajc subpackage\\\\Test.java'. Then, try running the 'java' command and observe the 'NoClassDefFoundError' exception."}