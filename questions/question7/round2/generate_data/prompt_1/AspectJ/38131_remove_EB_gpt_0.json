{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler.\nTo reproduce the issue, follow these steps:\n1. Create a class in a subpackage such as:\n   package subpackage;\n   public class Test {\n       public static void main(String[] args) {\n           System.out.println(\"Hello\");\n       }\n   }\n2. Compile using the following command:\n   ajc subpackage\\Test.java\n3. Observe that a directory \"subpackage\" is created under the existing \"subpackage\" directory. The compiled test.class file is placed in the subpackage\\subpackage directory.\n4. Running the java command results in the exception:\n   Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\nTo workaround the issue, use either of the following commands to compile the classes correctly:\najc -d . subpackage\\Test.java", "OB": "When compiling a class using the ajc command without the -d option, the compiled test.class file is placed in a subdirectory called 'subpackage' under the existing 'subpackage' directory.", "EB": "The compiled test.class file should be placed directly in the 'subpackage' directory, without creating an additional 'subpackage' subdirectory.", "SR": "To reproduce the issue, compile the class using the command 'ajc -d . subpackage\\Test.java'."}