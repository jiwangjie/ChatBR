{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler.\n\nTo reproduce the issue, follow these steps:\n1. Create a class in a subpackage such as:\n\n```java\npackage subpackage;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n```\n\n2. Compile using the following command:\n\n```shell\najc subpackage\\Test.java\n```\n\n3. You will notice a directory named \"subpackage\" created under the existing \"subpackage\" directory. The `Test.class` file is then put in `subpackage\\subpackage` directory.\n\nObserved Behavior:\nRunning the `java` command results in the following exception:\n\n```\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n```\n\nExpected Behavior:\nRunning either of the following command fixes the problem:\n\n```shell\najc -d . subpackage\\Test.java\n```\n\nor\n\n```shell\njavac subpackage\\Test.java\n```\n\nNo big deal, really.", "OB": "Running the `java` command results in the following exception:\n\n```\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n```", "EB": "Running either of the following command fixes the problem:\n\n```shell\najc -d . subpackage\\Test.java\n```\n\nor\n\n```shell\njavac subpackage\\Test.java\n```", "SR": "Follow these steps to reproduce the issue:\n1. Create a class in a subpackage such as:\n\n```java\npackage subpackage;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n```\n\n2. Compile using the following command:\n\n```shell\najc subpackage\\Test.java\n```"}