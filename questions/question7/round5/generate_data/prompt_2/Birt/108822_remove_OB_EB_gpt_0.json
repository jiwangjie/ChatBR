{"id": "108822", "title": "More efficient logic is expected to process disk sorting when there is a boundary value for row count", "description": "", "OB": "The current logic for processing disk sorting is inefficient when there is a boundary value for the number of rows. It appears that the program saves the data as a temporary file, loads it into memory, performs the sorting operation, and then saves the file again as a temporary file.", "EB": "The processing logic for disk sorting should be optimized to handle large data sets efficiently. The program should directly perform the sorting operation on the data without the need to save and load the file multiple times.", "SR": "To reproduce the issue, follow these steps:\n1. Sort 40000 rows of data on disk\n2. Set the program to process the data less than 40000\n3. Observe the inefficient file saving and loading operations during the sorting process"}