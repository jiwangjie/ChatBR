{"id": "49195", "title": "Using 1 as shutdown port with Windows service works, but prints error message", "description": "Specify '<Server port=\"1\"' in server.xml3. That can be used to differentiate the two use cases. There could be improvements on how to stop Tomcat. System.exit(0) would work regardless of all that. I suppose that jsvc may show the same behavior, but I have not tried.", "OB": "When using 1 as the shutdown port with the Windows service, Tomcat stops successfully, but an error message is printed in the catalina.20100427.log file. The error message is as follows:\n\n27.04.2010 17:49:13 org.apache.catalina.startup.Catalina stopServer SEVERE: No shutdown port configured. Server not shut down.\n\nDespite the error message, Tomcat actually stops after printing it. It is important to note that Catalina stopServer() method is called, which in turn performs System.exit(1) to shut down Tomcat. Additionally, when the service launcher stops Tomcat, Catalina server is not null.", "EB": "The error message should not be printed when using 1 as the shutdown port with the Windows service. Instead, a more informative or descriptive message should be logged indicating successful shutdown. If necessary, any improvements related to stopping Tomcat should be implemented, such as using a different method like wait(10000) instead of sleep(10000) in StandardServer.await(). This would allow the thread to be woken by a notifyAll() call or using the interrupt() method to wake it up if the thread is known.", "SR": "To reproduce this issue:\n1. Specify '<Server port=\"1\"' in the server.xml3 file.\n2. Start the Tomcat Windows service.\n3. Observe the error message in the catalina.20100427.log file."}