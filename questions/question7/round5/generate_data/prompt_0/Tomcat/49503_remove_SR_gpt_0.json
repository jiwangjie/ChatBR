{"id": "49503", "title": "Bug 49503 - Connectors do not bind to their ports in Catalina.load(), but only later in start()", "description": "Bug 49503 - Connectors do not bind to their ports in Catalina.load(), but only later in start(). Testing with trunk at revision 957942, thus this supposedly affects 7.0.0 as well. In TC6 there is a separate prestartup phase when starting Tomcat, to allow Connectors to bind to their ports before other parts of Tomcat are started. IIRC, it is implemented by having separate Bootstrap.load(String[]) and Boot.start() methods [1]. Essentially, it breaks the fix for BZ 48625. To reproduce: 1. The first instance starts successfully. [1] http://commons.apache.org/daemon/jsvc.html Downgrading...user When running with jsvc it will mean that Tomcat would not be able to bind to privileged ports (80). I do not use jsvc, but I observe this issue when testing the fix for bug 49030 + bug 48625 that I applied in r957960. The second instance fails, as expected, but not in the expected way. 3. Actual behavior: The exception does not happen, because the connector does not try to bind to the port. It will bind when start() is called. The startup sequence continues and then fails in Server.await(). 4.", "OB": "The connectors do not bind to their ports when Catalina.load() is called. The exception does not occur because the connector does not attempt to bind to the port at this stage. Instead, it binds when the start() method is called. As a result, the startup sequence continues but eventually fails in Server.await().", "EB": "I would expect that in StandardService.initInternal() the connector.init() call fails because it cannot bind to the port. The exception from connector.init() should be caught there, and if the EXITONINITFAILURE flag is set, it should be rethrown. Then, it should be caught in Catalina.load() and rethrown as an Error, which should abort Tomcat startup.", "SR": "To reproduce the issue: 1. Start the first instance successfully. 2. Run Tomcat with jsvc or apply the fixes for bug 49030 and bug 48625. 3. Attempt to start a second instance, which should fail in an unexpected way, without throwing the expected exception. 4. Observe the startup sequence continuing until it fails in Server.await()."}