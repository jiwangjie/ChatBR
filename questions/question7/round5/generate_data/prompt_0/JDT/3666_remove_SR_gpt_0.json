{"id": "3666", "title": "Bug 3666 - Hungry code assist", "description": "Under certain circumstances, the code assist feature in the software is consuming too much code. When adding a parameter to the 'baz' function call in the 'bar' function, the code assist should only replace the necessary portion of the code. However, it is replacing the entire line of code. The software should only replace until the cursor location or the end of the current identifier, based on user preference.", "OB": "The code is changed to: baz(x.foo().foo())\nI would rather it gave me: baz(x.foo()x.foo())\n\npublic class X {\n    void bar(X x) {\n        baz(x.foo());\n    }\n    int foo() {\n        return 5;\n    }\n    void baz(int i, int j) {\n    }\n}", "EB": "The expected behavior is that when adding a parameter to the 'baz' function call in the 'bar' function, the code assist should only replace the necessary portion of the code. It should either replace until the cursor location or until the end of the current identifier, based on a user keystroke (e.g., enter for replace until end, insert for replace until cursor location). This behavior should be conditioned by the user's keystroke during the code completion process.", "SR": "To reproduce the issue:\n1. Open the software and create a new class.\n2. Add the following code:\n\n```java\npublic class X {\n    void bar(X x) {\n        baz(x.foo());\n    }\n    int foo() {\n        return 5;\n    }\n    void baz(int i, int j) {\n    }\n}\n```\n3. Invoke the code assist feature on the 'baz' function call in the 'bar' function.\n4. Add a parameter to the 'baz' function call.\n5. Observe that the code assist replaces the entire line of code, rather than the necessary portion."}