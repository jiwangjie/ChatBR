{"id": "38131", "title": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d option while correctly compiling classes from subpackage. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with a change in the underlying Eclipse compiler.\n\nTo reproduce the issue:\n1. Create a class in a subpackage such as:\n\npackage subpackage;\n\npublic class Test {\n    public static void main(String[] args) {\n        System.out.println(\"Hello\");\n    }\n}\n\n2. Compile using the following command:\n\najc -d . subpackage\\Test.java\n\n3. Observe that a directory \"subpackage\" is created under the existing \"subpackage\" directory.\n\nObserved Behavior (OB): The Test.class file is put in the subpackage\\subpackage directory.\n\nExpected Behavior (EB): The Test.class file should be put in the subpackage directory.\n\nSteps to Reproduce (SR): Use the correct command to fix the problem:\n\najc -d . subpackage\\Test.java", "OB": "The Test.class is then put in subpackage\\subpackage directory. This means running the java command results in the exception: 'Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test'", "EB": "The Test.class file should be put in the subpackage directory.", "SR": "Use the correct command to fix the problem:\n\najc -d . subpackage\\Test.java"}