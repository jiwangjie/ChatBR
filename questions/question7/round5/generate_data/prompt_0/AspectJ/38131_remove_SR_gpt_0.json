{"id": "38131", "title": "Bug 38131ajc needs d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac.I am guessing this may have to do something with change in the underlyingEclipse compiler.Create a class in a subpackage such as:package subpackage;public class Test {public static void main(String[] args) {System.out.println(\"Hello\");}}Then compile using following command: ajc subpackage\\Test.javaYou will see a directory 'subpackage' created under the existing 'subpackage'directory. subpackage\\Test.javaor javac subpackage\\Test.javaNo big deal, really. ", "OB": "When compiling a class using ajc command with a subpackage, the compiled .class file is placed in a sub-subpackage directory instead of the subpackage directory. This leads to an error when running the java command and results in a 'NoClassDefFoundError' for the class. ", "EB": "The expected behavior should be for the compiled .class file to be placed in the subpackage directory, similar to the behavior of javac. ", "SR": "To reproduce the issue, create a class in a subpackage, compile it using the command 'ajc subpackage\\Test.java', and try to run the java command on the compiled class. The 'NoClassDefFoundError' should occur. To resolve the issue, use the command 'ajc -d . subpackage\\Test.java' to correctly compile the class and place the .class file in the subpackage directory."}