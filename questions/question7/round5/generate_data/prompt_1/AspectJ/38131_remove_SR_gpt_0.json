{"id": "38131", "title": "Bug 38131ajc needs -d . option while correctly compiling classes from subpackage", "description": "Bug 38131ajc needs -d . I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have to do something with a change in the underlying Eclipse compiler.\n\nTo reproduce the issue:\n1. Create a class in a subpackage. For example:\n   package subpackage;\n   public class Test {\n       public static void main(String[] args) {\n           System.out.println('Hello');\n       }\n   }\n2. Compile the class using the following command:\n   ajc subpackage\\Test.java\n\nObserved Behavior:\nAfter compiling, a directory called 'subpackage' is created under the existing 'subpackage' directory, and the 'Test.class' file is placed into this new 'subpackage' directory. This means that running the 'java' command results in the following error:\n   Exception in thread 'main' java.lang.NoClassDefFoundError: subpackage/Test\n\nExpected Behavior:\nSimilar to 'javac', the compiled 'Test.class' file should be placed in the same directory as the source file.\n\nSteps to Reproduce:\nTo fix the problem, run the following command instead:\n   ajc -d . subpackage\\Test.java\n\nImprovement:\nIt would be nice to have the same behavior as 'javac', where the compiled class is put in the same directory as the source file."}