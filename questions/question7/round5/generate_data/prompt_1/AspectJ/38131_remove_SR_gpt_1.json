{"id": "38131", "title": "Bug 38131: ajc needs -d option while correctly compiling classes from subpackage", "description": "Bug 38131: ajc needs -d option. I am using 1.1rc1. This is a regression since rc1 and a deviation from javac. I am guessing this may have something to do with a change in the underlying Eclipse compiler.\n\nTo reproduce the issue, follow these steps:\n1. Create a class in a subpackage. For example: package subpackage;\n   public class Test {\n      public static void main(String[] args) {\n         System.out.println(\"Hello\");\n      }\n   }\n2. Compile using the following command: ajc subpackage\\Test.java\n\nObserved Behavior:\nThe test.class file is put in the \"subpackage\\subpackage\" directory.\nThis means running the java command results in the following error:\nException in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test\n\nExpected Behavior:\nThe test.class file should be put in the \"subpackage\" directory, not in the nested \"subpackage\\subpackage\" directory.\n\nTo fix the problem, running the following command solves the issue: ajc -d . subpackage\\Test.java\n\nIt would be nice to have the same behavior as javac.", "OB": "The test.class file is put in the \"subpackage\\subpackage\" directory. This means running the java command results in the following error: Exception in thread \"main\" java.lang.NoClassDefFoundError: subpackage/Test", "EB": "The test.class file should be put in the \"subpackage\" directory, not in the nested \"subpackage\\subpackage\" directory.", "SR": "To reproduce the issue, follow these steps:\n1. Create a class in a subpackage. For example: package subpackage;\n   public class Test {\n      public static void main(String[] args) {\n         System.out.println(\"Hello\");\n      }\n   }\n2. Compile using the following command: ajc -d . subpackage\\Test.java"}