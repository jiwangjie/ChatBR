{"code": 200, "status": "success", "bug_report": {"0": {"text": "Bug 27869  StyledText overuse of Font.getFontData.", "labels": []}, "1": {"text": "Running eclipse, using the Java Editor: A single key stroke can cause the API  Font.getFontData() to be called 13 times.", "labels": []}, "2": {"text": "I believe, and many people agree,  that this API don't need to be used at all by the StyledText when it's been  typed.", "labels": []}, "3": {"text": "This API is also overused when we are scrolling the StyledText and  selecting text.", "labels": ["OB"]}, "4": {"text": "Try to add system.out.println in the first line of method  Font#getFontData, run a selfhosted eclipse, watch the console.", "labels": ["SR"]}, "5": {"text": "I concerned about this problem cause in some platform the performance of this  method is very pour if compared with Windows.", "labels": ["OB"]}, "6": {"text": "For example, Motif running on UTF-8.", "labels": ["SR"]}, "7": {"text": "Each Font has 7 FontData, therefore every  time I type 'a' in the JavaEditor 91 (7*13) FontData will be loaded.", "labels": ["OB"]}, "8": {"text": "Btw, UTF-8  is the default english encoding for Redhat 8.", "labels": []}, "9": {"text": "FontMetrics API is also very used by the StyledText, I believe that the metric  information should be cached in the StyledText and update only when the font is  changed.", "labels": ["OB", "EB"]}}}