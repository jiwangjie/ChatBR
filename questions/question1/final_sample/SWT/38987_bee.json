{"code": 200, "status": "success", "bug_report": {"0": {"text": "Bug 38987  PocketPC: MULTI Text control ES_WANTRETURN/_TAB_NEXT problem.", "labels": []}, "1": {"text": "PocketPC: MULTI Text control ES_WANTRETURN/_TAB_NEXT problem  On PocketPC, when having a MULTI Text control with or without scrollbars, with or without wrap, etc.", "labels": ["OB", "SR"]}, "2": {"text": "-- you cannot make it accept plain [Enter] key to break lines.", "labels": ["OB"]}, "3": {"text": "Only Ctrl+Enter (Ctrl+M, Ctrl+J) would work.", "labels": []}, "4": {"text": "What helps is an internal OS hack:  int oldBits = OS.GetWindowLong (text.handle, OS.GWL_STYLE); int newBits = oldBits | 0x1000; // ES_WANTRETURN OS.SetWindowLong (text.handle, OS.GWL_STYLE, newBits);  Similar situation with the TAB key: we want it act regularly by inserting a TAB character into the text.", "labels": []}, "5": {"text": "But there is no \"WANTTAB\" flag.", "labels": ["OB"]}, "6": {"text": "There is this Traverse functionality by adding a listener and in the handler to set the doit field for the event.", "labels": []}, "7": {"text": "However, in PocketPC, neither 'false' or 'true' has any effect on reviving the TAB  (or ENTER).", "labels": ["OB"]}, "8": {"text": "So the only solution for TAB is in the same Traverse handler to Text.insert() the character manually.", "labels": ["OB"]}, "9": {"text": "This is a workaround and it behaves differently on the Desktop, however it should be consistent.", "labels": ["EB"]}, "10": {"text": "These problems with NOT getting either LF or TAB character do not appear on desktop SWT.", "labels": ["OB"]}, "11": {"text": "So this may be just a bug in PocketPC.", "labels": []}}}