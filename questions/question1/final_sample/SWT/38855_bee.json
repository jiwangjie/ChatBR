{"code": 200, "status": "success", "bug_report": {"0": {"text": "Bug 38855  regression - Table.getImageBounds returns incorrect value.", "labels": ["OB"]}, "1": {"text": "Take the propertysheet as an example.", "labels": ["SR"]}, "2": {"text": "If you select a project and try to click on the +/- next to the \"Info\" category entry, it won't expand/collapse.", "labels": ["OB", "EB", "SR"]}, "3": {"text": "In this particular case if you click just on the upper-left corner of the box around the +/- you may be able to get it to work.", "labels": []}, "4": {"text": "But if you click anywhere else it won't work.", "labels": ["OB"]}, "5": {"text": "In this particular case, TableTreeItem.getImageBounds() was returning a box that was lower than where you were clicking such that the event location only overlapped the image bounds at the upperleft corner.", "labels": ["OB"]}, "6": {"text": "However, there is also a problem in that getImageBounds() doesn't return a rectangle with any dimensions many times.", "labels": ["OB"]}, "7": {"text": "With the standard properties for things like project, there are no expandable properties other than the \"info\" category.", "labels": []}, "8": {"text": "But in our editor (Java Visual Editor) we have many such properties.", "labels": []}, "9": {"text": "And during testing, even though there were some entries that showed a +/-, the getImageBounds() returned a zero-sized rectangle for all of them.", "labels": ["OB", "EB"]}, "10": {"text": "Though it wasn't consistent.", "labels": ["OB"]}, "11": {"text": "It would return zero-sized most of the time, but not all of the time.", "labels": ["OB"]}, "12": {"text": "This makes the property sheet unusable for expanded properties and categories.", "labels": []}}}