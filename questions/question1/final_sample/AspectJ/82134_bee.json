{"code": 200, "status": "success", "bug_report": {"0": {"text": "Bug 82134  AspectJ 5 M2 should implement backwards compatibility for binary aspect form.", "labels": ["EB"]}, "1": {"text": "Hi Adrian,  thanks for the detailed explanation of the compatibility questions.", "labels": []}, "2": {"text": "That  explains the problem I observed.", "labels": []}, "3": {"text": "> * An AspectJ program should always be run with the aspectjrt.jar runtime  > library that accompanies the distribution containing the compiler/weaver  > used to build it.", "labels": ["EB"]}, "4": {"text": "Interesting point.", "labels": []}, "5": {"text": "Which one?", "labels": []}, "6": {"text": "The one that is used to compile it or the  one that is used to weave it?", "labels": []}, "7": {"text": "> However, instead of some IOException, what you should see is a nice  > message saying that the aspect was produced by a more recent version of  > AspectJ and cannot be read.", "labels": ["OB", "EB"]}, "8": {"text": "Likewise, if you load a pre-aspectj 5 aspect  > into the AspectJ 5 weaver right now, you'll also see an IOException  > (odds-on).", "labels": ["OB", "EB", "SR"]}, "9": {"text": "In M2 we'll detect that and use the back-level loaders to read  > it in.", "labels": ["OB"]}, "10": {"text": "Okay.", "labels": ["OB"]}, "11": {"text": "Is there a bug to track this?", "labels": []}, "12": {"text": "I really would like to update the  weaver of my weaving runtime but only if it allows to load/weave  asepects that are compiled with any of the AJDT versions that are out  right now (AJDT 1.1.x and AJDT 1.2.0Mx).", "labels": []}}}